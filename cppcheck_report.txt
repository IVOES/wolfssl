IDE/AURIX/Cpu0_Main.c:36:1: error: There is an unknown macro here somewhere. Configuration is required. If IFX_ALIGN is a macro then please configure it. [unknownMacro]
IFX_ALIGN(4) IfxCpu_syncEvent g_cpuSyncEvent = 0;
^
IDE/AURIX/wolf_main.c:129:22: style: Variable 'args.return_code' is reassigned a value before the old one has been used. [redundantAssignment]
    args.return_code = 0;
                     ^
IDE/AURIX/wolf_main.c:125:22: note: args.return_code is assigned
    args.return_code = NOT_COMPILED_IN; /* default */
                     ^
IDE/AURIX/wolf_main.c:129:22: note: args.return_code is overwritten
    args.return_code = 0;
                     ^
IDE/AURIX/wolf_main.c:103:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/AURIX/wolf_main.c:104:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/AURIX/wolf_main.c:133:22: style: Variable 'args.return_code' is reassigned a value before the old one has been used. [redundantAssignment]
    args.return_code = NOT_COMPILED_IN;
                     ^
IDE/AURIX/wolf_main.c:125:22: note: args.return_code is assigned
    args.return_code = NOT_COMPILED_IN; /* default */
                     ^
IDE/AURIX/wolf_main.c:133:22: note: args.return_code is overwritten
    args.return_code = NOT_COMPILED_IN;
                     ^
IDE/AURIX/wolf_main.c:138:22: style: Variable 'args.return_code' is reassigned a value before the old one has been used. [redundantAssignment]
    args.return_code = 0;
                     ^
IDE/AURIX/wolf_main.c:133:22: note: args.return_code is assigned
    args.return_code = NOT_COMPILED_IN;
                     ^
IDE/AURIX/wolf_main.c:138:22: note: args.return_code is overwritten
    args.return_code = 0;
                     ^
IDE/ECLIPSE/DEOS/tls_wolfssl.c:583:13: portability: %i in format string (no. 1) requires 'int' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
            printf("Unable to create TCP client thread, %i ", (size_t)ts);
            ^
IDE/ECLIPSE/DEOS/tls_wolfssl.c:590:13: portability: %i in format string (no. 1) requires 'int' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
            printf("Unable to create TCP server thread, %i ", (size_t)ts);
            ^
IDE/ECLIPSE/MICRIUM/wolfsslRunTests.c:57:0: information: Skipping configuration 'CURRENT_UNIX_TS' since the value of 'CURRENT_UNIX_TS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        valid = Clk_SetTS_Unix(CURRENT_UNIX_TS);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_benchmark/main/main.c:133:0: information: Skipping configuration 'CONFIG_BENCH_ARGV' since the value of 'CONFIG_BENCH_ARGV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "construct_argv arg:%s\n", CONFIG_BENCH_ARGV);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_benchmark/main/main.c:134:0: information: Skipping configuration 'CONFIG_BENCH_ARGV' since the value of 'CONFIG_BENCH_ARGV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    len = strlen(CONFIG_BENCH_ARGV);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_benchmark/main/main.c:140:0: information: Skipping configuration 'CONFIG_BENCH_ARGV' since the value of 'CONFIG_BENCH_ARGV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    memcpy(_argv, CONFIG_BENCH_ARGV, len);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_benchmark/main/main.c:231:0: information: Skipping configuration 'CONFIG_BENCH_ARGV' since the value of 'CONFIG_BENCH_ARGV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "app_main CONFIG_BENCH_ARGV = %s", WOLFSSL_BENCH_ARGV);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_benchmark/main/main.c:202:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH = %s", LIBWOLFSSL_VERSION_GIT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_benchmark/main/main.c:210:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH_DATE = %s", LIBWOLFSSL_VERSION_GIT_HASH_DATE);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_benchmark/main/main.c:206:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_SHORT_HASH = %s", LIBWOLFSSL_VERSION_GIT_SHORT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_client/main/wifi_connect.c:157:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH = %s", LIBWOLFSSL_VERSION_GIT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_client/main/wifi_connect.c:165:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH_DATE = %s", LIBWOLFSSL_VERSION_GIT_HASH_DATE);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_client/main/wifi_connect.c:161:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_SHORT_HASH = %s", LIBWOLFSSL_VERSION_GIT_SHORT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_server/main/server-tls.c:178:12: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    if((ret=wolfSSL_CTX_use_PrivateKey_buffer(ctx,
           ^
IDE/Espressif/ESP-IDF/examples/wolfssl_server/main/wifi_connect.c:156:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH = %s", LIBWOLFSSL_VERSION_GIT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_server/main/wifi_connect.c:164:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH_DATE = %s", LIBWOLFSSL_VERSION_GIT_HASH_DATE);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_server/main/wifi_connect.c:160:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_SHORT_HASH = %s", LIBWOLFSSL_VERSION_GIT_SHORT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_test/main/main.c:142:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH = %s", LIBWOLFSSL_VERSION_GIT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_test/main/main.c:150:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH_DATE = %s", LIBWOLFSSL_VERSION_GIT_HASH_DATE);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_test/main/main.c:146:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_SHORT_HASH = %s", LIBWOLFSSL_VERSION_GIT_SHORT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_test/main/main.c:130:12: style: Variable 'rc' is assigned a value that is never used. [unreadVariable]
    int rc = 0;
           ^
IDE/Espressif/ESP-IDF/examples/wolfssl_test/main/time_helper.c:59:11: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    int i = 0; /* counter for time servers */
          ^
IDE/Espressif/ESP-IDF/examples/wolfssl_test_idf/main/main.c:142:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH = %s", LIBWOLFSSL_VERSION_GIT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_test_idf/main/main.c:150:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH_DATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_HASH_DATE = %s", LIBWOLFSSL_VERSION_GIT_HASH_DATE);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_test_idf/main/main.c:146:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' since the value of 'LIBWOLFSSL_VERSION_GIT_SHORT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ESP_LOGI(TAG, "LIBWOLFSSL_VERSION_GIT_SHORT_HASH = %s", LIBWOLFSSL_VERSION_GIT_SHORT_HASH);
^
IDE/Espressif/ESP-IDF/examples/wolfssl_test_idf/main/main.c:130:12: style: Variable 'rc' is assigned a value that is never used. [unreadVariable]
    int rc = 0;
           ^
IDE/Espressif/ESP-IDF/examples/wolfssl_test_idf/main/time_helper.c:59:11: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    int i = 0; /* counter for time servers */
          ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:70:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:95:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:117:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:381:11: style: The scope of the variable 'buf' can be reduced. [variableScope]
    char* buf;
          ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:683:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:705:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:70:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:95:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:117:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:333:25: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    if(ret == 0 && (ret = mp_mul(&x, &y, &z)) != MP_OKAY) {
                        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:408:25: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    if(ret == 0 && (ret = mp_mulmod(&x, &y, &m, &z)) != MP_OKAY) {
                        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:489:25: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    if(ret == 0 && (ret = mp_exptmod(&x, &y, &m, &z)) != MP_OKAY) {
                        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:683:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:137:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:137:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:157:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:157:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:1128:26: style: Condition 'rsa_elapsedTime==0' is always true [knownConditionTrueFalse]
    while(rsa_elapsedTime==0){ vTaskDelay(1); }
                         ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:727:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:727:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:749:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Espressif/ESP-IDF/test/test_wolfssl.c:749:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/GCC-ARM/Source/armtarget.c:145:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("R0 = %lx\n", stacked_r0);
    ^
IDE/GCC-ARM/Source/armtarget.c:146:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("R1 = %lx\n", stacked_r1);
    ^
IDE/GCC-ARM/Source/armtarget.c:147:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("R2 = %lx\n", stacked_r2);
    ^
IDE/GCC-ARM/Source/armtarget.c:148:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("R3 = %lx\n", stacked_r3);
    ^
IDE/GCC-ARM/Source/armtarget.c:149:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("R12 = %lx\n", stacked_r12);
    ^
IDE/GCC-ARM/Source/armtarget.c:150:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("LR [R14] = %lx  subroutine call return address\n", stacked_lr);
    ^
IDE/GCC-ARM/Source/armtarget.c:151:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("PC [R15] = %lx  program counter\n", stacked_pc);
    ^
IDE/GCC-ARM/Source/armtarget.c:152:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("PSR = %lx\n", stacked_psr);
    ^
IDE/GCC-ARM/Source/armtarget.c:153:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("CFSR = %lx\n", _CFSR);
    ^
IDE/GCC-ARM/Source/armtarget.c:154:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("HFSR = %lx\n", _HFSR);
    ^
IDE/GCC-ARM/Source/armtarget.c:155:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("DFSR = %lx\n", _DFSR);
    ^
IDE/GCC-ARM/Source/armtarget.c:156:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("AFSR = %lx\n", _AFSR);
    ^
IDE/GCC-ARM/Source/armtarget.c:157:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("MMAR = %lx\n", _MMAR);
    ^
IDE/GCC-ARM/Source/armtarget.c:158:5: warning: %lx in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
    printf ("BFAR = %lx\n", _BFAR);
    ^
IDE/GCC-ARM/Source/benchmark_main.c:30:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/GCC-ARM/Source/benchmark_main.c:31:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/GCC-ARM/Source/test_main.c:31:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/GCC-ARM/Source/test_main.c:32:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/HEXAGON/ecc-verify-benchmark.c:78:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret, i;
        ^
IDE/HEXAGON/ecc-verify-benchmark.c:111:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret, i;
        ^
IDE/IAR-EWARM/Projects/common/minimum-startup.c:42:42: error: syntax error: ".intvec" = [syntaxError]
__root const Vector  __vector_table[100] @ ".intvec" =
                                         ^
IDE/IAR-MSP430/main.c:98:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("Rand generated: %d\r\n", result);
    ^
IDE/IAR-MSP430/main.c:185:9: style: Unused variable: start [unusedVariable]
    int start;
        ^
IDE/INTIME-RTOS/wolfExamples.c:314:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/INTIME-RTOS/wolfExamples.c:315:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/LPCXPRESSO/wolf_example/src/lpc_18xx_startup.c:89:29: error: Comparing pointers that point to different objects [comparePointers]
    while (SectionTableAddr < &__data_section_table_end) {
                            ^
IDE/LPCXPRESSO/wolf_example/src/lpc_18xx_startup.c:31:21: note: Variable declared here.
extern unsigned int __data_section_table;
                    ^
IDE/LPCXPRESSO/wolf_example/src/lpc_18xx_startup.c:87:24: note: Address of variable taken here.
    SectionTableAddr = &__data_section_table;
                       ^
IDE/LPCXPRESSO/wolf_example/src/lpc_18xx_startup.c:32:21: note: Variable declared here.
extern unsigned int __data_section_table_end;
                    ^
IDE/LPCXPRESSO/wolf_example/src/lpc_18xx_startup.c:89:31: note: Address of variable taken here.
    while (SectionTableAddr < &__data_section_table_end) {
                              ^
IDE/LPCXPRESSO/wolf_example/src/lpc_18xx_startup.c:89:29: note: Comparing pointers that point to different objects
    while (SectionTableAddr < &__data_section_table_end) {
                            ^
IDE/LPCXPRESSO/wolf_example/src/wolfssl_example.c:46:9: style: The scope of the variable 'opt' can be reduced. [variableScope]
    int opt = 0;
        ^
IDE/LPCXPRESSO/wolf_example/src/wolfssl_example.c:28:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/LPCXPRESSO/wolf_example/src/wolfssl_example.c:29:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/LPCXPRESSO/wolf_example/src/wolfssl_example.c:46:13: style: Variable 'opt' is assigned a value that is never used. [unreadVariable]
    int opt = 0;
            ^
IDE/M68K/benchmark/main.cpp:43:9: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int return_code;
        ^
IDE/M68K/testwolfcrypt/main.cpp:44:9: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int return_code;
        ^
IDE/MCUEXPRESSO/benchmark/source/run_benchmark.c:72:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:33:21: style: struct member '__FILE::handle' is never used. [unusedStructMember]
struct __FILE { int handle; /* Add whatever you need here */ };
                    ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/main.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/shell.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/shell.c:449:29: style:inconclusive: Function 'help_comm' argument 1 names different: declaration 'arg' definition 'args'. [funcArgNamesDifferent]
static void help_comm(void *args)
                            ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/shell.c:100:29: note: Function 'help_comm' argument 1 names different: declaration 'arg' definition 'args'.
extern void help_comm(void *arg) ;
                            ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/shell.c:449:29: note: Function 'help_comm' argument 1 names different: declaration 'arg' definition 'args'.
static void help_comm(void *args)
                            ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/shell.c:532:7: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    i = BackGround ;
      ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/shell.c:435:28: style:inconclusive: Function 'dbg_comm' argument 1 names different: declaration 'arg' definition 'args'. [funcArgNamesDifferent]
static void dbg_comm(void *args)
                           ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/shell.c:99:28: note: Function 'dbg_comm' argument 1 names different: declaration 'arg' definition 'args'.
extern void dbg_comm(void *arg) ;
                           ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/shell.c:435:28: note: Function 'dbg_comm' argument 1 names different: declaration 'arg' definition 'args'.
static void dbg_comm(void *args)
                           ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/shell.c:357:23: style: Condition 'BackGround!=0' is always false [knownConditionTrueFalse]
        if(BackGround != 0) {
                      ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:230:27: style: Redundant condition: If 'EXPR == '\n'', the comparison 'EXPR == '\012'' is always true. [redundantCondition]
        if(str[i] == '\n' || str[i] == '\012' || str[i] == '\015')  {
                          ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:238:23: style: Condition 'i>0' is always true [knownConditionTrueFalse]
                i = (i>0 ? (i-2) : -1 ) ;
                      ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:236:16: note: Assuming condition 'i' is true
            if(i) { /* erace one char */
               ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:238:23: note: Condition 'i>0' is always true
                i = (i>0 ? (i-2) : -1 ) ;
                      ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:238:34: style: Same value in both branches of ternary operator. [duplicateValueTernary]
                i = (i>0 ? (i-2) : -1 ) ;
                                 ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:179:24: style:inconclusive: Function 'wolfssl_sleep' argument 1 names different: declaration 'sec' definition 't'. [funcArgNamesDifferent]
void wolfssl_sleep(int t)
                       ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.h:85:31: note: Function 'wolfssl_sleep' argument 1 names different: declaration 'sec' definition 't'.
extern void wolfssl_sleep(int sec) ;
                              ^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:179:24: note: Function 'wolfssl_sleep' argument 1 names different: declaration 'sec' definition 't'.
void wolfssl_sleep(int t)
                       ^
IDE/MDK5-ARM/Projects/SimpleClient/main.c:173:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/MDK5-ARM/Projects/SimpleClient/main.c:174:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/MDK5-ARM/Projects/SimpleServer/main.c:195:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/MDK5-ARM/Projects/SimpleServer/main.c:196:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:329:27: style: Redundant condition: If 'EXPR == '\n'', the comparison 'EXPR == '\012'' is always true. [redundantCondition]
        if(str[i] == '\n' || str[i] == '\012' || str[i] == '\015')  {
                          ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:337:23: style: Condition 'i>0' is always true [knownConditionTrueFalse]
                i = (i>0 ? (i-2) : -1 ) ;
                      ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:335:16: note: Assuming condition 'i' is true
            if(i) { /* erace one char */
               ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:337:23: note: Condition 'i>0' is always true
                i = (i>0 ? (i-2) : -1 ) ;
                      ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:337:34: style: Same value in both branches of ternary operator. [duplicateValueTernary]
                i = (i>0 ? (i-2) : -1 ) ;
                                 ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:490:29: style:inconclusive: Function 'help_comm' argument 1 names different: declaration 'arg' definition 'args'. [funcArgNamesDifferent]
static void help_comm(void *args)
                            ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:107:29: note: Function 'help_comm' argument 1 names different: declaration 'arg' definition 'args'.
extern void help_comm(void *arg) ;
                            ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:490:29: note: Function 'help_comm' argument 1 names different: declaration 'arg' definition 'args'.
static void help_comm(void *args)
                            ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:622:7: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    i = BackGround ;
      ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:476:28: style:inconclusive: Function 'dbg_comm' argument 1 names different: declaration 'arg' definition 'args'. [funcArgNamesDifferent]
static void dbg_comm(void *args)
                           ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:106:28: note: Function 'dbg_comm' argument 1 names different: declaration 'arg' definition 'args'.
extern void dbg_comm(void *arg) ;
                           ^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:476:28: note: Function 'dbg_comm' argument 1 names different: declaration 'arg' definition 'args'.
static void dbg_comm(void *args)
                           ^
IDE/MQX/server-tls.c:39:24: style: The scope of the variable 'connd' can be reduced. [variableScope]
    int                connd;
                       ^
IDE/MQX/server-tls.c:44:24: style: The scope of the variable 'len' can be reduced. [variableScope]
    size_t             len;
                       ^
IDE/MQX/server-tls.c:46:24: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int                ret;
                       ^
IDE/MQX/server-tls.c:51:18: style: The scope of the variable 'ssl' can be reduced. [variableScope]
    WOLFSSL*     ssl;
                 ^
IDE/MSVS-2019-AZSPHERE/server/server.c:60:24: style: The scope of the variable 'connd' can be reduced. [variableScope]
    int                connd;
                       ^
IDE/MSVS-2019-AZSPHERE/server/server.c:65:24: style: The scope of the variable 'len' can be reduced. [variableScope]
    size_t             len;
                       ^
IDE/MSVS-2019-AZSPHERE/server/server.c:67:24: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int                ret;
                       ^
IDE/RISCV/SIFIVE-HIFIVE1/main.c:146:0: information: Skipping configuration 'NO_CLOCK_SPEEDUP;USE_CLOCK_HZ' since the value of 'USE_CLOCK_HZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    printf("Setting clock to %dMHz\n", (int)(USE_CLOCK_HZ/1000000));
^
IDE/RISCV/SIFIVE-HIFIVE1/main.c:148:0: information: Skipping configuration 'NO_CLOCK_SPEEDUP;USE_CLOCK_HZ' since the value of 'USE_CLOCK_HZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        &__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock, USE_CLOCK_HZ
^
IDE/ROWLEY-CROSSWORKS-ARM/benchmark_main.c:34:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/ROWLEY-CROSSWORKS-ARM/benchmark_main.c:35:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/ROWLEY-CROSSWORKS-ARM/kinetis_hw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/ROWLEY-CROSSWORKS-ARM/kinetis_hw.c:136:0: information: Skipping configuration 'FREESCALE;K_SERIES;SIM_SCGC5_PORTC_MASK' since the value of 'SIM_SCGC5_PORTC_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        | SIM_SCGC5_PORTC_MASK
^
IDE/ROWLEY-CROSSWORKS-ARM/kinetis_hw.c:139:0: information: Skipping configuration 'FREESCALE;K_SERIES;SIM_SCGC5_PORTD_MASK' since the value of 'SIM_SCGC5_PORTD_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        | SIM_SCGC5_PORTD_MASK
^
IDE/ROWLEY-CROSSWORKS-ARM/kinetis_hw.c:142:0: information: Skipping configuration 'FREESCALE;K_SERIES;SIM_SCGC5_PORTE_MASK' since the value of 'SIM_SCGC5_PORTE_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        | SIM_SCGC5_PORTE_MASK
^
IDE/ROWLEY-CROSSWORKS-ARM/test_main.c:35:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/ROWLEY-CROSSWORKS-ARM/test_main.c:36:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/Renesas/cs+/Projects/t4_demo/wolf_client.c:127:31: style:inconclusive: Function 'wolfSSL_TLS_client' argument 1 names different: declaration 'ctx' definition 'v_ctx'. [funcArgNamesDifferent]
void wolfSSL_TLS_client(void *v_ctx, func_args *args)
                              ^
IDE/Renesas/cs+/Projects/t4_demo/wolf_demo.h:17:31: note: Function 'wolfSSL_TLS_client' argument 1 names different: declaration 'ctx' definition 'v_ctx'.
void wolfSSL_TLS_client(void *ctx, func_args *args);
                              ^
IDE/Renesas/cs+/Projects/t4_demo/wolf_client.c:127:31: note: Function 'wolfSSL_TLS_client' argument 1 names different: declaration 'ctx' definition 'v_ctx'.
void wolfSSL_TLS_client(void *v_ctx, func_args *args)
                              ^
IDE/Renesas/cs+/Projects/t4_demo/wolf_server.c:126:31: style:inconclusive: Function 'wolfSSL_TLS_server' argument 1 names different: declaration 'ctx' definition 'v_ctx'. [funcArgNamesDifferent]
void wolfSSL_TLS_server(void *v_ctx, func_args *args)
                              ^
IDE/Renesas/cs+/Projects/t4_demo/wolf_demo.h:18:31: note: Function 'wolfSSL_TLS_server' argument 1 names different: declaration 'ctx' definition 'v_ctx'.
void wolfSSL_TLS_server(void *ctx, func_args *args);
                              ^
IDE/Renesas/cs+/Projects/t4_demo/wolf_server.c:126:31: note: Function 'wolfSSL_TLS_server' argument 1 names different: declaration 'ctx' definition 'v_ctx'.
void wolfSSL_TLS_server(void *v_ctx, func_args *args)
                              ^
IDE/Renesas/cs+/Projects/t4_demo/wolf_server.c:73:26: style: Variable 'cert' is assigned a value that is never used. [unreadVariable]
        char *cert       = serv_ecc_der_256;
                         ^
IDE/Renesas/cs+/Projects/test/test_main.c:38:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/Renesas/cs+/Projects/test/test_main.c:39:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/Renesas/cs+/Projects/test/test_main.c:40:12: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int    return_code;
           ^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:65:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:66:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:67:12: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int    return_code;
           ^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:122:10: style: Variable 'ercd' is reassigned a value before the old one has been used. [redundantAssignment]
    ercd = tcpudp_open(tcpudp_work);
         ^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:115:10: note: ercd is assigned
    ercd = lan_open();
         ^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:122:10: note: ercd is overwritten
    ercd = tcpudp_open(tcpudp_work);
         ^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:194:26: style: The comparison 'cipherlist_sz > 0' is always false. [knownConditionTrueFalse]
        if(cipherlist_sz > 0 ) printf("cipher : %s\n", cipherlist[i]);
                         ^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:183:31: note: 'cipherlist_sz' is assigned value '0' here.
    const int cipherlist_sz = 0;
                              ^
IDE/Renesas/e2studio/Projects/test/src/test_main.c:194:26: note: The comparison 'cipherlist_sz > 0' is always false.
        if(cipherlist_sz > 0 ) printf("cipher : %s\n", cipherlist[i]);
                         ^
IDE/Renesas/e2studio/Projects/test/src/wolf_server.c:85:26: style: Variable 'cert' is assigned a value that is never used. [unreadVariable]
        char *cert       = serv_ecc_der_256;
                         ^
IDE/Renesas/e2studio/Projects/test/src/wolf_server.c:137:13: style: Condition 'doCliCertCheck' is always true [knownConditionTrueFalse]
        if (doCliCertCheck) {
            ^
IDE/Renesas/e2studio/Projects/test/src/wolf_server.c:135:26: note: Assignment 'doCliCertCheck=1', assigned value is 1
        doCliCertCheck = 1;
                         ^
IDE/Renesas/e2studio/Projects/test/src/wolf_server.c:137:13: note: Condition 'doCliCertCheck' is always true
        if (doCliCertCheck) {
            ^
IDE/Renesas/e2studio/RA6M3/server-wolfssl/src/wolfssl_thread_entry.c:120:13: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
        ret = wolfSSL_CTX_use_certificate_buffer(ctx, CERT_BUF, SIZEOF_CERT_BUF,
            ^
IDE/Renesas/e2studio/RA6M3/server-wolfssl/src/wolfssl_thread_entry.c:108:13: note: ret is assigned
        ret = WOLFSSL_FAILURE;
            ^
IDE/Renesas/e2studio/RA6M3/server-wolfssl/src/wolfssl_thread_entry.c:120:13: note: ret is overwritten
        ret = wolfSSL_CTX_use_certificate_buffer(ctx, CERT_BUF, SIZEOF_CERT_BUF,
            ^
IDE/Renesas/e2studio/RA6M4/test/src/test_main.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/Renesas/e2studio/RA6M4/test/src/test_main.c:114:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/Renesas/e2studio/RA6M4/test/src/test_main.c:115:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/Renesas/e2studio/RA6M4/test/src/test_main.c:116:12: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int    return_code;
           ^
IDE/Renesas/e2studio/RA6M4/test/src/test_main.c:325:11: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
    int j = 0;
          ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:982:10: style: Variable 'xRet' is reassigned a value before the old one has been used. [redundantAssignment]
    xRet = xTaskCreate(tskSha256_Test1, "sha256_test1",
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:979:10: note: xRet is assigned
    xRet = pdPASS;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:982:10: note: xRet is overwritten
    xRet = xTaskCreate(tskSha256_Test1, "sha256_test1",
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1007:13: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
        ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:997:21: note: ret is assigned
                ret = -1;
                    ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1007:13: note: ret is overwritten
        ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1088:13: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
        ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1078:21: note: ret is assigned
                ret = -1;
                    ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1088:13: note: ret is overwritten
        ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1172:13: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
        ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1162:21: note: ret is assigned
                ret = -1;
                    ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1172:13: note: ret is overwritten
        ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1215:10: style: Variable 'xRet' is reassigned a value before the old one has been used. [redundantAssignment]
    xRet = xTaskCreate(tskSha256_Test1, "sha256_test1",
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1212:10: note: xRet is assigned
    xRet = pdPASS;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1215:10: note: xRet is overwritten
    xRet = xTaskCreate(tskSha256_Test1, "sha256_test1",
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1275:13: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
        ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1263:21: note: ret is assigned
                ret = -1;
                    ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1275:13: note: ret is overwritten
        ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:929:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:947:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:929:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:947:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1022:10: style: Unused variable: info_aes1 [unusedVariable]
    Info info_aes1;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1023:10: style: Unused variable: info_aes2 [unusedVariable]
    Info info_aes2;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1024:10: style: Unused variable: info_aes256_1 [unusedVariable]
    Info info_aes256_1;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1025:10: style: Unused variable: info_aes256_2 [unusedVariable]
    Info info_aes256_2;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1103:10: style: Unused variable: info_aes1 [unusedVariable]
    Info info_aes1;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1104:10: style: Unused variable: info_aes2 [unusedVariable]
    Info info_aes2;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1105:10: style: Unused variable: info_aes256_1 [unusedVariable]
    Info info_aes256_1;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1106:10: style: Unused variable: info_aes256_2 [unusedVariable]
    Info info_aes256_2;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1186:10: style: Unused variable: info_aes128cbc [unusedVariable]
    Info info_aes128cbc;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1187:10: style: Unused variable: info_aes128gcm [unusedVariable]
    Info info_aes128gcm;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1188:10: style: Unused variable: info_aes256cbc [unusedVariable]
    Info info_aes256cbc;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1189:10: style: Unused variable: info_aes256gcm [unusedVariable]
    Info info_aes256gcm;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1044:10: style: Variable 'xRet' is reassigned a value before the old one has been used. [redundantAssignment]
    xRet = xTaskCreate(tskAes128_Cbc_Test, "aes_cbc_tes1t",
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1039:10: note: xRet is assigned
    xRet = pdPASS;
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:1044:10: note: xRet is overwritten
    xRet = xTaskCreate(tskAes128_Cbc_Test, "aes_cbc_tes1t",
         ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:580:16: style: The comparison 'result != 0' is always false. [knownConditionTrueFalse]
    if (result != 0) {
               ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:555:19: note: 'result' is assigned value '0' here.
    int  result = 0;
                  ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:580:16: note: The comparison 'result != 0' is always false.
    if (result != 0) {
               ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:163:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:623:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:163:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:623:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:135:9: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
    ret = wc_AesInit(aes, NULL, INVALID_DEVID);
        ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:132:13: note: ret is assigned
        ret = -1;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:135:9: note: ret is overwritten
    ret = wc_AesInit(aes, NULL, INVALID_DEVID);
        ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:275:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:467:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:275:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RA6M4/test/src/wolfssl_sce_unit_test.c:467:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/test_main.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/test_main.c:171:10: style: Variable 'ercd' is reassigned a value before the old one has been used. [redundantAssignment]
    ercd = tcpudp_open(tcpudp_work);
         ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/test_main.c:164:10: note: ercd is assigned
    ercd = lan_open();
         ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/test_main.c:171:10: note: ercd is overwritten
    ercd = tcpudp_open(tcpudp_work);
         ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/test_main.c:73:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/test_main.c:74:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/test_main.c:75:12: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int    return_code;
           ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/test_main.c:193:9: style: Variable 'ret' is not assigned a value. [unassignedVariable]
    int ret;
        ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/test_main.c:195:14: style: Variable 'channel' is not assigned a value. [unassignedVariable]
    uint32_t channel;
             ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/wolf_server.c:139:13: style: Condition 'doCliCertCheck' is always true [knownConditionTrueFalse]
        if (doCliCertCheck) {
            ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/wolf_server.c:137:26: note: Assignment 'doCliCertCheck=1', assigned value is 1
        doCliCertCheck = 1;
                         ^
IDE/Renesas/e2studio/RX65N/GR-ROSE/test/src/wolf_server.c:139:13: note: Condition 'doCliCertCheck' is always true
        if (doCliCertCheck) {
            ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:277:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:256:13: note: First condition
    if (ret == 0) {
            ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:277:13: note: Second condition
    if (ret == 0) {
            ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:518:26: style: The comparison 'cipherlist_sz > 0' is always false. [knownConditionTrueFalse]
        if(cipherlist_sz > 0 ) printf("cipher : %s\n", cipherlist[i]);
                         ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:477:31: note: 'cipherlist_sz' is assigned value '0' here.
    const int cipherlist_sz = 0;
                              ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:518:26: note: The comparison 'cipherlist_sz > 0' is always false.
        if(cipherlist_sz > 0 ) printf("cipher : %s\n", cipherlist[i]);
                         ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:222:33: style: Variable 'addrBuff' is assigned a value that is never used. [unreadVariable]
    char    addrBuff[ADDR_SIZE] = {0};
                                ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:264:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:256:13: note: First condition
    if (ret == 0) {
            ^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:264:13: note: Second condition
    if (ret == 0) {
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/server/simple_tls_server.c:80:29: style: Variable 'clientCert' is assigned a value that is never used. [unreadVariable]
        char *clientCert    = "./certs/client-cert.pem";
                            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/server/simple_tls_server.c:93:45: style: Variable 'clientCert' is assigned a value that is never used. [unreadVariable]
            const unsigned char *clientCert = client_cert_der_2048;
                                            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/test_main.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/test_main.c:72:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/test_main.c:73:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/test_main.c:74:12: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int    return_code;
           ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/test_main.c:179:14: style: Variable 'channel' is not assigned a value. [unassignedVariable]
    uint32_t channel;
             ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/test_main.c:115:10: style: Variable 'ercd' is reassigned a value before the old one has been used. [redundantAssignment]
    ercd = tcpudp_open(tcpudp_work);
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/test_main.c:108:10: note: ercd is assigned
    ercd = lan_open();
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/test_main.c:115:10: note: ercd is overwritten
    ercd = tcpudp_open(tcpudp_work);
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/test_main.c:182:23: style: Variable 'cipherlist_sz' is assigned a value that is never used. [unreadVariable]
    int cipherlist_sz = 1;
                      ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_demo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_demo.c:269:33: style: Variable 'addrBuff' is assigned a value that is never used. [unreadVariable]
    char    addrBuff[ADDR_SIZE] = {0};
                                ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_demo.c:488:17: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
            ret = -1;
                ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_demo.c:493:17: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
            ret = 0;
                ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_demo.c:576:11: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
    int j = 0;
          ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:747:10: style: Variable 'xRet' is reassigned a value before the old one has been used. [redundantAssignment]
    xRet = xTaskCreate(tskSha_Test, "sha_test",
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:744:10: note: xRet is assigned
    xRet = pdPASS;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:747:10: note: xRet is overwritten
    xRet = xTaskCreate(tskSha_Test, "sha_test",
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:774:13: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
        ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:764:21: note: ret is assigned
                ret = -1;
                    ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:774:13: note: ret is overwritten
        ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:855:13: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
        ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:845:21: note: ret is assigned
                ret = -1;
                    ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:855:13: note: ret is overwritten
        ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:935:13: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
        ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:925:21: note: ret is assigned
                ret = -1;
                    ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:935:13: note: ret is overwritten
        ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:973:10: style: Variable 'xRet' is reassigned a value before the old one has been used. [redundantAssignment]
    xRet = xTaskCreate(tskSha_Test, "sha_test",
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:970:10: note: xRet is assigned
    xRet = pdPASS;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:973:10: note: xRet is overwritten
    xRet = xTaskCreate(tskSha_Test, "sha_test",
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:1011:13: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
        ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:1001:21: note: ret is assigned
                ret = -1;
                    ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:1011:13: note: ret is overwritten
        ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:691:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:710:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:691:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:710:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:789:10: style: Unused variable: info_aes1 [unusedVariable]
    Info info_aes1;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:790:10: style: Unused variable: info_aes2 [unusedVariable]
    Info info_aes2;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:791:10: style: Unused variable: info_aes256_1 [unusedVariable]
    Info info_aes256_1;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:792:10: style: Unused variable: info_aes256_2 [unusedVariable]
    Info info_aes256_2;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:870:10: style: Unused variable: info_aes1 [unusedVariable]
    Info info_aes1;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:871:10: style: Unused variable: info_aes2 [unusedVariable]
    Info info_aes2;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:872:10: style: Unused variable: info_aes256_1 [unusedVariable]
    Info info_aes256_1;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:873:10: style: Unused variable: info_aes256_2 [unusedVariable]
    Info info_aes256_2;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:949:10: style: Unused variable: info_aes256cbc [unusedVariable]
    Info info_aes256cbc;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:950:10: style: Unused variable: info_aes256gcm [unusedVariable]
    Info info_aes256gcm;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:811:10: style: Variable 'xRet' is reassigned a value before the old one has been used. [redundantAssignment]
    xRet = xTaskCreate(tskAes128_Cbc_Test, "aes_cbc_tes1t",
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:806:10: note: xRet is assigned
    xRet = pdPASS;
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:811:10: note: xRet is overwritten
    xRet = xTaskCreate(tskAes128_Cbc_Test, "aes_cbc_tes1t",
         ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:563:16: style: The comparison 'result != 0' is always false. [knownConditionTrueFalse]
    if (result != 0) {
               ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:538:19: note: 'result' is assigned value '0' here.
    int  result = 0;
                  ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:563:16: note: The comparison 'result != 0' is always false.
    if (result != 0) {
               ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:165:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:608:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:165:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:608:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:282:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:473:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:282:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:473:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
IDE/STARCORE/starcore_test.c:43:9: style: struct member 'test_func_args::argc' is never used. [unusedStructMember]
    int argc;
        ^
IDE/STARCORE/starcore_test.c:44:12: style: struct member 'test_func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
IDE/STARCORE/starcore_test.c:45:9: style: struct member 'test_func_args::return_code' is never used. [unusedStructMember]
    int return_code;
        ^
IDE/STM32Cube/wolfssl_example.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
IDE/STM32Cube/wolfssl_example.c:767:32: style: The comparison 'ret != 0' is always false. [knownConditionTrueFalse]
    if (cli_ctx == NULL || ret != 0) {
                               ^
IDE/STM32Cube/wolfssl_example.c:729:15: note: 'ret' is assigned value '0' here.
    int ret = 0, readBufSz;
              ^
IDE/STM32Cube/wolfssl_example.c:767:32: note: The comparison 'ret != 0' is always false.
    if (cli_ctx == NULL || ret != 0) {
                               ^
IDE/STM32Cube/wolfssl_example.c:1043:32: style: The comparison 'ret != 0' is always false. [knownConditionTrueFalse]
    if (srv_ctx == NULL || ret != 0) {
                               ^
IDE/STM32Cube/wolfssl_example.c:1008:15: note: 'ret' is assigned value '0' here.
    int ret = 0, len = 0, readBufSz;
              ^
IDE/STM32Cube/wolfssl_example.c:1043:32: note: The comparison 'ret != 0' is always false.
    if (srv_ctx == NULL || ret != 0) {
                               ^
IDE/STM32Cube/wolfssl_example.c:1470:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
IDE/STM32Cube/wolfssl_example.c:1308:24: style: Condition 'argShowVerbose>=3' is always false [knownConditionTrueFalse]
    if (argShowVerbose >= 3) {
                       ^
IDE/STM32Cube/wolfssl_example.c:1302:26: note: Assignment 'argShowVerbose=0', assigned value is 0
    int argShowVerbose = SHOW_VERBOSE;
                         ^
IDE/STM32Cube/wolfssl_example.c:1308:24: note: Condition 'argShowVerbose>=3' is always false
    if (argShowVerbose >= 3) {
                       ^
IDE/VS-AZURE-SPHERE/server/server.c:55:24: style: The scope of the variable 'connd' can be reduced. [variableScope]
    int                connd;
                       ^
IDE/VS-AZURE-SPHERE/server/server.c:60:24: style: The scope of the variable 'len' can be reduced. [variableScope]
    size_t             len;
                       ^
IDE/VS-AZURE-SPHERE/server/server.c:62:24: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int                ret;
                       ^
IDE/VisualDSP/wolf_tasks.c:34:10: style: struct member 'wolf_result_t::len' is never used. [unusedStructMember]
   int   len;
         ^
IDE/XilinxSDK/wolfssl_example.c:53:9: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int argc;
        ^
IDE/XilinxSDK/wolfssl_example.c:54:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char **argv;
           ^
IDE/iotsafe/devices.c:66:9: style: Variable 'reg' is reassigned a value before the old one has been used. [redundantAssignment]
    reg = GPIO_PUPD(GPIOB_BASE) & (0x03 << (USART1_PIN_TX * 2));
        ^
IDE/iotsafe/devices.c:64:9: note: reg is assigned
    reg = GPIO_PUPD(GPIOG_BASE) & (0x03 << (USART1_PIN_RX * 2));
        ^
IDE/iotsafe/devices.c:66:9: note: reg is overwritten
    reg = GPIO_PUPD(GPIOB_BASE) & (0x03 << (USART1_PIN_TX * 2));
        ^
IDE/iotsafe/main.c:46:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
IDE/iotsafe/memory-tls.c:193:9: warning: %lu in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
        printf("Loaded Server CA from IoT-Safe, size = %lu\n",
        ^
IDE/iotsafe/memory-tls.c:218:9: warning: %lu in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
        printf("Loaded Server certificate from IoT-Safe, size = %lu\n",
        ^
IDE/iotsafe/memory-tls.c:237:9: warning: %lu in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
        printf("Loaded Client certificate from IoT-Safe, size = %lu\n",
        ^
IDE/iotsafe/memory-tls.c:158:16: style: Variable 'ca_cert_id' is assigned a value that is never used. [unreadVariable]
    ca_cert_id = CRT_SERVER_FILE_ID;
               ^
IDE/iotsafe/memory-tls.c:159:18: style: Variable 'serv_cert_id' is assigned a value that is never used. [unreadVariable]
    serv_cert_id = CRT_SERVER_FILE_ID;
                 ^
IDE/iotsafe/startup.c:49:16: error: Comparing pointers that point to different objects [comparePointers]
    while (dst < (unsigned int *)&_end_data) {
               ^
IDE/iotsafe/startup.c:25:21: note: Variable declared here.
extern unsigned int _start_data;
                    ^
IDE/iotsafe/startup.c:47:28: note: Address of variable taken here.
    dst = (unsigned int *) &_start_data;
                           ^
IDE/iotsafe/startup.c:26:21: note: Variable declared here.
extern unsigned int _end_data;
                    ^
IDE/iotsafe/startup.c:49:34: note: Address of variable taken here.
    while (dst < (unsigned int *)&_end_data) {
                                 ^
IDE/iotsafe/startup.c:49:16: note: Comparing pointers that point to different objects
    while (dst < (unsigned int *)&_end_data) {
               ^
IDE/iotsafe/startup.c:57:16: error: Comparing pointers that point to different objects [comparePointers]
    while (dst < (unsigned int *)&_end_bss) {
               ^
IDE/iotsafe/startup.c:27:21: note: Variable declared here.
extern unsigned int _start_bss;
                    ^
IDE/iotsafe/startup.c:56:11: note: Address of variable taken here.
    dst = &_start_bss;
          ^
IDE/iotsafe/startup.c:28:21: note: Variable declared here.
extern unsigned int _end_bss;
                    ^
IDE/iotsafe/startup.c:57:34: note: Address of variable taken here.
    while (dst < (unsigned int *)&_end_bss) {
                                 ^
IDE/iotsafe/startup.c:57:16: note: Comparing pointers that point to different objects
    while (dst < (unsigned int *)&_end_bss) {
               ^
IDE/iotsafe/startup.c:63:29: error: Subtracting pointers that point to different objects [comparePointers]
    avail_mem = &_end_stack - &_start_heap;
                            ^
IDE/iotsafe/startup.c:29:21: note: Variable declared here.
extern unsigned int _end_stack;
                    ^
IDE/iotsafe/startup.c:63:17: note: Address of variable taken here.
    avail_mem = &_end_stack - &_start_heap;
                ^
IDE/iotsafe/startup.c:30:21: note: Variable declared here.
extern unsigned int _start_heap;
                    ^
IDE/iotsafe/startup.c:63:31: note: Address of variable taken here.
    avail_mem = &_end_stack - &_start_heap;
                              ^
IDE/iotsafe/startup.c:63:29: note: Subtracting pointers that point to different objects
    avail_mem = &_end_stack - &_start_heap;
                            ^
examples/asn1/asn1.c:66:12: style: The scope of the variable 'read_len' can be reduced. [variableScope]
    size_t read_len;
           ^
examples/benchmark/tls_bench.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/benchmark/tls_bench.c:2277:15: style: Variable 'args.argc' is assigned a value that is never used. [unreadVariable]
    args.argc = argc;
              ^
examples/benchmark/tls_bench.c:2278:15: style: Variable 'args.argv' is assigned a value that is never used. [unreadVariable]
    args.argv = argv;
              ^
examples/client/client.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 156 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/client/client.c:3218:23: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (useClientCert && !loadCertKeyIntoSSLObj
                      ^
examples/client/client.c:3197:23: note: First condition
    if (useClientCert && !loadCertKeyIntoSSLObj){
                      ^
examples/client/client.c:3218:23: note: Second condition
    if (useClientCert && !loadCertKeyIntoSSLObj
                      ^
examples/client/client.c:163:20: style: Variable 'select_ret' is assigned a value that is never used. [unreadVariable]
    int select_ret = 0;
                   ^
examples/client/client.c:493:11: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    int i = 0, err, ret;
          ^
examples/echoclient/echoclient.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/echoserver/echoserver.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/echoserver/echoserver.c:183:15: style: Condition 'doPSK==0' is always true [knownConditionTrueFalse]
    if (doPSK == 0) {
              ^
examples/echoserver/echoserver.c:127:13: note: Assignment 'doPSK=0', assigned value is 0
    doPSK = 0;
            ^
examples/echoserver/echoserver.c:183:15: note: Condition 'doPSK==0' is always true
    if (doPSK == 0) {
              ^
examples/echoserver/echoserver.c:435:28: style: Condition 'echoSz>(int)sizeof(command)' is always false [knownConditionTrueFalse]
                if (echoSz > (int)sizeof(command)) {
                           ^
examples/echoserver/echoserver.c:434:44: note: Assignment 'echoSz=(int)strlen(resp)+1', assigned value is 130
                echoSz = (int)strlen(resp) + 1;
                                           ^
examples/echoserver/echoserver.c:435:28: note: Condition 'echoSz>(int)sizeof(command)' is always false
                if (echoSz > (int)sizeof(command)) {
                           ^
examples/echoserver/echoserver.c:183:15: style: Condition 'doPSK==0' is always false [knownConditionTrueFalse]
    if (doPSK == 0) {
              ^
examples/echoserver/echoserver.c:125:13: note: Assignment 'doPSK=1', assigned value is 1
    doPSK = 1;
            ^
examples/echoserver/echoserver.c:183:15: note: Condition 'doPSK==0' is always false
    if (doPSK == 0) {
              ^
examples/echoserver/echoserver.c:254:9: style: Condition 'doPSK' is always true [knownConditionTrueFalse]
    if (doPSK) {
        ^
examples/echoserver/echoserver.c:125:13: note: Assignment 'doPSK=1', assigned value is 1
    doPSK = 1;
            ^
examples/echoserver/echoserver.c:254:9: note: Condition 'doPSK' is always true
    if (doPSK) {
        ^
examples/server/server.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 133 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/server/server.c:2924:45: style: The if condition is the same as the previous if condition [duplicateCondition]
    if ((!usePsk || usePskPlus) && !useAnon &&
                                            ^
examples/server/server.c:2907:45: note: First condition
    if ((!usePsk || usePskPlus) && !useAnon && loadCertKeyIntoSSLObj) {
                                            ^
examples/server/server.c:2924:45: note: Second condition
    if ((!usePsk || usePskPlus) && !useAnon &&
                                            ^
examples/server/server.c:2295:20: style: Condition 'dtlsSCTP' is always false [knownConditionTrueFalse]
    if (dtlsUDP && dtlsSCTP) {
                   ^
examples/server/server.c:1436:23: note: Assignment 'dtlsSCTP=0', assigned value is 0
    int    dtlsSCTP = 0;
                      ^
examples/server/server.c:2295:20: note: Condition 'dtlsSCTP' is always false
    if (dtlsUDP && dtlsSCTP) {
                   ^
examples/server/server.c:3397:40: warning: Either the condition 'established_cipher_name==NULL' is redundant or there is possible null pointer dereference: established_cipher_name. [nullPointerRedundantCheck]
                if (strcmp(cipherList, established_cipher_name) &&
                                       ^
examples/server/server.c:3394:45: note: Assuming that condition 'established_cipher_name==NULL' is not redundant
                if (established_cipher_name == NULL)
                                            ^
examples/server/server.c:3397:40: note: Null pointer dereference
                if (strcmp(cipherList, established_cipher_name) &&
                                       ^
examples/server/server.c:2744:66: style: The comparison 'useAnon == 0' is always true. [knownConditionTrueFalse]
    if (doCliCertCheck && (usePsk == 0 || usePskPlus) && useAnon == 0) {
                                                                 ^
examples/server/server.c:1429:22: note: 'useAnon' is assigned value '0' here.
    int    useAnon = 0;
                     ^
examples/server/server.c:2744:66: note: The comparison 'useAnon == 0' is always true.
    if (doCliCertCheck && (usePsk == 0 || usePskPlus) && useAnon == 0) {
                                                                 ^
examples/server/server.c:331:20: style: Variable 'select_ret' is assigned a value that is never used. [unreadVariable]
    int select_ret = 0;
                   ^
linuxkm/linuxkm_memory.c:239:13: style: Condition '!warned_fpu_forbidden' is always true [knownConditionTrueFalse]
        if (! warned_fpu_forbidden)
            ^
linuxkm/linuxkm_memory.c:154:20: style: The scope of the variable '_warned_on_null' can be reduced. [variableScope]
        static int _warned_on_null = 0;
                   ^
linuxkm/module_hooks.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
linuxkm/module_hooks.c:194:31: error: Comparing pointers that point to different objects [comparePointers]
        if ((pie_rodata_start < pie_rodata_end) && // cppcheck-suppress comparePointers
                              ^
linuxkm/module_hooks.c:72:27: note: Variable declared here.
extern const unsigned int wolfCrypt_PIE_rodata_start[];
                          ^
linuxkm/module_hooks.c:174:42: note: Array decayed to pointer here.
        char *pie_rodata_start = (char *)wolfCrypt_PIE_rodata_start;
                                         ^
linuxkm/module_hooks.c:73:27: note: Variable declared here.
extern const unsigned int wolfCrypt_PIE_rodata_end[];
                          ^
linuxkm/module_hooks.c:175:40: note: Array decayed to pointer here.
        char *pie_rodata_end = (char *)wolfCrypt_PIE_rodata_end;
                                       ^
linuxkm/module_hooks.c:194:31: note: Comparing pointers that point to different objects
        if ((pie_rodata_start < pie_rodata_end) && // cppcheck-suppress comparePointers
                              ^
mcapi/crypto.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
mqx/util_lib/Sources/util.c:56:0: information: Skipping configuration 'BSPCFG_ENABLE_IO_SUBSYSTEM;BSP_DEFAULT_IO_CHANNEL_DEFINED;BSPCFG_ENABLE_ESDHC;BSP_SDCARD_ESDHC_CHANNEL;BSPCFG_ENABLE_SDHC;BSP_SDCARD_SDHC_CHANNEL;BSP_SDCARD_SDHC_CHANNEL' since the value of 'BSP_SDCARD_ESDHC_CHANNEL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 *com_handle = fopen(SDCARD_COM_CHANNEL, NULL);
^
mqx/wolfcrypt_benchmark/Sources/main.c:53:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
mqx/wolfcrypt_benchmark/Sources/main.c:54:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
mqx/wolfcrypt_benchmark/Sources/main.c:55:12: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int    return_code;
           ^
mqx/wolfcrypt_test/Sources/main.c:53:12: style: struct member 'func_args::argc' is never used. [unusedStructMember]
    int    argc;
           ^
mqx/wolfcrypt_test/Sources/main.c:54:12: style: struct member 'func_args::argv' is never used. [unusedStructMember]
    char** argv;
           ^
mqx/wolfcrypt_test/Sources/main.c:55:12: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int    return_code;
           ^
mqx/wolfssl_client/Sources/main.h:32:35: warning: Either the condition 'msg' is redundant or there is possible null pointer dereference: msg. [nullPointerRedundantCheck]
    printf("wolfssl error: %s\n", msg);
                                  ^
mqx/wolfssl_client/Sources/main.h:33:9: note: Assuming that condition 'msg' is not redundant
    if (msg)
        ^
mqx/wolfssl_client/Sources/main.h:32:35: note: Null pointer dereference
    printf("wolfssl error: %s\n", msg);
                                  ^
mqx/wolfssl_client/Sources/main.c:139:14: style: The scope of the variable 'ret' can be reduced. [variableScope]
    uint32_t ret = 0, i = 0;
             ^
mqx/wolfssl_client/Sources/main.c:139:18: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    uint32_t ret = 0, i = 0;
                 ^
src/bio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/conf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/crl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/crl.c:187:9: warning: Either the condition 'crle!=NULL' is redundant or there is possible null pointer dereference: crle. [nullPointerRedundantCheck]
    if (crle->signature != NULL)
        ^
src/crl.c:172:14: note: Assuming that condition 'crle!=NULL' is not redundant
    if (crle != NULL) {
             ^
src/crl.c:187:9: note: Null pointer dereference
    if (crle->signature != NULL)
        ^
src/crl.c:189:9: warning:inconclusive: Either the condition 'crle!=NULL' is redundant or there is possible null pointer dereference: crle. [nullPointerRedundantCheck]
    if (crle->toBeSigned != NULL)
        ^
src/crl.c:172:14: note: Assuming that condition 'crle!=NULL' is not redundant
    if (crle != NULL) {
             ^
src/crl.c:189:9: note: Null pointer dereference
    if (crle->toBeSigned != NULL)
        ^
src/crl.c:615:9: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
    ret = ParseCRL(crl->currentEntry->certs, dcrl, myBuffer, (word32)sz,
        ^
src/crl.c:590:13: note: ret is assigned
        ret = NOT_COMPILED_IN;
            ^
src/crl.c:615:9: note: ret is overwritten
    ret = ParseCRL(crl->currentEntry->certs, dcrl, myBuffer, (word32)sz,
        ^
src/crl.c:251:20: style: The scope of the variable 'mid' can be reduced. [variableScope]
    int low, high, mid;
                   ^
src/crl.c:876:21: style: Condition 'crl!=NULL' is always true [knownConditionTrueFalse]
            if (crl != NULL)
                    ^
src/crl.c:872:17: note: Assuming that condition 'crl==NULL' is not redundant
        if (crl == NULL) {
                ^
src/crl.c:876:21: note: Condition 'crl!=NULL' is always true
            if (crl != NULL)
                    ^
src/crl.c:192:9: warning:inconclusive: Either the condition 'crle!=NULL' is redundant or there is possible null pointer dereference: crle. [nullPointerRedundantCheck]
    if (crle->issuer != NULL) {
        ^
src/crl.c:172:14: note: Assuming that condition 'crle!=NULL' is not redundant
    if (crle != NULL) {
             ^
src/crl.c:192:9: note: Null pointer dereference
    if (crle->issuer != NULL) {
        ^
src/dtls.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/dtls13.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/dtls13.c:530:20: warning: Identical condition 'length<=recordHeaderLength', second condition is always false [identicalConditionAfterEarlyExit]
        if (length <= recordHeaderLength)
                   ^
src/dtls13.c:517:16: note: If condition 'length<=recordHeaderLength' is true, the function will return/exit
    if (length <= recordHeaderLength)
               ^
src/dtls13.c:530:20: note: Testing identical condition 'length<=recordHeaderLength'
        if (length <= recordHeaderLength)
                   ^
src/dtls13.c:1133:13: style: Condition 'ret!=0' is always false [knownConditionTrueFalse]
    if (ret != 0)
            ^
src/dtls13.c:1132:11: note: Assignment 'ret=0', assigned value is 0
    ret = Dtls13AddCID(ssl, flags, out, &idx);
          ^
src/dtls13.c:1133:13: note: Condition 'ret!=0' is always false
    if (ret != 0)
            ^
src/dtls13.c:1391:13: style: Condition 'ret!=0' is always false [knownConditionTrueFalse]
    if (ret != 0)
            ^
src/dtls13.c:1390:11: note: Assignment 'ret=0', assigned value is 0
    ret = Dtls13UnifiedHeaderParseCID(ssl, flags, input, inputSize, &idx);
          ^
src/dtls13.c:1391:13: note: Condition 'ret!=0' is always false
    if (ret != 0)
            ^
src/dtls13.c:437:70: style: Same expression on both sides of '||'. [duplicateExpression]
        handshakeType == finished || handshakeType == session_ticket ||
                                                                     ^
src/dtls13.c:507:9: style: The scope of the variable 'sendLength' can be reduced. [variableScope]
    int sendLength;
        ^
src/dtls13.c:508:11: style: The scope of the variable 'msg' can be reduced. [variableScope]
    byte* msg;
          ^
src/dtls13.c:897:9: style: The scope of the variable 'fragLength' can be reduced. [variableScope]
    int fragLength, rlHeaderLength;
        ^
src/dtls13.c:899:9: style: The scope of the variable 'recordLength' can be reduced. [variableScope]
    int recordLength;
        ^
src/dtls13.c:901:11: style: The scope of the variable 'output' can be reduced. [variableScope]
    byte* output;
          ^
src/dtls13.c:902:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
src/dtls13.c:970:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
src/dtls13.c:1894:18: style: The scope of the variable 'e' can be reduced. [variableScope]
    Dtls13Epoch* e;
                 ^
src/dtls13.c:1909:18: style: The scope of the variable 'e' can be reduced. [variableScope]
    Dtls13Epoch* e;
                 ^
src/dtls13.c:2478:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
src/dtls13.c:2526:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
src/dtls13.c:2586:9: style: The scope of the variable 'headerSize' can be reduced. [variableScope]
    int headerSize;
        ^
src/dtls13.c:352:16: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
    word32 idx = 0;
               ^
src/dtls13.c:2478:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
src/dtls13.c:250:11: style: Variable 'c' is assigned a value that is never used. [unreadVariable]
        c = &ssl->dtlsRecordNumberEncrypt;
          ^
src/dtls13.c:252:11: style: Variable 'c' is assigned a value that is never used. [unreadVariable]
        c = &ssl->dtlsRecordNumberDecrypt;
          ^
src/dtls13.c:2206:20: style: Variable 'encKey' is assigned a value that is never used. [unreadVariable]
            encKey = ssl->keys.client_sn_key;
                   ^
src/dtls13.c:2208:20: style: Variable 'encKey' is assigned a value that is never used. [unreadVariable]
            encKey = ssl->keys.server_sn_key;
                   ^
src/dtls13.c:2213:20: style: Variable 'decKey' is assigned a value that is never used. [unreadVariable]
            decKey = ssl->keys.server_sn_key;
                   ^
src/dtls13.c:2215:20: style: Variable 'decKey' is assigned a value that is never used. [unreadVariable]
            decKey = ssl->keys.client_sn_key;
                   ^
src/dtls13.c:2185:9: style: Unused variable: ret [unusedVariable]
    int ret;
        ^
src/internal.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 1015 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/internal.c:2871:9: style: Condition 'addSigAlgo' is always true [knownConditionTrueFalse]
    if (addSigAlgo) {
        ^
src/internal.c:2857:22: note: Assignment 'addSigAlgo=1', assigned value is 1
    int addSigAlgo = 1;
                     ^
src/internal.c:2871:9: note: Condition 'addSigAlgo' is always true
    if (addSigAlgo) {
        ^
src/internal.c:17668:24: style: Variable 'ssl->encrypt.state' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
    ssl->encrypt.state = CIPHER_STATE_BEGIN;
                       ^
src/internal.c:17614:32: note: $symbol is assigned
            ssl->encrypt.state = CIPHER_STATE_END;
                               ^
src/internal.c:17668:24: note: $symbol is overwritten
    ssl->encrypt.state = CIPHER_STATE_BEGIN;
                       ^
src/internal.c:17972:24: style: Variable 'ssl->decrypt.state' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
    ssl->decrypt.state = CIPHER_STATE_BEGIN;
                       ^
src/internal.c:17939:32: note: $symbol is assigned
            ssl->decrypt.state = CIPHER_STATE_END;
                               ^
src/internal.c:17972:24: note: $symbol is overwritten
    ssl->decrypt.state = CIPHER_STATE_BEGIN;
                       ^
src/internal.c:19510:39: style: Variable 'ssl->options.processReply' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
            ssl->options.processReply = decryptMessage;
                                      ^
src/internal.c:19472:39: note: $symbol is assigned
            ssl->options.processReply = verifyEncryptedMessage;
                                      ^
src/internal.c:19510:39: note: $symbol is overwritten
            ssl->options.processReply = decryptMessage;
                                      ^
src/internal.c:19802:39: style: Variable 'ssl->options.processReply' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
            ssl->options.processReply = runProcessingOneMessage;
                                      ^
src/internal.c:19768:39: note: $symbol is assigned
            ssl->options.processReply = runProcessingOneRecord;
                                      ^
src/internal.c:19802:39: note: $symbol is overwritten
            ssl->options.processReply = runProcessingOneMessage;
                                      ^
src/internal.c:32643:41: style: Variable 'ssl->options.asyncState' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
                ssl->options.asyncState = TLS_ASYNC_END;
                                        ^
src/internal.c:32621:41: note: $symbol is assigned
                ssl->options.asyncState = TLS_ASYNC_FINALIZE;
                                        ^
src/internal.c:32643:41: note: $symbol is overwritten
                ssl->options.asyncState = TLS_ASYNC_END;
                                        ^
src/internal.c:6146:35: style: Same expression on both sides of '&&' because '!haveMcast' and '!haveAnon' represent the same value. [knownConditionTrueFalse]
            !havePSK && !haveAnon && !haveMcast) {
                                  ^
src/internal.c:6095:22: note: 'haveMcast' is assigned value '0' here.
    byte haveMcast = 0;
                     ^
src/internal.c:6093:21: note: 'haveAnon' is assigned value '0' here.
    byte haveAnon = 0;
                    ^
src/internal.c:6146:35: note: Same expression on both sides of '&&' because '!haveMcast' and '!haveAnon' represent the same value.
            !havePSK && !haveAnon && !haveMcast) {
                                  ^
src/internal.c:12942:13: style: Unused variable: cert [unusedVariable]
    buffer* cert;
            ^
src/internal.c:19552:21: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
                    if (!ssl->options.tls1_3) {
                    ^
src/internal.c:19605:21: note: Found duplicate branches for 'if' and 'else'.
                    else
                    ^
src/internal.c:19552:21: note: Found duplicate branches for 'if' and 'else'.
                    if (!ssl->options.tls1_3) {
                    ^
src/internal.c:19905:26: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
                    else if (!IsAtLeastTLSv1_3(ssl->version)
                         ^
src/internal.c:19921:21: note: Found duplicate branches for 'if' and 'else'.
                    else {
                    ^
src/internal.c:19905:26: note: Found duplicate branches for 'if' and 'else'.
                    else if (!IsAtLeastTLSv1_3(ssl->version)
                         ^
src/internal.c:20275:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && ssl->buffers.inputBuffer.dynamicFlag)
                    ^
src/internal.c:20270:21: note: Assuming that condition 'ret!=0' is not redundant
            if (ret != 0)
                    ^
src/internal.c:20275:21: note: Condition 'ret==0' is always true
            if (ret == 0 && ssl->buffers.inputBuffer.dynamicFlag)
                    ^
src/internal.c:13213:49: error: Null pointer dereference: args [nullPointer]
    WOLFSSL_ASSERT_SIZEOF_GE(ssl->async->args, *args);
                                                ^
src/internal.c:13212:30: note: Assignment 'args=NULL', assigned value is 0
    ProcPeerCertArgs* args = NULL;
                             ^
src/internal.c:13213:49: note: Null pointer dereference
    WOLFSSL_ASSERT_SIZEOF_GE(ssl->async->args, *args);
                                                ^
src/internal.c:27797:49: error: Null pointer dereference: args [nullPointer]
    WOLFSSL_ASSERT_SIZEOF_GE(ssl->async->args, *args);
                                                ^
src/internal.c:27796:22: note: Assignment 'args=NULL', assigned value is 0
    DskeArgs* args = NULL;
                     ^
src/internal.c:27797:49: note: Null pointer dereference
    WOLFSSL_ASSERT_SIZEOF_GE(ssl->async->args, *args);
                                                ^
src/internal.c:33961:53: error: Null pointer dereference: args [nullPointer]
        WOLFSSL_ASSERT_SIZEOF_GE(ssl->async->args, *args);
                                                    ^
src/internal.c:33960:25: note: Assignment 'args=NULL', assigned value is 0
        DcvArgs* args = NULL;
                        ^
src/internal.c:33961:53: note: Null pointer dereference
        WOLFSSL_ASSERT_SIZEOF_GE(ssl->async->args, *args);
                                                    ^
src/internal.c:35960:53: error: Null pointer dereference: args [nullPointer]
        WOLFSSL_ASSERT_SIZEOF_GE(ssl->async->args, *args);
                                                    ^
src/internal.c:35959:26: note: Assignment 'args=NULL', assigned value is 0
        DckeArgs* args = NULL;
                         ^
src/internal.c:35960:53: note: Null pointer dereference
        WOLFSSL_ASSERT_SIZEOF_GE(ssl->async->args, *args);
                                                    ^
src/internal.c:37228:17: style: The scope of the variable 'event' can be reduced. [variableScope]
    WOLF_EVENT* event;
                ^
src/internal.c:22584:17: style: Condition 'isEarlyData' is always false [knownConditionTrueFalse]
            if (isEarlyData) {
                ^
src/internal.c:22575:32: note: Assignment 'isEarlyData=0', assigned value is 0
            byte isEarlyData = 0;
                               ^
src/internal.c:22577:41: note: Assuming condition is false
            if (ssl->dtls13EncryptEpoch == NULL)
                                        ^
src/internal.c:22584:17: note: Condition 'isEarlyData' is always false
            if (isEarlyData) {
                ^
src/keys.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 160 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/ocsp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/ocsp.c:1041:14: style: Condition 'data!=NULL' is always false [knownConditionTrueFalse]
    if (data != NULL) {
             ^
src/ocsp.c:1029:27: note: Assignment 'data=NULL', assigned value is 0
    unsigned char* data = NULL;
                          ^
src/ocsp.c:1032:21: note: Assuming condition is false
    if (out == NULL || req == NULL)
                    ^
src/ocsp.c:1041:14: note: Condition 'data!=NULL' is always false
    if (data != NULL) {
             ^
src/pk.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 115 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/quic.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/quic.c:756:14: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
    word32 n = 0;
             ^
src/sniffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 107 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/ssl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 799 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/ssl.c:314:23: style: Condition 'initGlobalRNG==0' is always true [knownConditionTrueFalse]
    if (initGlobalRNG == 0)
                      ^
src/ssl.c:15440:40: warning: Possible null pointer dereference: cacheSession [nullPointer]
            sessionIDHash = HashObject(cacheSession->sessionID, ID_LEN,
                                       ^
src/ssl.c:15433:32: note: Assignment 'cacheSession=NULL', assigned value is 0
                cacheSession = NULL;
                               ^
src/ssl.c:15440:40: note: Null pointer dereference
            sessionIDHash = HashObject(cacheSession->sessionID, ID_LEN,
                                       ^
src/ssl.c:13937:35: style: Same expression on both sides of '&&' because '!haveMcast' and '!haveAnon' represent the same value. [knownConditionTrueFalse]
        if (!havePSK && !haveAnon && !haveMcast) {
                                  ^
src/ssl.c:13855:28: note: 'haveMcast' is assigned value '0' here.
        word16 haveMcast = 0;
                           ^
src/ssl.c:13854:27: note: 'haveAnon' is assigned value '0' here.
        word16 haveAnon = 0;
                          ^
src/ssl.c:13937:35: note: Same expression on both sides of '&&' because '!haveMcast' and '!haveAnon' represent the same value.
        if (!havePSK && !haveAnon && !haveMcast) {
                                  ^
src/ssl.c:29032:17: style: Condition 'bio!=NULL' is always true [knownConditionTrueFalse]
        if (bio != NULL)
                ^
src/ssl.c:29027:17: note: Assuming that condition 'bio==NULL' is not redundant
        if (bio == NULL)
                ^
src/ssl.c:29032:17: note: Condition 'bio!=NULL' is always true
        if (bio != NULL)
                ^
src/ssl.c:29053:17: style: Condition 'bio!=NULL' is always true [knownConditionTrueFalse]
        if (bio != NULL)
                ^
src/ssl.c:29048:17: note: Assuming that condition 'bio==NULL' is not redundant
        if (bio == NULL)
                ^
src/ssl.c:29053:17: note: Condition 'bio!=NULL' is always true
        if (bio != NULL)
                ^
src/ssl.c:27437:27: style: The comparison 'sz <= 0' is always true. [knownConditionTrueFalse]
    if (buf == NULL || sz <= 0) {
                          ^
src/ssl.c:27372:14: note: 'sz' is assigned value '0' here.
    int sz = 0;
             ^
src/ssl.c:27437:27: note: The comparison 'sz <= 0' is always true.
    if (buf == NULL || sz <= 0) {
                          ^
src/ssl.c:23227:24: style: The scope of the variable 'OUTPUT_STR' can be reduced. [variableScope]
    static const char* OUTPUT_STR[24][8][3] = {
                       ^
src/ssl.c:12674:15: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
    word16  j = 0;
              ^
src/ssl.c:36144:9: style: Variable 'hash' is not assigned a value. [unassignedVariable]
    int hash;
        ^
src/ssl_asn1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/ssl_bn.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/tls.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 339 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/tls.c:11651:17: style: The comparison 'ret != 0' is always false. [knownConditionTrueFalse]
        if (ret != 0)
                ^
src/tls.c:11448:18: note: 'ret' is assigned value '0' here.
    int    ret = 0;
                 ^
src/tls.c:11651:17: note: The comparison 'ret != 0' is always false.
        if (ret != 0)
                ^
src/tls.c:4527:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
src/tls.c:4896:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
src/tls13.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 276 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/tls13.c:9396:15: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (sniff == NO_SNIFF) {
              ^
src/tls13.c:9373:15: note: First condition
    if (sniff == NO_SNIFF) {
              ^
src/tls13.c:9396:15: note: Second condition
    if (sniff == NO_SNIFF) {
              ^
src/tls13.c:4410:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0)
                    ^
src/tls13.c:4367:13: note: Assuming that condition 'ret!=0' is not redundant
    if (ret != 0)
            ^
src/tls13.c:4410:21: note: Condition 'ret==0' is always true
            if (ret == 0)
                    ^
src/tls13.c:5613:18: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
        if ((ret == 0) && found) {
                 ^
src/tls13.c:5612:13: note: Assuming that condition 'ret==0' is not redundant
    if (ret == 0 && found) {
            ^
src/tls13.c:5613:18: note: Condition 'ret==0' is always true
        if ((ret == 0) && found) {
                 ^
src/tls13.c:5613:27: style: Condition 'found' is always true [knownConditionTrueFalse]
        if ((ret == 0) && found) {
                          ^
src/tls13.c:5612:21: note: Assuming that condition 'found' is not redundant
    if (ret == 0 && found) {
                    ^
src/tls13.c:5613:27: note: Condition 'found' is always true
        if ((ret == 0) && found) {
                          ^
src/tls13.c:5625:27: style: Condition 'found' is always true [knownConditionTrueFalse]
        if ((ret == 0) && found) {
                          ^
src/tls13.c:5612:21: note: Assuming that condition 'found' is not redundant
    if (ret == 0 && found) {
                    ^
src/tls13.c:5625:27: note: Condition 'found' is always true
        if ((ret == 0) && found) {
                          ^
src/tls13.c:5631:27: style: Condition 'found' is always true [knownConditionTrueFalse]
        if ((ret == 0) && found) {
                          ^
src/tls13.c:5612:21: note: Assuming that condition 'found' is not redundant
    if (ret == 0 && found) {
                    ^
src/tls13.c:5631:27: note: Condition 'found' is always true
        if ((ret == 0) && found) {
                          ^
src/tls13.c:5635:27: style: Condition 'found' is always true [knownConditionTrueFalse]
        if ((ret == 0) && found) {
                          ^
src/tls13.c:5612:21: note: Assuming that condition 'found' is not redundant
    if (ret == 0 && found) {
                    ^
src/tls13.c:5635:27: note: Condition 'found' is always true
        if ((ret == 0) && found) {
                          ^
src/tls13.c:7038:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0)
                    ^
src/tls13.c:6991:13: note: Assuming that condition 'ret!=0' is not redundant
    if (ret != 0)
            ^
src/tls13.c:7038:21: note: Condition 'ret==0' is always true
            if (ret == 0)
                    ^
src/tls13.c:2657:24: style: Variable 'ssl->encrypt.state' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
    ssl->encrypt.state = CIPHER_STATE_BEGIN;
                       ^
src/tls13.c:2596:32: note: $symbol is assigned
            ssl->encrypt.state = CIPHER_STATE_END;
                               ^
src/tls13.c:2657:24: note: $symbol is overwritten
    ssl->encrypt.state = CIPHER_STATE_BEGIN;
                       ^
src/tls13.c:6769:29: style: Variable 'ssl->options.asyncState' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
    ssl->options.asyncState = TLS_ASYNC_FINALIZE;
                            ^
src/tls13.c:6748:29: note: $symbol is assigned
    ssl->options.asyncState = TLS_ASYNC_VERIFY;
                            ^
src/tls13.c:6769:29: note: $symbol is overwritten
    ssl->options.asyncState = TLS_ASYNC_FINALIZE;
                            ^
src/tls13.c:9205:37: style: Variable 'ssl->options.asyncState' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
            ssl->options.asyncState = TLS_ASYNC_FINALIZE;
                                    ^
src/tls13.c:9183:37: note: $symbol is assigned
            ssl->options.asyncState = TLS_ASYNC_VERIFY;
                                    ^
src/tls13.c:9205:37: note: $symbol is overwritten
            ssl->options.asyncState = TLS_ASYNC_FINALIZE;
                                    ^
src/tls13.c:9221:37: style: Variable 'ssl->options.asyncState' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
            ssl->options.asyncState = TLS_ASYNC_END;
                                    ^
src/tls13.c:9205:37: note: $symbol is assigned
            ssl->options.asyncState = TLS_ASYNC_FINALIZE;
                                    ^
src/tls13.c:9221:37: note: $symbol is overwritten
            ssl->options.asyncState = TLS_ASYNC_END;
                                    ^
src/tls13.c:8738:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0)
            ^
src/tls13.c:8725:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
src/tls13.c:8738:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0)
            ^
src/tls13.c:273:1: style: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
PRAGMA_GCC_DIAG_POP;
^
src/tls13.c:476:5: style: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
    PRAGMA_GCC_DIAG_POP;
    ^
src/tls13.c:12580:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/wolfio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 59 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/x509.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 153 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/x509_str.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
sslSniffer/sslSnifferTest/snifftest.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/api.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 1387 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/api.c:889:18: style: Condition 'skipTest!=1' is always true [knownConditionTrueFalse]
    if (skipTest != 1) {
                 ^
tests/api.c:840:20: note: Assignment 'skipTest=0', assigned value is 0
    int skipTest = 0;
                   ^
tests/api.c:889:18: note: Condition 'skipTest!=1' is always true
    if (skipTest != 1) {
                 ^
tests/api.c:5550:25: style: Condition 'failing_c' is always true [knownConditionTrueFalse]
                    if (failing_c && failing_s) {
                        ^
tests/api.c:5548:33: note: Assignment 'failing_c=1', assigned value is 1
                    failing_c = 1;
                                ^
tests/api.c:5550:25: note: Condition 'failing_c' is always true
                    if (failing_c && failing_s) {
                        ^
tests/api.c:5567:38: style: Condition 'failing_s' is always true [knownConditionTrueFalse]
                    if (failing_c && failing_s) {
                                     ^
tests/api.c:5565:33: note: Assignment 'failing_s=1', assigned value is 1
                    failing_s = 1;
                                ^
tests/api.c:5567:38: note: Condition 'failing_s' is always true
                    if (failing_c && failing_s) {
                                     ^
tests/api.c:18973:13: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
    if (ret == 0) {
            ^
tests/api.c:18952:13: note: Assuming that condition 'ret!=0' is not redundant
    if (ret != 0)
            ^
tests/api.c:18973:13: note: Condition 'ret==0' is always true
    if (ret == 0) {
            ^
tests/api.c:22827:17: style: The scope of the variable 'invalidP' can be reduced. [variableScope]
    const char* invalidP = "d38311e2cd388c3ed698e82fdf88eb92b5a9a483dc88005d";
                ^
tests/api.c:22828:17: style: The scope of the variable 'invalidQ' can be reduced. [variableScope]
    const char* invalidQ = "96c5390a";
                ^
tests/api.c:22892:17: style: The scope of the variable 'invalidP' can be reduced. [variableScope]
    const char* invalidP = "d38311e2cd388c3ed698e82fdf88eb92b5a9a483dc88005d";
                ^
tests/api.c:22893:17: style: The scope of the variable 'invalidQ' can be reduced. [variableScope]
    const char* invalidQ = "96c5390a";
                ^
tests/api.c:22941:17: style: The scope of the variable 'p' can be reduced. [variableScope]
    const char* p = "d38311e2cd388c3ed698e82fdf88eb92b5a9a483dc88005d"
                ^
tests/api.c:22947:17: style: The scope of the variable 'q' can be reduced. [variableScope]
    const char* q = "96c5390a8b612c0e422bb2b0ea194a3ec935a281";
                ^
tests/api.c:22948:17: style: The scope of the variable 'g' can be reduced. [variableScope]
    const char* g = "06b7861abbd35cc89e79c52f68d20875389b127361ca66822"
                ^
tests/api.c:22955:17: style: The scope of the variable 'pCompare' can be reduced. [variableScope]
    const char* pCompare = "\xd3\x83\x11\xe2\xcd\x38\x8c\x3e\xd6\x98\xe8\x2f"
                ^
tests/api.c:22966:17: style: The scope of the variable 'qCompare' can be reduced. [variableScope]
    const char* qCompare = "\x96\xc5\x39\x0a\x8b\x61\x2c\x0e\x42\x2b\xb2\xb0"
                ^
tests/api.c:22968:17: style: The scope of the variable 'gCompare' can be reduced. [variableScope]
    const char* gCompare = "\x06\xb7\x86\x1a\xbb\xd3\x5c\xc8\x9e\x79\xc5\x2f"
                ^
tests/api.c:12098:18: style: Variable 'a.outLen' is assigned a value that is never used. [unreadVariable]
        a.outLen = XSTRLEN(a.output);
                 ^
tests/api.c:12308:18: style: Variable 'a.outLen' is assigned a value that is never used. [unreadVariable]
        a.outLen = XSTRLEN(a.output);
                 ^
tests/api.c:12520:18: style: Variable 'a.outLen' is assigned a value that is never used. [unreadVariable]
        a.outLen = XSTRLEN(a.output);
                 ^
tests/api.c:16892:14: style: Variable 'a.outLen' is assigned a value that is never used. [unreadVariable]
    a.outLen = XSTRLEN(a.output);
             ^
tests/api.c:16970:14: style: Variable 'a.outLen' is assigned a value that is never used. [unreadVariable]
    a.outLen = XSTRLEN(a.output);
             ^
tests/api.c:17127:14: style: Variable 'a.outLen' is assigned a value that is never used. [unreadVariable]
    a.outLen = XSTRLEN(a.output);
             ^
tests/api.c:63403:9: style: Variable 'timeout' is not assigned a value. [unassignedVariable]
    int timeout;
        ^
tests/api.c:26073:17: style: The if condition is the same as the previous if condition [duplicateCondition]
        if (ret != MP_OKAY)
                ^
tests/api.c:26071:17: note: First condition
        if (ret != MP_OKAY)
                ^
tests/api.c:26073:17: note: Second condition
        if (ret != MP_OKAY)
                ^
tests/api.c:26076:17: style: The if condition is the same as the previous if condition [duplicateCondition]
        if (ret != MP_OKAY)
                ^
tests/api.c:26073:17: note: First condition
        if (ret != MP_OKAY)
                ^
tests/api.c:26076:17: note: Second condition
        if (ret != MP_OKAY)
                ^
tests/api.c:42802:29: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0, XSTRNCMP(paramTo->hostName, testhostName1,
                            ^
tests/api.c:42813:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42802:29: note: Null pointer dereference
    ExpectIntEQ(0, XSTRNCMP(paramTo->hostName, testhostName1,
                            ^
tests/api.c:42804:23: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0x01, paramTo->hostFlags);
                      ^
tests/api.c:42813:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42804:23: note: Null pointer dereference
    ExpectIntEQ(0x01, paramTo->hostFlags);
                      ^
tests/api.c:42805:29: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0, XSTRNCMP(paramTo->ipasc, testIPv6, WOLFSSL_MAX_IPSTR));
                            ^
tests/api.c:42813:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42805:29: note: Null pointer dereference
    ExpectIntEQ(0, XSTRNCMP(paramTo->ipasc, testIPv6, WOLFSSL_MAX_IPSTR));
                            ^
tests/api.c:42818:29: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0, XSTRNCMP(paramTo->hostName, testhostName1,
                            ^
tests/api.c:42829:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42818:29: note: Null pointer dereference
    ExpectIntEQ(0, XSTRNCMP(paramTo->hostName, testhostName1,
                            ^
tests/api.c:42820:23: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0x01, paramTo->hostFlags);
                      ^
tests/api.c:42829:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42820:23: note: Null pointer dereference
    ExpectIntEQ(0x01, paramTo->hostFlags);
                      ^
tests/api.c:42821:29: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0, XSTRNCMP(paramTo->ipasc, testIPv6, WOLFSSL_MAX_IPSTR));
                            ^
tests/api.c:42829:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42821:29: note: Null pointer dereference
    ExpectIntEQ(0, XSTRNCMP(paramTo->ipasc, testIPv6, WOLFSSL_MAX_IPSTR));
                            ^
tests/api.c:42834:29: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0, XSTRNCMP(paramTo->hostName, testhostName1,
                            ^
tests/api.c:42845:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42834:29: note: Null pointer dereference
    ExpectIntEQ(0, XSTRNCMP(paramTo->hostName, testhostName1,
                            ^
tests/api.c:42836:23: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0x01, paramTo->hostFlags);
                      ^
tests/api.c:42845:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42836:23: note: Null pointer dereference
    ExpectIntEQ(0x01, paramTo->hostFlags);
                      ^
tests/api.c:42837:29: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0, XSTRNCMP(paramTo->ipasc, testIPv6, WOLFSSL_MAX_IPSTR));
                            ^
tests/api.c:42845:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42837:29: note: Null pointer dereference
    ExpectIntEQ(0, XSTRNCMP(paramTo->ipasc, testIPv6, WOLFSSL_MAX_IPSTR));
                            ^
tests/api.c:42850:29: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0, XSTRNCMP(paramTo->hostName, testhostName2,
                            ^
tests/api.c:42813:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42850:29: note: Null pointer dereference
    ExpectIntEQ(0, XSTRNCMP(paramTo->hostName, testhostName2,
                            ^
tests/api.c:42852:23: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0x00, paramTo->hostFlags);
                      ^
tests/api.c:42813:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42852:23: note: Null pointer dereference
    ExpectIntEQ(0x00, paramTo->hostFlags);
                      ^
tests/api.c:42853:29: warning:inconclusive: Either the condition 'paramTo!=NULL' is redundant or there is possible null pointer dereference: paramTo. [nullPointerRedundantCheck]
    ExpectIntEQ(0, XSTRNCMP(paramTo->ipasc, testIPv4, WOLFSSL_MAX_IPSTR));
                            ^
tests/api.c:42813:17: note: Assuming that condition 'paramTo!=NULL' is not redundant
    if (paramTo != NULL) {
                ^
tests/api.c:42853:29: note: Null pointer dereference
    ExpectIntEQ(0, XSTRNCMP(paramTo->ipasc, testIPv4, WOLFSSL_MAX_IPSTR));
                            ^
tests/api.c:36220:26: style: Variable 'file' is reassigned a value before the old one has been used. [redundantAssignment]
        ExpectTrue((file = XFOPEN(fname_rsa_p8, "rb")) != XBADFILE);
                         ^
tests/api.c:36199:18: note: file is assigned
            file = XBADFILE;
                 ^
tests/api.c:36220:26: note: file is overwritten
        ExpectTrue((file = XFOPEN(fname_rsa_p8, "rb")) != XBADFILE);
                         ^
tests/api.c:36319:26: style: Variable 'file' is reassigned a value before the old one has been used. [redundantAssignment]
        ExpectTrue((file = XFOPEN(fname_ecc_p8, "rb")) != XBADFILE);
                         ^
tests/api.c:36281:18: note: file is assigned
            file = XBADFILE;
                 ^
tests/api.c:36319:26: note: file is overwritten
        ExpectTrue((file = XFOPEN(fname_ecc_p8, "rb")) != XBADFILE);
                         ^
tests/api.c:42252:20: style: Variable 'fp' is reassigned a value before the old one has been used. [redundantAssignment]
    ExpectTrue((fp = XFOPEN(der, "rb")) != XBADFILE);
                   ^
tests/api.c:42250:12: note: fp is assigned
        fp = XBADFILE;
           ^
tests/api.c:42252:20: note: fp is overwritten
    ExpectTrue((fp = XFOPEN(der, "rb")) != XBADFILE);
                   ^
tests/api.c:43504:22: style: Variable 'file' is reassigned a value before the old one has been used. [redundantAssignment]
    ExpectTrue((file = XFOPEN(rsaPemPkcs8File, "rb")) != XBADFILE);
                     ^
tests/api.c:43492:14: note: file is assigned
        file = XBADFILE;
             ^
tests/api.c:43504:22: note: file is overwritten
    ExpectTrue((file = XFOPEN(rsaPemPkcs8File, "rb")) != XBADFILE);
                     ^
tests/api.c:43541:22: style: Variable 'file' is reassigned a value before the old one has been used. [redundantAssignment]
    ExpectTrue((file = XFOPEN(rsaDerPkcs8EncFile, "rb")) != XBADFILE);
                     ^
tests/api.c:43509:14: note: file is assigned
        file = XBADFILE;
             ^
tests/api.c:43541:22: note: file is overwritten
    ExpectTrue((file = XFOPEN(rsaDerPkcs8EncFile, "rb")) != XBADFILE);
                     ^
tests/api.c:43564:22: style: Variable 'file' is reassigned a value before the old one has been used. [redundantAssignment]
    ExpectTrue((file = XFOPEN(ecDerPkcs8File, "rb")) != XBADFILE);
                     ^
tests/api.c:43547:14: note: file is assigned
        file = XBADFILE;
             ^
tests/api.c:43564:22: note: file is overwritten
    ExpectTrue((file = XFOPEN(ecDerPkcs8File, "rb")) != XBADFILE);
                     ^
tests/api.c:43582:22: style: Variable 'file' is reassigned a value before the old one has been used. [redundantAssignment]
    ExpectTrue((file = XFOPEN(ecPemPkcs8File, "rb")) != XBADFILE);
                     ^
tests/api.c:43570:14: note: file is assigned
        file = XBADFILE;
             ^
tests/api.c:43582:22: note: file is overwritten
    ExpectTrue((file = XFOPEN(ecPemPkcs8File, "rb")) != XBADFILE);
                     ^
tests/api.c:43619:22: style: Variable 'file' is reassigned a value before the old one has been used. [redundantAssignment]
    ExpectTrue((file = XFOPEN(ecDerPkcs8EncFile, "rb")) != XBADFILE);
                     ^
tests/api.c:43588:14: note: file is assigned
        file = XBADFILE;
             ^
tests/api.c:43619:22: note: file is overwritten
    ExpectTrue((file = XFOPEN(ecDerPkcs8EncFile, "rb")) != XBADFILE);
                     ^
tests/api.c:31459:21: style: The scope of the variable 'qx' can be reduced. [variableScope]
        const char* qx =
                    ^
tests/api.c:31461:21: style: The scope of the variable 'qy' can be reduced. [variableScope]
        const char* qy =
                    ^
tests/api.c:31463:21: style: The scope of the variable 'd' can be reduced. [variableScope]
        const char* d =
                    ^
tests/api.c:32228:9: style: The scope of the variable 'reEncodedSz' can be reduced. [variableScope]
    int reEncodedSz;
        ^
tests/api.c:34063:17: style: The scope of the variable 'validDate' can be reduced. [variableScope]
    const char* validDate   = "190424111501Z";   /* UTC =   YYMMDDHHMMSSZ */
                ^
tests/api.c:34064:17: style: The scope of the variable 'invalidDate' can be reduced. [variableScope]
    const char* invalidDate = "190424111501X";   /* UTC =   YYMMDDHHMMSSZ */
                ^
tests/api.c:34065:17: style: The scope of the variable 'genDate' can be reduced. [variableScope]
    const char* genDate     = "20190424111501Z"; /* GEN = YYYYMMDDHHMMSSZ */
                ^
tests/api.c:46744:11: style: The scope of the variable 'x509' can be reduced. [variableScope]
    X509* x509;
          ^
tests/api.c:46996:22: style: The scope of the variable 'dpn' can be reduced. [variableScope]
    DIST_POINT_NAME* dpn;
                     ^
tests/api.c:46752:27: warning:inconclusive: Found suspicious operator '*' [constStatement]
    STACK_OF(GENERAL_NAME)* sk;
                          ^
tests/api.c:46999:25: warning:inconclusive: Found suspicious operator '*' [constStatement]
    STACK_OF(DIST_POINT)* dps;
                        ^
tests/api.c:47000:27: warning:inconclusive: Found suspicious operator '*' [constStatement]
    STACK_OF(GENERAL_NAME)* gns;
                          ^
tests/api.c:33828:21: style: Variable 'testTime' is assigned a value that is never used. [unreadVariable]
    time_t testTime = 1683926567; /* Fri May 12 09:22:47 PM UTC 2023 */
                    ^
tests/api.c:43269:20: style: Variable 'was_add_called' is assigned a value that is never used. [unreadVariable]
    was_add_called = 0;
                   ^
tests/api.c:43938:10: style: Variable 'sz' is not assigned a value. [unassignedVariable]
    long sz;
         ^
tests/api.c:58939:13: style: Variable 'pub' is not assigned a value. [unassignedVariable]
    BIGNUM* pub;
            ^
tests/api.c:58940:13: style: Variable 'priv' is not assigned a value. [unassignedVariable]
    BIGNUM* priv;
            ^
tests/api.c:63326:14: style: Variable 'ctx' is not assigned a value. [unassignedVariable]
    SSL_CTX *ctx;
             ^
tests/api.c:63769:14: style: Variable 'ctx' is not assigned a value. [unassignedVariable]
    SSL_CTX* ctx;
             ^
tests/api.c:63770:14: style: Variable 'ssl' is not assigned a value. [unassignedVariable]
    SSL*     ssl;
             ^
tests/api.c:63771:17: style: Variable 'testCertFile' is not assigned a value. [unassignedVariable]
    const char* testCertFile;
                ^
tests/api.c:63772:17: style: Variable 'testKeyFile' is not assigned a value. [unassignedVariable]
    const char* testKeyFile;
                ^
tests/api.c:63920:17: style: Variable 'mn' is not assigned a value. [unassignedVariable]
    const char* mn;
                ^
tests/api.c:63921:10: style: Variable 'bio' is not assigned a value. [unassignedVariable]
    BIO *bio;
         ^
tests/api.c:432:18: style: struct member 'test_ssl_memio_ctx::s_ctx' is never used. [unusedStructMember]
    WOLFSSL_CTX* s_ctx;
                 ^
tests/api.c:433:18: style: struct member 'test_ssl_memio_ctx::c_ctx' is never used. [unusedStructMember]
    WOLFSSL_CTX* c_ctx;
                 ^
tests/api.c:434:14: style: struct member 'test_ssl_memio_ctx::s_ssl' is never used. [unusedStructMember]
    WOLFSSL* s_ssl;
             ^
tests/api.c:435:14: style: struct member 'test_ssl_memio_ctx::c_ssl' is never used. [unusedStructMember]
    WOLFSSL* c_ssl;
             ^
tests/api.c:437:17: style: struct member 'test_ssl_memio_ctx::c_ciphers' is never used. [unusedStructMember]
    const char* c_ciphers;
                ^
tests/api.c:438:17: style: struct member 'test_ssl_memio_ctx::s_ciphers' is never used. [unusedStructMember]
    const char* s_ciphers;
                ^
tests/api.c:440:11: style: struct member 'test_ssl_memio_ctx::c_msg' is never used. [unusedStructMember]
    char* c_msg;
          ^
tests/api.c:441:9: style: struct member 'test_ssl_memio_ctx::c_msglen' is never used. [unusedStructMember]
    int c_msglen;
        ^
tests/api.c:442:11: style: struct member 'test_ssl_memio_ctx::s_msg' is never used. [unusedStructMember]
    char* s_msg;
          ^
tests/api.c:443:9: style: struct member 'test_ssl_memio_ctx::s_msglen' is never used. [unusedStructMember]
    int s_msglen;
        ^
tests/api.c:449:9: style: struct member 'test_ssl_memio_ctx::c_len' is never used. [unusedStructMember]
    int c_len;
        ^
tests/api.c:451:9: style: struct member 'test_ssl_memio_ctx::s_len' is never used. [unusedStructMember]
    int s_len;
        ^
tests/api.c:53361:26: style: Variable 'in' is not assigned a value. [unassignedVariable]
    const unsigned char *in;
                         ^
tests/api.c:12934:18: style: Variable 'a.outLen' is assigned a value that is never used. [unreadVariable]
        a.outLen = XSTRLEN(a.output);
                 ^
tests/api.c:53473:23: warning:inconclusive: Found suspicious operator '*' [constStatement]
        STACK_OF(X509)* s;
                      ^
tests/api.c:53498:23: warning:inconclusive: Found suspicious operator '*' [constStatement]
        STACK_OF(X509)* s;
                      ^
tests/api.c:63353:14: style: Variable 'ctx' is not assigned a value. [unassignedVariable]
    SSL_CTX* ctx;
             ^
tests/api.c:63354:14: style: Variable 'ssl' is not assigned a value. [unassignedVariable]
    SSL*     ssl;
             ^
tests/api.c:63355:17: style: Variable 'testCertFile' is not assigned a value. [unassignedVariable]
    const char* testCertFile;
                ^
tests/api.c:63356:17: style: Variable 'testKeyFile' is not assigned a value. [unassignedVariable]
    const char* testKeyFile;
                ^
tests/api.c:43411:19: style: Variable 'pkcs8_buffer' is not assigned a value. [unassignedVariable]
    unsigned char pkcs8_buffer[2048];
                  ^
tests/api.c:43412:26: style: Variable 'p' is not assigned a value. [unassignedVariable]
    const unsigned char* p;
                         ^
tests/api.c:43413:9: style: Variable 'bytes' is not assigned a value. [unassignedVariable]
    int bytes;
        ^
tests/api.c:63790:27: style: Condition 'testCertFile!=NULL' is always false [knownConditionTrueFalse]
        if  (testCertFile != NULL && testKeyFile != NULL) {
                          ^
tests/api.c:63787:24: note: Assignment 'testCertFile=NULL', assigned value is 0
        testCertFile = NULL;
                       ^
tests/api.c:63790:27: note: Condition 'testCertFile!=NULL' is always false
        if  (testCertFile != NULL && testKeyFile != NULL) {
                          ^
tests/hash.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/quic.c:195:51: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_set_quic_method: %s\n", (ret == 0)? passed : failed);
                                                  ^
tests/quic.c:103:15: note: 'ret' is assigned value '0' here.
    int ret = 0, i;
              ^
tests/quic.c:195:51: note: The comparison 'ret == 0' is always true.
    printf("    test_set_quic_method: %s\n", (ret == 0)? passed : failed);
                                                  ^
tests/quic.c:318:53: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_provide_quic_data: %s\n", (ret == 0)? passed : failed);
                                                    ^
tests/quic.c:269:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
tests/quic.c:318:53: note: The comparison 'ret == 0' is always true.
    printf("    test_provide_quic_data: %s\n", (ret == 0)? passed : failed);
                                                    ^
tests/quic.c:388:46: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_quic_crypt: %s\n", (ret == 0)? passed : failed);
                                             ^
tests/quic.c:327:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
tests/quic.c:388:46: note: The comparison 'ret == 0' is always true.
    printf("    test_quic_crypt: %s\n", (ret == 0)? passed : failed);
                                             ^
tests/quic.c:1101:53: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_quic_client_hello: %s\n", (ret == 0)? passed : failed);
                                                    ^
tests/quic.c:1054:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
tests/quic.c:1101:53: note: The comparison 'ret == 0' is always true.
    printf("    test_quic_client_hello: %s\n", (ret == 0)? passed : failed);
                                                    ^
tests/quic.c:1172:53: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_quic_server_hello: %s\n", (ret == 0)? passed : failed);
                                                    ^
tests/quic.c:1108:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
tests/quic.c:1172:53: note: The comparison 'ret == 0' is always true.
    printf("    test_quic_server_hello: %s\n", (ret == 0)? passed : failed);
                                                    ^
tests/quic.c:1266:45: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_quic_alpn: %s\n", (ret == 0)? passed : failed);
                                            ^
tests/quic.c:1223:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
tests/quic.c:1266:45: note: The comparison 'ret == 0' is always true.
    printf("    test_quic_alpn: %s\n", (ret == 0)? passed : failed);
                                            ^
tests/quic.c:812:12: style: The scope of the variable 'check_rec' can be reduced. [variableScope]
    void (*check_rec) (const byte *d, size_t l, int v, int indent);
           ^
tests/quic.c:867:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
tests/quic.c:1347:50: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_quic_key_share: %s\n", (ret == 0)? passed : failed);
                                                 ^
tests/quic.c:1277:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
tests/quic.c:1347:50: note: The comparison 'ret == 0' is always true.
    printf("    test_quic_key_share: %s\n", (ret == 0)? passed : failed);
                                                 ^
tests/quic.c:1443:51: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_quic_resumption: %s\n", (ret == 0)? passed : failed);
                                                  ^
tests/quic.c:1354:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
tests/quic.c:1443:51: note: The comparison 'ret == 0' is always true.
    printf("    test_quic_resumption: %s\n", (ret == 0)? passed : failed);
                                                  ^
tests/quic.c:1525:51: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_quic_early_data: %s\n", (ret == 0)? passed : failed);
                                                  ^
tests/quic.c:1450:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
tests/quic.c:1525:51: note: The comparison 'ret == 0' is always true.
    printf("    test_quic_early_data: %s\n", (ret == 0)? passed : failed);
                                                  ^
tests/quic.c:1615:55: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    printf("    test_quic_session_export: %s\n", (ret == 0)? passed : failed);
                                                      ^
tests/quic.c:1560:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
tests/quic.c:1615:55: note: The comparison 'ret == 0' is always true.
    printf("    test_quic_session_export: %s\n", (ret == 0)? passed : failed);
                                                      ^
tests/suites.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 56 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/unit.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
testsuite/testsuite.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
testsuite/testsuite.c:135:18: style: Variable 'tempName_len' is assigned a value that is never used. [unreadVariable]
    tempName_len = (int)XSTRLEN(tempName);
                 ^
testsuite/testsuite.c:136:19: style: Variable 'tempName_Xnum' is assigned a value that is never used. [unreadVariable]
    tempName_Xnum = 6;
                  ^
tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/test/main.c:15:12: style: struct member 'func_args::return_code' is never used. [unusedStructMember]
    int    return_code;
           ^
wolfcrypt/benchmark/benchmark.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 302 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/benchmark/benchmark.c:870:22: error: There is an unknown macro here somewhere. Configuration is required. If WC_STRINGIFY is a macro then please configure it. [unknownMacro]
                     WC_STRINGIFY(AES_AUTH_ADD_SZ)
                     ^
wolfcrypt/benchmark/benchmark.c:1378:0: information: Skipping configuration 'AES_AAD_OPTIONS_DEFAULT;HAVE_AESCCM;HAVE_AESGCM' since the value of 'AES_AAD_OPTIONS_DEFAULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    static word32 aes_aad_options = AES_AAD_OPTIONS_DEFAULT;
^
wolfcrypt/benchmark/benchmark.c:1508:0: information: Skipping configuration 'AES_AAD_OPTIONS_DEFAULT;HAVE_AESCCM;HAVE_AESGCM' since the value of 'AES_AAD_OPTIONS_DEFAULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        aes_aad_options = AES_AAD_OPTIONS_DEFAULT;
^
wolfcrypt/benchmark/benchmark.c:1378:0: information: Skipping configuration 'AES_AAD_OPTIONS_DEFAULT;HAVE_AESCCM;HAVE_AESGCM;NO_MAIN_DRIVER' since the value of 'AES_AAD_OPTIONS_DEFAULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    static word32 aes_aad_options = AES_AAD_OPTIONS_DEFAULT;
^
wolfcrypt/benchmark/benchmark.c:1508:0: information: Skipping configuration 'AES_AAD_OPTIONS_DEFAULT;HAVE_AESCCM;HAVE_AESGCM;NO_MAIN_DRIVER' since the value of 'AES_AAD_OPTIONS_DEFAULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        aes_aad_options = AES_AAD_OPTIONS_DEFAULT;
^
wolfcrypt/benchmark/benchmark.c:6542:9: style: Condition '!rsa_sign_verify' is always true [knownConditionTrueFalse]
    if (!rsa_sign_verify) {
        ^
wolfcrypt/benchmark/benchmark.c:6804:18: style: Condition 'rsaKeySz>0' is always true [knownConditionTrueFalse]
    if (rsaKeySz > 0) {
                 ^
wolfcrypt/benchmark/benchmark.c:6740:16: note: Assignment 'rsaKeySz=2048', assigned value is 2048
    rsaKeySz = 2048;
               ^
wolfcrypt/benchmark/benchmark.c:6804:18: note: Condition 'rsaKeySz>0' is always true
    if (rsaKeySz > 0) {
                 ^
wolfcrypt/benchmark/benchmark.c:6987:9: style: Condition '!use_ffdhe' is always true [knownConditionTrueFalse]
    if (!use_ffdhe) {
        ^
wolfcrypt/benchmark/benchmark.c:7059:13: style: Condition '!use_ffdhe' is always true [knownConditionTrueFalse]
        if (!use_ffdhe) {
            ^
wolfcrypt/benchmark/benchmark.c:6716:21: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int         ret = 0;
                    ^
wolfcrypt/src/aes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 353 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/asm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 71 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/asn.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 538 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/asn.c:31223:16: warning: The address of local variable 'r' might be accessed at non-zero index. [objectIndex]
        if (tmp[i] != 0)
               ^
wolfcrypt/src/asn.c:31252:31: note: Address of variable taken here.
    rLen = trim_leading_zeros(&r, rLen);
                              ^
wolfcrypt/src/asn.c:31252:31: note: Calling function 'trim_leading_zeros', 1st argument '&r' value is lifetime=r
    rLen = trim_leading_zeros(&r, rLen);
                              ^
wolfcrypt/src/asn.c:31223:16: note: The address of local variable 'r' might be accessed at non-zero index.
        if (tmp[i] != 0)
               ^
wolfcrypt/src/asn.c:31223:16: warning: The address of local variable 's' might be accessed at non-zero index. [objectIndex]
        if (tmp[i] != 0)
               ^
wolfcrypt/src/asn.c:31253:31: note: Address of variable taken here.
    sLen = trim_leading_zeros(&s, sLen);
                              ^
wolfcrypt/src/asn.c:31253:31: note: Calling function 'trim_leading_zeros', 1st argument '&s' value is lifetime=s
    sLen = trim_leading_zeros(&s, sLen);
                              ^
wolfcrypt/src/asn.c:31223:16: note: The address of local variable 's' might be accessed at non-zero index.
        if (tmp[i] != 0)
               ^
wolfcrypt/src/asn.c:5766:18: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
        if ((ret == 0) && (checkOid != NULL) && ((checkOidSz != actualOidSz) ||
                 ^
wolfcrypt/src/asn.c:5683:18: note: Assignment 'ret=0', assigned value is 0
    int    ret = 0;
                 ^
wolfcrypt/src/asn.c:5766:18: note: Condition 'ret==0' is always true
        if ((ret == 0) && (checkOid != NULL) && ((checkOidSz != actualOidSz) ||
                 ^
wolfcrypt/src/asn.c:5892:12: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int    ret;
           ^
wolfcrypt/src/asn.c:16394:19: style: Variable 'count' is assigned a value that is never used. [unreadVariable]
        int count = 0;
                  ^
wolfcrypt/src/asn.c:19698:19: style: Variable 'critical' is assigned a value that is never used. [unreadVariable]
    byte critical = 0;
                  ^
wolfcrypt/src/asn.c:3563:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
wolfcrypt/src/asn.c:992:54: style: Condition 'data[i].data.buffer.data!=NULL' is always true [knownConditionTrueFalse]
                            data[i].data.buffer.data != NULL) {
                                                     ^
wolfcrypt/src/asn.c:986:50: note: Assuming that condition 'data[i].data.buffer.data==NULL' is not redundant
                    if (data[i].data.buffer.data == NULL) {
                                                 ^
wolfcrypt/src/asn.c:992:54: note: Condition 'data[i].data.buffer.data!=NULL' is always true
                            data[i].data.buffer.data != NULL) {
                                                     ^
wolfcrypt/src/asn.c:18589:9: warning: Either the condition 'entry==NULL' is redundant or there is possible null pointer dereference: entry. [nullPointerRedundantCheck]
        entry->name = (char*)XMALLOC(len + 1, heap, DYNAMIC_TYPE_ALTNAME);
        ^
wolfcrypt/src/asn.c:18583:19: note: Assuming that condition 'entry==NULL' is not redundant
        if (entry == NULL) {
                  ^
wolfcrypt/src/asn.c:18589:9: note: Null pointer dereference
        entry->name = (char*)XMALLOC(len + 1, heap, DYNAMIC_TYPE_ALTNAME);
        ^
wolfcrypt/src/asn.c:18590:13: warning: Either the condition 'entry==NULL' is redundant or there is possible null pointer dereference: entry. [nullPointerRedundantCheck]
        if (entry->name == NULL) {
            ^
wolfcrypt/src/asn.c:18583:19: note: Assuming that condition 'entry==NULL' is not redundant
        if (entry == NULL) {
                  ^
wolfcrypt/src/asn.c:18590:13: note: Null pointer dereference
        if (entry->name == NULL) {
            ^
wolfcrypt/src/asn.c:18597:17: warning:inconclusive: Either the condition 'entry==NULL' is redundant or there is possible null pointer dereference: entry. [nullPointerRedundantCheck]
        XMEMCPY(entry->name, &input[nameIdx], len);
                ^
wolfcrypt/src/asn.c:18583:19: note: Assuming that condition 'entry==NULL' is not redundant
        if (entry == NULL) {
                  ^
wolfcrypt/src/asn.c:18597:17: note: Null pointer dereference
        XMEMCPY(entry->name, &input[nameIdx], len);
                ^
wolfcrypt/src/asn.c:18598:9: warning:inconclusive: Either the condition 'entry==NULL' is redundant or there is possible null pointer dereference: entry. [nullPointerRedundantCheck]
        entry->name[len] = '\0';
        ^
wolfcrypt/src/asn.c:18583:19: note: Assuming that condition 'entry==NULL' is not redundant
        if (entry == NULL) {
                  ^
wolfcrypt/src/asn.c:18598:9: note: Null pointer dereference
        entry->name[len] = '\0';
        ^
wolfcrypt/src/asn.c:18599:9: warning:inconclusive: Either the condition 'entry==NULL' is redundant or there is possible null pointer dereference: entry. [nullPointerRedundantCheck]
        entry->nameSz = (int)len;
        ^
wolfcrypt/src/asn.c:18583:19: note: Assuming that condition 'entry==NULL' is not redundant
        if (entry == NULL) {
                  ^
wolfcrypt/src/asn.c:18599:9: note: Null pointer dereference
        entry->nameSz = (int)len;
        ^
wolfcrypt/src/asn.c:18600:9: warning:inconclusive: Either the condition 'entry==NULL' is redundant or there is possible null pointer dereference: entry. [nullPointerRedundantCheck]
        entry->type = tag & ASN_TYPE_MASK;
        ^
wolfcrypt/src/asn.c:18583:19: note: Assuming that condition 'entry==NULL' is not redundant
        if (entry == NULL) {
                  ^
wolfcrypt/src/asn.c:18600:9: note: Null pointer dereference
        entry->type = tag & ASN_TYPE_MASK;
        ^
wolfcrypt/src/asn.c:18603:9: warning:inconclusive: Either the condition 'entry==NULL' is redundant or there is possible null pointer dereference: entry. [nullPointerRedundantCheck]
        entry->next = *head;
        ^
wolfcrypt/src/asn.c:18583:19: note: Assuming that condition 'entry==NULL' is not redundant
        if (entry == NULL) {
                  ^
wolfcrypt/src/asn.c:18603:9: note: Null pointer dereference
        entry->next = *head;
        ^
wolfcrypt/src/asn.c:5927:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:5922:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/asn.c:5927:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:6774:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:6760:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/asn.c:6774:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:11676:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:11671:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/asn.c:11676:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:14937:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:14931:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/asn.c:14937:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:17660:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:17652:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/asn.c:17660:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:17918:14: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if  (ret == 0) {
             ^
wolfcrypt/src/asn.c:17906:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/asn.c:17918:14: note: The comparison 'ret == 0' is always true.
    if  (ret == 0) {
             ^
wolfcrypt/src/asn.c:18198:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:18191:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/asn.c:18198:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:18825:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:18821:18: note: 'ret' is assigned value '0' here.
    int    ret = 0;
                 ^
wolfcrypt/src/asn.c:18825:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:20087:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:20072:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/asn.c:20087:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/asn.c:21172:0: information: Skipping configuration 'GetCA;OPENSSL_EXTRA;OPENSSL_EXTRA_X509_SMALL' since the value of 'GetCA' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            ca = GetCA(cm, hash);
^
wolfcrypt/src/asn.c:21911:0: information: Skipping configuration 'GetCA;OPENSSL_EXTRA;OPENSSL_EXTRA_X509_SMALL' since the value of 'GetCA' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                cert->ca = GetCA(cm, cert->extAuthKeyId);
^
wolfcrypt/src/asn.c:21915:0: information: Skipping configuration 'GetCA;OPENSSL_EXTRA;OPENSSL_EXTRA_X509_SMALL' since the value of 'GetCA' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                cert->ca = GetCA(cm, cert->extSubjKeyId);
^
wolfcrypt/src/cmac.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/coding.c:509:34: style: Condition 'in' is always true [knownConditionTrueFalse]
    if (inLen == 1 && *outLen && in) {
                                 ^
wolfcrypt/src/coding.c:506:12: note: Assuming that condition 'in==NULL' is not redundant
    if (in == NULL || out == NULL || outLen == NULL)
           ^
wolfcrypt/src/coding.c:509:34: note: Condition 'in' is always true
    if (inLen == 1 && *outLen && in) {
                                 ^
wolfcrypt/src/cryptocb.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/curve25519.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/curve25519.c:134:42: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
    SAVE_VECTOR_REGISTERS(return _svr_ret;);
                                         ^
wolfcrypt/src/des3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/des3.c:663:13: style: The scope of the variable 'bits' can be reduced. [variableScope]
        int bits;
            ^
wolfcrypt/src/des3.c:610:19: style: Variable 'stat1' is assigned a value that is never used. [unreadVariable]
            stat1 = MCF_SEC_DSR;
                  ^
wolfcrypt/src/des3.c:611:19: style: Variable 'stat2' is assigned a value that is never used. [unreadVariable]
            stat2 = MCF_SEC_DISR;
                  ^
wolfcrypt/src/des3.c:683:16: style: Variable 's5' is assigned a value that is never used. [unreadVariable]
            s5 = tx_byte_allocate(&mp_ncached,(void *)&secDesc,
               ^
wolfcrypt/src/des3.c:685:16: style: Variable 's1' is assigned a value that is never used. [unreadVariable]
            s1 = tx_byte_allocate(&mp_ncached,(void *)&desBuffIn,  DES_BUFFER_SIZE, TX_NO_WAIT);
               ^
wolfcrypt/src/des3.c:686:16: style: Variable 's2' is assigned a value that is never used. [unreadVariable]
            s2 = tx_byte_allocate(&mp_ncached,(void *)&desBuffOut, DES_BUFFER_SIZE, TX_NO_WAIT);
               ^
wolfcrypt/src/des3.c:688:16: style: Variable 's3' is assigned a value that is never used. [unreadVariable]
            s3 = tx_byte_allocate(&mp_ncached,(void *)&secKey,     DES3_KEYLEN,TX_NO_WAIT);
               ^
wolfcrypt/src/des3.c:689:16: style: Variable 's4' is assigned a value that is never used. [unreadVariable]
            s4 = tx_byte_allocate(&mp_ncached,(void *)&secIV,      DES3_IVLEN,  TX_NO_WAIT);
               ^
wolfcrypt/src/des3.c:717:16: style: Variable 's5' is assigned a value that is never used. [unreadVariable]
            s5 = tx_byte_allocate(&mp_ncached,(void *)&secDesc,
               ^
wolfcrypt/src/des3.c:719:16: style: Variable 's1' is assigned a value that is never used. [unreadVariable]
            s1 = tx_byte_allocate(&mp_ncached,(void *)&desBuffIn,  DES_BUFFER_SIZE, TX_NO_WAIT);
               ^
wolfcrypt/src/des3.c:720:16: style: Variable 's2' is assigned a value that is never used. [unreadVariable]
            s2 = tx_byte_allocate(&mp_ncached,(void *)&desBuffOut, DES_BUFFER_SIZE, TX_NO_WAIT);
               ^
wolfcrypt/src/des3.c:721:16: style: Variable 's3' is assigned a value that is never used. [unreadVariable]
            s3 = tx_byte_allocate(&mp_ncached,(void *)&secKey,     DES3_KEYLEN,TX_NO_WAIT);
               ^
wolfcrypt/src/des3.c:722:16: style: Variable 's4' is assigned a value that is never used. [unreadVariable]
            s4 = tx_byte_allocate(&mp_ncached,(void *)&secIV,      DES3_IVLEN,  TX_NO_WAIT);
               ^
wolfcrypt/src/dh.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 51 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/dh.c:1377:42: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
    SAVE_VECTOR_REGISTERS(return _svr_ret;);
                                         ^
wolfcrypt/src/dsa.c:675:42: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
    SAVE_VECTOR_REGISTERS(return _svr_ret;);
                                         ^
wolfcrypt/src/ecc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 418 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/ecc.c:5104:42: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
    SAVE_VECTOR_REGISTERS(return _svr_ret;);
                                         ^
wolfcrypt/src/eccsi.c:1515:42: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
    SAVE_VECTOR_REGISTERS(return _svr_ret;);
                                         ^
wolfcrypt/src/ed25519.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/ed25519.c:644:13: style: The scope of the variable 'j' can be reduced. [variableScope]
        int j;
            ^
wolfcrypt/src/ed448.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/evp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 245 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/ext_kyber.c:321:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/ext_kyber.c:307:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/ext_kyber.c:321:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/ext_kyber.c:349:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/ext_kyber.c:307:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/ext_kyber.c:349:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/ext_kyber.c:357:13: style: The comparison 'ret != 0' is always false. [knownConditionTrueFalse]
    if (ret != 0) {
            ^
wolfcrypt/src/ext_kyber.c:307:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/ext_kyber.c:357:13: note: The comparison 'ret != 0' is always false.
    if (ret != 0) {
            ^
wolfcrypt/src/fe_low_mem.c:232:36: style: Opposite expression on both sides of '|'. [oppositeExpression]
        shift &= ((shift ^ ((-p[i] | p[i]) >> 7)) & 1);
                                   ^
wolfcrypt/src/fe_low_mem.c:239:30: style: Opposite expression on both sides of '|'. [oppositeExpression]
        shift &= ((-(x >> i) | (x >> i)) >> (7 - i) & 1);
                             ^
wolfcrypt/src/ge_448.c:10710:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/ge_448.c:10680:24: note: 'ret' is assigned value '0' here.
    int          ret = 0;
                       ^
wolfcrypt/src/ge_448.c:10710:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/ge_448.c:10262:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_sqr(r->X, p->X);        /* r->X = C = X1^2     */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10262:15: note: Null pointer dereference
    fe448_sqr(r->X, p->X);        /* r->X = C = X1^2     */
              ^
wolfcrypt/src/ge_448.c:10263:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_sqr(r->Y, p->Y);        /* r->Y = D = Y1^2     */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10263:15: note: Null pointer dereference
    fe448_sqr(r->Y, p->Y);        /* r->Y = D = Y1^2     */
              ^
wolfcrypt/src/ge_448.c:10264:19: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_add(t1, r->X, r->Y);    /* t1 = E = C+D        */
                  ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10264:19: note: Null pointer dereference
    fe448_add(t1, r->X, r->Y);    /* t1 = E = C+D        */
                  ^
wolfcrypt/src/ge_448.c:10266:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_sub(r->Y, r->X, r->Y);  /* r->Y = Y31 = C-D    */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10266:15: note: Null pointer dereference
    fe448_sub(r->Y, r->X, r->Y);  /* r->Y = Y31 = C-D    */
              ^
wolfcrypt/src/ge_448.c:10267:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_sqr(r->Z, p->Z);        /* r->Z = H = Z1^2     */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10267:15: note: Null pointer dereference
    fe448_sqr(r->Z, p->Z);        /* r->Z = H = Z1^2     */
              ^
wolfcrypt/src/ge_448.c:10268:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_add(r->Z, r->Z, r->Z);  /* r->Z = J1 = 2*H     */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10268:15: note: Null pointer dereference
    fe448_add(r->Z, r->Z, r->Z);  /* r->Z = J1 = 2*H     */
              ^
wolfcrypt/src/ge_448.c:10269:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_sub(r->Z, t1, r->Z);    /* r->Z = J = E-2*H    */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10269:15: note: Null pointer dereference
    fe448_sub(r->Z, t1, r->Z);    /* r->Z = J = E-2*H    */
              ^
wolfcrypt/src/ge_448.c:10270:18: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_reduce(r->Z);
                 ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10270:18: note: Null pointer dereference
    fe448_reduce(r->Z);
                 ^
wolfcrypt/src/ge_448.c:10271:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_sub(r->X, t0, t1);      /* r->X = X31 = B-E    */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10271:15: note: Null pointer dereference
    fe448_sub(r->X, t0, t1);      /* r->X = X31 = B-E    */
              ^
wolfcrypt/src/ge_448.c:10272:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_mul(r->X, r->X, r->Z);  /* r->X = X3 = (B-E)*J */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10272:15: note: Null pointer dereference
    fe448_mul(r->X, r->X, r->Z);  /* r->X = X3 = (B-E)*J */
              ^
wolfcrypt/src/ge_448.c:10273:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_mul(r->Y, r->Y, t1);    /* r->Y = Y3 = E*(C-D) */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10273:15: note: Null pointer dereference
    fe448_mul(r->Y, r->Y, t1);    /* r->Y = Y3 = E*(C-D) */
              ^
wolfcrypt/src/ge_448.c:10274:15: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: r. [nullPointerRedundantCheck]
    fe448_mul(r->Z, t1, r->Z);    /* r->Z = Z3 = E*J     */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10717:19: note: Calling function 'ge448_dbl', 1st argument 'p2' value is 0
        ge448_dbl(p2, p);
                  ^
wolfcrypt/src/ge_448.c:10274:15: note: Null pointer dereference
    fe448_mul(r->Z, t1, r->Z);    /* r->Z = Z3 = E*J     */
              ^
wolfcrypt/src/ge_448.c:10376:19: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: p. [nullPointerRedundantCheck]
    fe448_mul(t1, p->X, q->X);      /* t1 = C = X1*X2             */
                  ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10718:27: note: Calling function 'ge448_add', 2nd argument 'p2' value is 0
        ge448_add(&pi[1], p2, &pi[0]);
                          ^
wolfcrypt/src/ge_448.c:10376:19: note: Null pointer dereference
    fe448_mul(t1, p->X, q->X);      /* t1 = C = X1*X2             */
                  ^
wolfcrypt/src/ge_448.c:10376:25: warning: Either the condition 'pi==NULL' is redundant or there is possible null pointer dereference: q. [nullPointerRedundantCheck]
    fe448_mul(t1, p->X, q->X);      /* t1 = C = X1*X2             */
                        ^
wolfcrypt/src/ge_448.c:10698:16: note: Assuming that condition 'pi==NULL' is not redundant
        if (pi == NULL) {
               ^
wolfcrypt/src/ge_448.c:10718:32: note: Calling function 'ge448_add', 3rd argument 'pi' value is 0
        ge448_add(&pi[1], p2, &pi[0]);
                               ^
wolfcrypt/src/ge_448.c:10376:25: note: Null pointer dereference
    fe448_mul(t1, p->X, q->X);      /* t1 = C = X1*X2             */
                        ^
wolfcrypt/src/ge_448.c:10377:19: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: p. [nullPointerRedundantCheck]
    fe448_mul(t2, p->Y, q->Y);      /* t2 = D = Y1*Y2             */
                  ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10718:27: note: Calling function 'ge448_add', 2nd argument 'p2' value is 0
        ge448_add(&pi[1], p2, &pi[0]);
                          ^
wolfcrypt/src/ge_448.c:10377:19: note: Null pointer dereference
    fe448_mul(t2, p->Y, q->Y);      /* t2 = D = Y1*Y2             */
                  ^
wolfcrypt/src/ge_448.c:10377:25: warning: Either the condition 'pi==NULL' is redundant or there is possible null pointer dereference: q. [nullPointerRedundantCheck]
    fe448_mul(t2, p->Y, q->Y);      /* t2 = D = Y1*Y2             */
                        ^
wolfcrypt/src/ge_448.c:10698:16: note: Assuming that condition 'pi==NULL' is not redundant
        if (pi == NULL) {
               ^
wolfcrypt/src/ge_448.c:10718:32: note: Calling function 'ge448_add', 3rd argument 'pi' value is 0
        ge448_add(&pi[1], p2, &pi[0]);
                               ^
wolfcrypt/src/ge_448.c:10377:25: note: Null pointer dereference
    fe448_mul(t2, p->Y, q->Y);      /* t2 = D = Y1*Y2             */
                        ^
wolfcrypt/src/ge_448.c:10380:21: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: p. [nullPointerRedundantCheck]
    fe448_mul(r->Z, p->Z, q->Z);    /* r->Z = A = Z1*Z2           */
                    ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10718:27: note: Calling function 'ge448_add', 2nd argument 'p2' value is 0
        ge448_add(&pi[1], p2, &pi[0]);
                          ^
wolfcrypt/src/ge_448.c:10380:21: note: Null pointer dereference
    fe448_mul(r->Z, p->Z, q->Z);    /* r->Z = A = Z1*Z2           */
                    ^
wolfcrypt/src/ge_448.c:10380:27: warning: Either the condition 'pi==NULL' is redundant or there is possible null pointer dereference: q. [nullPointerRedundantCheck]
    fe448_mul(r->Z, p->Z, q->Z);    /* r->Z = A = Z1*Z2           */
                          ^
wolfcrypt/src/ge_448.c:10698:16: note: Assuming that condition 'pi==NULL' is not redundant
        if (pi == NULL) {
               ^
wolfcrypt/src/ge_448.c:10718:32: note: Calling function 'ge448_add', 3rd argument 'pi' value is 0
        ge448_add(&pi[1], p2, &pi[0]);
                               ^
wolfcrypt/src/ge_448.c:10380:27: note: Null pointer dereference
    fe448_mul(r->Z, p->Z, q->Z);    /* r->Z = A = Z1*Z2           */
                          ^
wolfcrypt/src/ge_448.c:10385:21: warning: Either the condition 'p2==NULL' is redundant or there is possible null pointer dereference: p. [nullPointerRedundantCheck]
    fe448_add(r->X, p->X, p->Y);    /* r->X = H1 = X1+Y1          */
                    ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant
        if (p2 == NULL) {
               ^
wolfcrypt/src/ge_448.c:10718:27: note: Calling function 'ge448_add', 2nd argument 'p2' value is 0
        ge448_add(&pi[1], p2, &pi[0]);
                          ^
wolfcrypt/src/ge_448.c:10385:21: note: Null pointer dereference
    fe448_add(r->X, p->X, p->Y);    /* r->X = H1 = X1+Y1          */
                    ^
wolfcrypt/src/ge_448.c:10387:21: warning: Either the condition 'pi==NULL' is redundant or there is possible null pointer dereference: q. [nullPointerRedundantCheck]
    fe448_add(r->Y, q->X, q->Y);    /* r->Y = H2 = X2+Y2          */
                    ^
wolfcrypt/src/ge_448.c:10698:16: note: Assuming that condition 'pi==NULL' is not redundant
        if (pi == NULL) {
               ^
wolfcrypt/src/ge_448.c:10718:32: note: Calling function 'ge448_add', 3rd argument 'pi' value is 0
        ge448_add(&pi[1], p2, &pi[0]);
                               ^
wolfcrypt/src/ge_448.c:10387:21: note: Null pointer dereference
    fe448_add(r->Y, q->X, q->Y);    /* r->Y = H2 = X2+Y2          */
                    ^
wolfcrypt/src/ge_448.c:10714:20: warning: Either the condition 'pi==NULL' is redundant or there is possible null pointer dereference: pi. [nullPointerRedundantCheck]
        fe448_copy(pi[0].X, p->X);
                   ^
wolfcrypt/src/ge_448.c:10698:16: note: Assuming that condition 'pi==NULL' is not redundant
        if (pi == NULL) {
               ^
wolfcrypt/src/ge_448.c:10714:20: note: Null pointer dereference
        fe448_copy(pi[0].X, p->X);
                   ^
wolfcrypt/src/ge_448.c:10715:20: warning: Either the condition 'pi==NULL' is redundant or there is possible null pointer dereference: pi. [nullPointerRedundantCheck]
        fe448_copy(pi[0].Y, p->Y);
                   ^
wolfcrypt/src/ge_448.c:10698:16: note: Assuming that condition 'pi==NULL' is not redundant
        if (pi == NULL) {
               ^
wolfcrypt/src/ge_448.c:10715:20: note: Null pointer dereference
        fe448_copy(pi[0].Y, p->Y);
                   ^
wolfcrypt/src/ge_448.c:10716:20: warning: Either the condition 'pi==NULL' is redundant or there is possible null pointer dereference: pi. [nullPointerRedundantCheck]
        fe448_copy(pi[0].Z, p->Z);
                   ^
wolfcrypt/src/ge_448.c:10698:16: note: Assuming that condition 'pi==NULL' is not redundant
        if (pi == NULL) {
               ^
wolfcrypt/src/ge_448.c:10716:20: note: Null pointer dereference
        fe448_copy(pi[0].Z, p->Z);
                   ^
wolfcrypt/src/ge_low_mem.c:272:23: style:inconclusive: Function 'ed25519_add' argument 2 names different: declaration 'a' definition 'p1'. [funcArgNamesDifferent]
         const ge_p3 *p1, const ge_p3 *p2)
                      ^
wolfcrypt/src/ge_low_mem.c:44:41: note: Function 'ed25519_add' argument 2 names different: declaration 'a' definition 'p1'.
void ed25519_add(ge_p3 *r, const ge_p3 *a, const ge_p3 *b);
                                        ^
wolfcrypt/src/ge_low_mem.c:272:23: note: Function 'ed25519_add' argument 2 names different: declaration 'a' definition 'p1'.
         const ge_p3 *p1, const ge_p3 *p2)
                      ^
wolfcrypt/src/ge_low_mem.c:272:40: style:inconclusive: Function 'ed25519_add' argument 3 names different: declaration 'b' definition 'p2'. [funcArgNamesDifferent]
         const ge_p3 *p1, const ge_p3 *p2)
                                       ^
wolfcrypt/src/ge_low_mem.c:44:57: note: Function 'ed25519_add' argument 3 names different: declaration 'b' definition 'p2'.
void ed25519_add(ge_p3 *r, const ge_p3 *a, const ge_p3 *b);
                                                        ^
wolfcrypt/src/ge_low_mem.c:272:40: note: Function 'ed25519_add' argument 3 names different: declaration 'b' definition 'p2'.
         const ge_p3 *p1, const ge_p3 *p2)
                                       ^
wolfcrypt/src/ge_low_mem.c:347:44: style:inconclusive: Function 'ed25519_double' argument 2 names different: declaration 'a' definition 'p'. [funcArgNamesDifferent]
void ed25519_double(ge_p3 *r, const ge_p3 *p)
                                           ^
wolfcrypt/src/ge_low_mem.c:45:44: note: Function 'ed25519_double' argument 2 names different: declaration 'a' definition 'p'.
void ed25519_double(ge_p3 *r, const ge_p3 *a);
                                           ^
wolfcrypt/src/ge_low_mem.c:347:44: note: Function 'ed25519_double' argument 2 names different: declaration 'a' definition 'p'.
void ed25519_double(ge_p3 *r, const ge_p3 *p)
                                           ^
wolfcrypt/src/ge_low_mem.c:415:27: style:inconclusive: Function 'ed25519_smult' argument 1 names different: declaration 'r' definition 'r_out'. [funcArgNamesDifferent]
void ed25519_smult(ge_p3 *r_out, const ge_p3 *p, const byte *e)
                          ^
wolfcrypt/src/ge_low_mem.c:43:27: note: Function 'ed25519_smult' argument 1 names different: declaration 'r' definition 'r_out'.
void ed25519_smult(ge_p3 *r, const ge_p3 *a, const byte *e);
                          ^
wolfcrypt/src/ge_low_mem.c:415:27: note: Function 'ed25519_smult' argument 1 names different: declaration 'r' definition 'r_out'.
void ed25519_smult(ge_p3 *r_out, const ge_p3 *p, const byte *e)
                          ^
wolfcrypt/src/ge_low_mem.c:415:47: style:inconclusive: Function 'ed25519_smult' argument 2 names different: declaration 'a' definition 'p'. [funcArgNamesDifferent]
void ed25519_smult(ge_p3 *r_out, const ge_p3 *p, const byte *e)
                                              ^
wolfcrypt/src/ge_low_mem.c:43:43: note: Function 'ed25519_smult' argument 2 names different: declaration 'a' definition 'p'.
void ed25519_smult(ge_p3 *r, const ge_p3 *a, const byte *e);
                                          ^
wolfcrypt/src/ge_low_mem.c:415:47: note: Function 'ed25519_smult' argument 2 names different: declaration 'a' definition 'p'.
void ed25519_smult(ge_p3 *r_out, const ge_p3 *p, const byte *e)
                                              ^
wolfcrypt/src/ge_low_mem.c:146:10: style: Variable 'q2[33]' is assigned a value that is never used. [unreadVariable]
  q2[33] += carry;
         ^
wolfcrypt/src/hash.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 69 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/hmac.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/hpke.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/integer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 51 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/kdf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/logging.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 45 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/logging.c:317:0: information: Skipping configuration 'DEBUG_WOLFSSL;HAVE_STACK_SIZE_VERBOSE;HAVE_STACK_SIZE_VERBOSE_LOG;STACK_SIZE_CHECKPOINT_MSG' since the value of 'STACK_SIZE_CHECKPOINT_MSG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        STACK_SIZE_CHECKPOINT_MSG(logMessage);
^
wolfcrypt/src/md5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/memory.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/pkcs7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 81 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/pkcs7.c:3464:21: style: Condition 'ret>=0' is always true [knownConditionTrueFalse]
            if (ret >= 0) {
                    ^
wolfcrypt/src/pkcs7.c:3444:17: note: Assuming that condition 'ret<0' is not redundant
        if (ret < 0) {
                ^
wolfcrypt/src/pkcs7.c:3452:54: note: Assuming condition is false
                                  dCert->pubKeySize) < 0) {
                                                     ^
wolfcrypt/src/pkcs7.c:3464:21: note: Condition 'ret>=0' is always true
            if (ret >= 0) {
                    ^
wolfcrypt/src/pkcs7.c:4507:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && GetSequence_ex(pkiMsg, &idx, &length, totalSz,
                    ^
wolfcrypt/src/pkcs7.c:4493:64: note: Assuming that condition '(ret=wc_PKCS7_SetMaxStream(pkcs7,in,inSz))!=0' is not redundant
            if ((ret = wc_PKCS7_SetMaxStream(pkcs7, in, inSz)) != 0) {
                                                               ^
wolfcrypt/src/pkcs7.c:4507:21: note: Condition 'ret==0' is always true
            if (ret == 0 && GetSequence_ex(pkiMsg, &idx, &length, totalSz,
                    ^
wolfcrypt/src/pkcs7.c:4686:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && GetASNTag(pkiMsg, &localIdx, &tag, pkiMsgSz) != 0)
                    ^
wolfcrypt/src/pkcs7.c:4680:19: note: Assignment 'ret=0', assigned value is 0
            ret = 0;
                  ^
wolfcrypt/src/pkcs7.c:4681:30: note: Assuming condition is false
            if (localIdx + 1 > pkiMsgSz) {
                             ^
wolfcrypt/src/pkcs7.c:4686:21: note: Condition 'ret==0' is always true
            if (ret == 0 && GetASNTag(pkiMsg, &localIdx, &tag, pkiMsgSz) != 0)
                    ^
wolfcrypt/src/pkcs7.c:4790:53: style: Condition 'ret!=0' is always true [knownConditionTrueFalse]
                if (!degenerate && !detached && ret != 0)
                                                    ^
wolfcrypt/src/pkcs7.c:4758:21: note: Assuming that condition 'ret==0' is not redundant
            if (ret == 0) {
                    ^
wolfcrypt/src/pkcs7.c:4790:53: note: Condition 'ret!=0' is always true
                if (!degenerate && !detached && ret != 0)
                                                    ^
wolfcrypt/src/pkcs7.c:4873:21: style: Condition 'ret!=0' is always false [knownConditionTrueFalse]
            if (ret != 0 && !degenerate)
                    ^
wolfcrypt/src/pkcs7.c:4851:70: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz+in2Sz,pkcs7->stream->expected,&pkiMsg,&idx))!=0' is not redundant
                            pkcs7->stream->expected, &pkiMsg, &idx)) != 0) {
                                                                     ^
wolfcrypt/src/pkcs7.c:4873:21: note: Condition 'ret!=0' is always false
            if (ret != 0 && !degenerate)
                    ^
wolfcrypt/src/pkcs7.c:4877:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && multiPart) {
                    ^
wolfcrypt/src/pkcs7.c:4851:70: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz+in2Sz,pkcs7->stream->expected,&pkiMsg,&idx))!=0' is not redundant
                            pkcs7->stream->expected, &pkiMsg, &idx)) != 0) {
                                                                     ^
wolfcrypt/src/pkcs7.c:4873:26: note: Assuming condition is false
            if (ret != 0 && !degenerate)
                         ^
wolfcrypt/src/pkcs7.c:4877:21: note: Condition 'ret==0' is always true
            if (ret == 0 && multiPart) {
                    ^
wolfcrypt/src/pkcs7.c:5154:29: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
                    if (ret == 0 && MAX_PKCS7_CERTS > 0) {
                            ^
wolfcrypt/src/pkcs7.c:5150:29: note: Assuming that condition 'ret!=0' is not redundant
                    if (ret != 0)
                            ^
wolfcrypt/src/pkcs7.c:5154:29: note: Condition 'ret==0' is always true
                    if (ret == 0 && MAX_PKCS7_CERTS > 0) {
                            ^
wolfcrypt/src/pkcs7.c:5289:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && wc_PKCS7_SetContentType(pkcs7, contentType,
                    ^
wolfcrypt/src/pkcs7.c:5260:70: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz+in2Sz,pkcs7->stream->expected,&pkiMsg,&idx))!=0' is not redundant
                            pkcs7->stream->expected, &pkiMsg, &idx)) != 0) {
                                                                     ^
wolfcrypt/src/pkcs7.c:5278:24: note: Assuming condition is false
            if (maxIdx > pkiMsg2Sz) {
                       ^
wolfcrypt/src/pkcs7.c:5289:21: note: Condition 'ret==0' is always true
            if (ret == 0 && wc_PKCS7_SetContentType(pkcs7, contentType,
                    ^
wolfcrypt/src/pkcs7.c:8857:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0) {
                    ^
wolfcrypt/src/pkcs7.c:8840:21: note: Assuming that condition 'ret!=0' is not redundant
            if (ret != 0) {
                    ^
wolfcrypt/src/pkcs7.c:8857:21: note: Condition 'ret==0' is always true
            if (ret == 0) {
                    ^
wolfcrypt/src/pkcs7.c:10429:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && GetSequence_ex(pkiMsg, idx, &length, pkiMsgSz,
                    ^
wolfcrypt/src/pkcs7.c:10423:64: note: Assuming that condition '(ret=wc_PKCS7_SetMaxStream(pkcs7,in,inSz))!=0' is not redundant
            if ((ret = wc_PKCS7_SetMaxStream(pkcs7, in, inSz)) != 0) {
                                                               ^
wolfcrypt/src/pkcs7.c:10429:21: note: Condition 'ret==0' is always true
            if (ret == 0 && GetSequence_ex(pkiMsg, idx, &length, pkiMsgSz,
                    ^
wolfcrypt/src/pkcs7.c:10495:25: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
                if (ret == 0 && wc_GetContentType(pkiMsg, idx, &contentType,
                        ^
wolfcrypt/src/pkcs7.c:10487:72: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,MAX_OID_SZ+MAX_LENGTH_SZ+ASN_TAG_SZ,&pkiMsg,idx))!=0' is not redundant
                            MAX_LENGTH_SZ + ASN_TAG_SZ, &pkiMsg, idx)) != 0) {
                                                                       ^
wolfcrypt/src/pkcs7.c:10495:25: note: Condition 'ret==0' is always true
                if (ret == 0 && wc_GetContentType(pkiMsg, idx, &contentType,
                        ^
wolfcrypt/src/pkcs7.c:10544:25: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
                if (ret == 0 && GetSequence_ex(pkiMsg, idx, &length, pkiMsgSz,
                        ^
wolfcrypt/src/pkcs7.c:10536:60: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,MAX_SEQ_SZ+MAX_VERSION_SZ,&pkiMsg,idx))!=0' is not redundant
                            MAX_VERSION_SZ, &pkiMsg, idx)) != 0) {
                                                           ^
wolfcrypt/src/pkcs7.c:10544:25: note: Condition 'ret==0' is always true
                if (ret == 0 && GetSequence_ex(pkiMsg, idx, &length, pkiMsgSz,
                        ^
wolfcrypt/src/pkcs7.c:10609:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0)
                    ^
wolfcrypt/src/pkcs7.c:10604:69: note: Assuming that condition '(ret=wc_PKCS7_StreamEndCase(pkcs7,&tmpIdx,idx))!=0' is not redundant
            if ((ret = wc_PKCS7_StreamEndCase(pkcs7, &tmpIdx, idx)) != 0) {
                                                                    ^
wolfcrypt/src/pkcs7.c:10609:21: note: Condition 'ret==0' is always true
            if (ret == 0)
                    ^
wolfcrypt/src/pkcs7.c:12636:25: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
                if (ret == 0 && GetASNTag(pkiMsg, &idx, &tag, pkiMsgSz) < 0)
                        ^
wolfcrypt/src/pkcs7.c:12630:36: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,MAX_LENGTH_SZ+MAX_SEQ_SZ+ASN_TAG_SZ,&pkiMsg,&idx))!=0' is not redundant
                            &idx)) != 0) {
                                   ^
wolfcrypt/src/pkcs7.c:12636:25: note: Condition 'ret==0' is always true
                if (ret == 0 && GetASNTag(pkiMsg, &idx, &tag, pkiMsgSz) < 0)
                        ^
wolfcrypt/src/pkcs7.c:12673:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && GetMyVersion(pkiMsg, &idx, &version, pkiMsgSz) < 0)
                    ^
wolfcrypt/src/pkcs7.c:12666:45: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,MAX_VERSION_SZ+MAX_SEQ_SZ+MAX_ALGO_SZ*2,&pkiMsg,&idx))!=0' is not redundant
                            &pkiMsg, &idx)) != 0) {
                                            ^
wolfcrypt/src/pkcs7.c:12673:21: note: Condition 'ret==0' is always true
            if (ret == 0 && GetMyVersion(pkiMsg, &idx, &version, pkiMsgSz) < 0)
                    ^
wolfcrypt/src/pkcs7.c:12724:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && GetASNTag(pkiMsg, &idx, &tag, pkiMsgSz) < 0)
                    ^
wolfcrypt/src/pkcs7.c:12716:73: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,ASN_TAG_SZ+MAX_LENGTH_SZ,&pkiMsg,&idx))!=0' is not redundant
                            ASN_TAG_SZ + MAX_LENGTH_SZ, &pkiMsg, &idx)) != 0) {
                                                                        ^
wolfcrypt/src/pkcs7.c:12724:21: note: Condition 'ret==0' is always true
            if (ret == 0 && GetASNTag(pkiMsg, &idx, &tag, pkiMsgSz) < 0)
                    ^
wolfcrypt/src/pkcs7.c:12766:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && GetASNTag(pkiMsg, &idx, &tag, pkiMsgSz) < 0)
                    ^
wolfcrypt/src/pkcs7.c:12754:60: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,pkcs7->stream->expected+ASN_TAG_SZ+MAX_LENGTH_SZ,&pkiMsg,&idx))!=0' is not redundant
                            MAX_LENGTH_SZ, &pkiMsg, &idx)) != 0) {
                                                           ^
wolfcrypt/src/pkcs7.c:12766:21: note: Condition 'ret==0' is always true
            if (ret == 0 && GetASNTag(pkiMsg, &idx, &tag, pkiMsgSz) < 0)
                    ^
wolfcrypt/src/pkcs7.c:12812:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && (encryptedContent = (byte*)XMALLOC(
                    ^
wolfcrypt/src/pkcs7.c:12800:70: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,pkcs7->stream->expected,&pkiMsg,&idx))!=0' is not redundant
                            pkcs7->stream->expected, &pkiMsg, &idx)) != 0) {
                                                                     ^
wolfcrypt/src/pkcs7.c:12812:21: note: Condition 'ret==0' is always true
            if (ret == 0 && (encryptedContent = (byte*)XMALLOC(
                    ^
wolfcrypt/src/pkcs7.c:12818:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0) {
                    ^
wolfcrypt/src/pkcs7.c:12800:70: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,pkcs7->stream->expected,&pkiMsg,&idx))!=0' is not redundant
                            pkcs7->stream->expected, &pkiMsg, &idx)) != 0) {
                                                                     ^
wolfcrypt/src/pkcs7.c:12812:26: note: Assuming condition is false
            if (ret == 0 && (encryptedContent = (byte*)XMALLOC(
                         ^
wolfcrypt/src/pkcs7.c:12818:21: note: Condition 'ret==0' is always true
            if (ret == 0) {
                    ^
wolfcrypt/src/pkcs7.c:4949:31: style: Variable 'pkiMsg2Sz' is reassigned a value before the old one has been used. [redundantAssignment]
                    pkiMsg2Sz = pkcs7->stream->maxLen;
                              ^
wolfcrypt/src/pkcs7.c:4947:31: note: pkiMsg2Sz is assigned
                    pkiMsg2Sz = pkiMsgSz;
                              ^
wolfcrypt/src/pkcs7.c:4949:31: note: pkiMsg2Sz is overwritten
                    pkiMsg2Sz = pkcs7->stream->maxLen;
                              ^
wolfcrypt/src/pkcs7.c:4959:27: style: Variable 'pkiMsg2Sz' is reassigned a value before the old one has been used. [redundantAssignment]
                pkiMsg2Sz = pkcs7->stream->maxLen;
                          ^
wolfcrypt/src/pkcs7.c:4957:27: note: pkiMsg2Sz is assigned
                pkiMsg2Sz = pkiMsgSz;
                          ^
wolfcrypt/src/pkcs7.c:4959:27: note: pkiMsg2Sz is overwritten
                pkiMsg2Sz = pkcs7->stream->maxLen;
                          ^
wolfcrypt/src/pkcs7.c:10788:34: style: Variable 'tmpIdx' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
            tmpIdx               = idx;
                                 ^
wolfcrypt/src/pkcs7.c:10750:20: note: $symbol is assigned
            tmpIdx = idx;
                   ^
wolfcrypt/src/pkcs7.c:10788:34: note: $symbol is overwritten
            tmpIdx               = idx;
                                 ^
wolfcrypt/src/pkcs7.c:1583:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
wolfcrypt/src/pkcs7.c:1644:12: style: The scope of the variable 'idx' can be reduced. [variableScope]
    int i, idx, sz;
           ^
wolfcrypt/src/pkcs7.c:1644:17: style: The scope of the variable 'sz' can be reduced. [variableScope]
    int i, idx, sz;
                ^
wolfcrypt/src/pkcs7.c:2166:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret, hashSz, digIdx = 0;
        ^
wolfcrypt/src/pkcs7.c:7559:11: style: The scope of the variable 'lastBlock' can be reduced. [variableScope]
    byte* lastBlock;
          ^
wolfcrypt/src/pkcs7.c:3382:20: style: Variable 'scratch' is assigned a value that is never used. [unreadVariable]
    word32 scratch = 0, verified = 0;
                   ^
wolfcrypt/src/pkcs7.c:3646:24: style: Variable 'attribSetSz' is assigned a value that is never used. [unreadVariable]
    word32 attribSetSz = 0, hashSz = 0;
                       ^
wolfcrypt/src/pkcs7.c:3781:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0, digestSz = 0, innerAttribSz = 0;
            ^
wolfcrypt/src/pkcs7.c:4526:22: style: Variable 'inSz' is assigned a value that is never used. [unreadVariable]
                inSz = pkcs7->derSz = len;
                     ^
wolfcrypt/src/pkcs7.c:3592:21: style: Condition 'ret>=0' is always true [knownConditionTrueFalse]
            if (ret >= 0) {
                    ^
wolfcrypt/src/pkcs7.c:3572:17: note: Assuming that condition 'ret<0' is not redundant
        if (ret < 0) {
                ^
wolfcrypt/src/pkcs7.c:3580:54: note: Assuming condition is false
                                  dCert->pubKeySize) < 0) {
                                                     ^
wolfcrypt/src/pkcs7.c:3592:21: note: Condition 'ret>=0' is always true
            if (ret >= 0) {
                    ^
wolfcrypt/src/pkcs7.c:3520:16: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
    word32 idx = 0;
               ^
wolfcrypt/src/pkcs7.c:11764:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && GetSequence(pkiMsg, &idx, &length, pkiMsgSz) < 0) {
                    ^
wolfcrypt/src/pkcs7.c:11757:45: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,MAX_SEQ_SZ+MAX_ALGO_SZ+MAX_ALGO_SZ+ASN_TAG_SZ,&pkiMsg,&idx))!=0' is not redundant
                            &pkiMsg, &idx)) != 0) {
                                            ^
wolfcrypt/src/pkcs7.c:11764:21: note: Condition 'ret==0' is always true
            if (ret == 0 && GetSequence(pkiMsg, &idx, &length, pkiMsgSz) < 0) {
                    ^
wolfcrypt/src/pkcs7.c:11835:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && GetLength(pkiMsg, &idx, &length, pkiMsgSz) < 0) {
                    ^
wolfcrypt/src/pkcs7.c:11829:45: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,MAX_LENGTH_SZ+MAX_VERSION_SZ+ASN_TAG_SZ+MAX_LENGTH_SZ,&pkiMsg,&idx))!=0' is not redundant
                            &pkiMsg, &idx)) != 0) {
                                            ^
wolfcrypt/src/pkcs7.c:11835:21: note: Condition 'ret==0' is always true
            if (ret == 0 && GetLength(pkiMsg, &idx, &length, pkiMsgSz) < 0) {
                    ^
wolfcrypt/src/pkcs7.c:12041:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && wc_PKCS7_ParseAttribs(pkcs7, authAttrib, authAttribSz) < 0) {
                    ^
wolfcrypt/src/pkcs7.c:12029:70: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,pkcs7->stream->expected,&pkiMsg,&idx))!=0' is not redundant
                            pkcs7->stream->expected, &pkiMsg, &idx)) != 0) {
                                                                     ^
wolfcrypt/src/pkcs7.c:12041:21: note: Condition 'ret==0' is always true
            if (ret == 0 && wc_PKCS7_ParseAttribs(pkcs7, authAttrib, authAttribSz) < 0) {
                    ^
wolfcrypt/src/pkcs7.c:12079:21: style: Condition 'ret==0' is always true [knownConditionTrueFalse]
            if (ret == 0 && GetASNTag(pkiMsg, &idx, &tag, pkiMsgSz) < 0) {
                    ^
wolfcrypt/src/pkcs7.c:12066:57: note: Assuming that condition '(ret=wc_PKCS7_AddDataToStream(pkcs7,in,inSz,MAX_LENGTH_SZ+ASN_TAG_SZ,&pkiMsg,&idx))!=0' is not redundant
                            ASN_TAG_SZ, &pkiMsg, &idx)) != 0) {
                                                        ^
wolfcrypt/src/pkcs7.c:12079:21: note: Condition 'ret==0' is always true
            if (ret == 0 && GetASNTag(pkiMsg, &idx, &tag, pkiMsgSz) < 0) {
                    ^
wolfcrypt/src/pkcs7.c:11748:20: style: Variable 'tmpIdx' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
            tmpIdx = idx;
                   ^
wolfcrypt/src/pkcs7.c:11694:20: note: $symbol is assigned
            tmpIdx = idx;
                   ^
wolfcrypt/src/pkcs7.c:11748:20: note: $symbol is overwritten
            tmpIdx = idx;
                   ^
wolfcrypt/src/poly1305.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/poly1305.c:271:42: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
    SAVE_VECTOR_REGISTERS(return _svr_ret;);
                                         ^
wolfcrypt/src/port/Espressif/esp32_sha.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/Espressif/esp32_util.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/Espressif/esp32_util.c:131:0: information: Skipping configuration 'CONFIG_ESP_MAIN_TASK_STACK_SIZE;CONFIG_IDF_TARGET_ESP32;NO_AES;NO_SHA;NO_SHA256;WOLFSSL_ESP32WROOM32_CRYPT;WOLFSSL_SHA384;WOLFSSL_SHA512;WOLFSSL_ESPIDF' since the value of 'CONFIG_ESP_MAIN_TASK_STACK_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WOLFSSL_VERSION_PRINTF("CONFIG_ESP_MAIN_TASK_STACK_SIZE: %d",
^
wolfcrypt/src/port/Espressif/esp32_util.c:125:0: information: Skipping configuration 'CONFIG_IDF_TARGET_ESP32;CONFIG_MAIN_TASK_STACK_SIZE;NO_AES;NO_SHA;NO_SHA256;WOLFSSL_ESP32WROOM32_CRYPT;WOLFSSL_SHA384;WOLFSSL_SHA512;WOLFSSL_ESPIDF' since the value of 'CONFIG_MAIN_TASK_STACK_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WOLFSSL_VERSION_PRINTF("CONFIG_MAIN_TASK_STACK_SIZE: %d",
^
wolfcrypt/src/port/Espressif/esp32_util.c:141:0: information: Skipping configuration 'CONFIG_IDF_TARGET_ESP32;CONFIG_TIMER_TASK_STACK_DEPTH;NO_AES;NO_SHA;NO_SHA256;WOLFSSL_ESP32WROOM32_CRYPT;WOLFSSL_SHA384;WOLFSSL_SHA512;WOLFSSL_ESPIDF' since the value of 'CONFIG_TIMER_TASK_STACK_DEPTH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WOLFSSL_VERSION_PRINTF("CONFIG_TIMER_TASK_STACK_DEPTH: %d",
^
wolfcrypt/src/port/Espressif/esp32_util.c:136:0: information: Skipping configuration 'CONFIG_IDF_TARGET_ESP32;CONFIG_TIMER_TASK_STACK_SIZE;NO_AES;NO_SHA;NO_SHA256;WOLFSSL_ESP32WROOM32_CRYPT;WOLFSSL_SHA384;WOLFSSL_SHA512;WOLFSSL_ESPIDF' since the value of 'CONFIG_TIMER_TASK_STACK_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WOLFSSL_VERSION_PRINTF("CONFIG_TIMER_TASK_STACK_SIZE: %d",
^
wolfcrypt/src/port/Espressif/esp32_util.c:241:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_BRANCH;NO_AES;NO_SHA;NO_SHA256;WOLFSSL_ESP32WROOM32_CRYPT;WOLFSSL_SHA384;WOLFSSL_SHA512' since the value of 'LIBWOLFSSL_VERSION_GIT_BRANCH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WOLFSSL_VERSION_PRINTF("LIBWOLFSSL_VERSION_GIT_BRANCH = %s",
^
wolfcrypt/src/port/Espressif/esp32_util.c:246:0: information: Skipping configuration 'LIBWOLFSSL_VERSION_GIT_HASH;NO_AES;NO_SHA;NO_SHA256;WOLFSSL_ESP32WROOM32_CRYPT;WOLFSSL_SHA384;WOLFSSL_SHA512' since the value of 'LIBWOLFSSL_VERSION_GIT_HASH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    WOLFSSL_VERSION_PRINTF("LIBWOLFSSL_VERSION_GIT_HASH = %s",
^
wolfcrypt/src/port/Renesas/renesas_common.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/Renesas/renesas_common.c:1169:9: style: Condition '!CertAtt' is always false [knownConditionTrueFalse]
    if (!CertAtt) {
        ^
wolfcrypt/src/port/Renesas/renesas_common.c:1165:61: note: Assuming that condition 'ctx==NULL' is not redundant
    if (sig == NULL || out == NULL || keyDer == NULL || ctx == NULL)
                                                            ^
wolfcrypt/src/port/Renesas/renesas_common.c:1168:15: note: Assignment 'CertAtt=(CertAttribute*)ctx', assigned value is 0
    CertAtt = (CertAttribute*)ctx;
              ^
wolfcrypt/src/port/Renesas/renesas_common.c:1169:9: note: Condition '!CertAtt' is always false
    if (!CertAtt) {
        ^
wolfcrypt/src/port/Renesas/renesas_common.c:1253:9: style: Condition '!CertAtt' is always false [knownConditionTrueFalse]
    if (!CertAtt) {
        ^
wolfcrypt/src/port/Renesas/renesas_common.c:1247:62: note: Assuming that condition 'ctx==NULL' is not redundant
    if (sig == NULL || keyDer == NULL || hash == NULL || ctx == NULL ||
                                                             ^
wolfcrypt/src/port/Renesas/renesas_common.c:1252:15: note: Assignment 'CertAtt=(CertAttribute*)ctx', assigned value is 0
    CertAtt = (CertAttribute*)ctx;
              ^
wolfcrypt/src/port/Renesas/renesas_common.c:1253:9: note: Condition '!CertAtt' is always false
    if (!CertAtt) {
        ^
wolfcrypt/src/port/Renesas/renesas_common.c:100:5: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
    WOLFSSL_LEAVE("Renesas_cmn_RsaSignCheckCb", ret);
    ^
wolfcrypt/src/port/Renesas/renesas_common.c:91:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = CRYPTOCB_UNAVAILABLE;
            ^
wolfcrypt/src/port/Renesas/renesas_common.c:133:30: style: Variable 'cbInfo' is assigned a value that is never used. [unreadVariable]
    TsipUserCtx*      cbInfo = (TsipUserCtx*)ctx;
                             ^
wolfcrypt/src/port/Renesas/renesas_sce_util.c:157:14: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    if ((ret = wc_sce_hw_lock()) == 0) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2496:20: warning: Either the condition 'ssl==NULL' is redundant or there is possible null pointer dereference: ssl. [nullPointerRedundantCheck]
    byte cipher0 = ssl->options.cipherSuite0;
                   ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2506:13: note: Assuming that condition 'ssl==NULL' is not redundant
    if (ssl == NULL) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2496:20: note: Null pointer dereference
    byte cipher0 = ssl->options.cipherSuite0;
                   ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2497:20: warning: Either the condition 'ssl==NULL' is redundant or there is possible null pointer dereference: ssl. [nullPointerRedundantCheck]
    byte cipher  = ssl->options.cipherSuite;
                   ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2506:13: note: Assuming that condition 'ssl==NULL' is not redundant
    if (ssl == NULL) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2497:20: note: Null pointer dereference
    byte cipher  = ssl->options.cipherSuite;
                   ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2498:20: warning: Either the condition 'ssl==NULL' is redundant or there is possible null pointer dereference: ssl. [nullPointerRedundantCheck]
    byte side    = ssl->options.side;
                   ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2506:13: note: Assuming that condition 'ssl==NULL' is not redundant
    if (ssl == NULL) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2498:20: note: Null pointer dereference
    byte side    = ssl->options.side;
                   ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2528:17: warning: Either the condition 'enc==NULL' is redundant or there is possible null pointer dereference: enc. [nullPointerRedundantCheck]
            if (enc->aes == NULL || dec->aes == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2524:21: note: Assuming that condition 'enc==NULL' is not redundant
            if (enc == NULL || dec == NULL) {
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2528:17: note: Null pointer dereference
            if (enc->aes == NULL || dec->aes == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:3662:40: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        ret = tsipImportPublicKey(tuc, tuc->wrappedKeyType);
                                       ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:3656:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL)
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:3662:40: note: Null pointer dereference
        ret = tsipImportPublicKey(tuc, tuc->wrappedKeyType);
                                       ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:188:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:184:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:188:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1613:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1595:24: note: 'ret' is assigned value '0' here.
    int          ret = 0;
                       ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1613:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1701:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1682:24: note: 'ret' is assigned value '0' here.
    int          ret = 0;
                       ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1701:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2693:14: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    if ((ret = tsip_hw_lock()) == 0) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1886:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1876:13: note: First condition
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1886:13: note: Second condition
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1956:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1941:13: note: First condition
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1956:13: note: Second condition
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1975:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1956:13: note: First condition
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1975:13: note: Second condition
    if (ret == 0) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:323:5: warning:inconclusive: Either the condition 'kse==NULL' is redundant or there is possible null pointer dereference: kse. [nullPointerRedundantCheck]
    kse->pubKey[0] = ECC_POINT_UNCOMP;
    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:262:28: note: Assuming that condition 'kse==NULL' is not redundant
    if (ssl == NULL || kse == NULL)
                           ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:323:5: note: Null pointer dereference
    kse->pubKey[0] = ECC_POINT_UNCOMP;
    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:415:14: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        if (!tuc->Dhe_key_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:408:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:415:14: note: Null pointer dereference
        if (!tuc->Dhe_key_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:528:14: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        if (!tuc->SharedSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:520:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:528:14: note: Null pointer dereference
        if (!tuc->SharedSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:599:14: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        if (!tuc->HandshakeSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:591:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:599:14: note: Null pointer dereference
        if (!tuc->HandshakeSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:683:14: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        if (!tuc->HandshakeSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:675:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:683:14: note: Null pointer dereference
        if (!tuc->HandshakeSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:767:14: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        if (!tuc->MasterSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:759:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:767:14: note: Null pointer dereference
        if (!tuc->MasterSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:858:14: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        if (!tuc->ClientTrafficSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:850:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:858:14: note: Null pointer dereference
        if (!tuc->ClientTrafficSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:930:14: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        if (!tuc->ServerTrafficSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:922:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:930:14: note: Null pointer dereference
        if (!tuc->ServerTrafficSecret_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1099:14: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        if (!tuc->HandshakeSecret_set ||
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1092:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1099:14: note: Null pointer dereference
        if (!tuc->HandshakeSecret_set ||
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1182:14: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        if (!tuc->HandshakeServerTrafficKey_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1174:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1182:14: note: Null pointer dereference
        if (!tuc->HandshakeServerTrafficKey_set) {
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1531:19: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        sigData = tuc->sigDataCertVerify;
                  ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1516:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1531:19: note: Null pointer dereference
        sigData = tuc->sigDataCertVerify;
                  ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:255:21: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int             isTLS13 = 0;
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:378:21: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int             isTLS13   = 0;
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:499:9: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int isTLS13 = 0;
        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:569:21: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int             isTLS13 = 0;
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:653:21: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int             isTLS13 = 0;
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:737:21: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int             isTLS13 = 0;
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:829:21: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int             isTLS13 = 0;
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:901:21: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int             isTLS13 = 0;
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1072:21: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int             isTLS13 = 0;
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1152:21: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int             isTLS13 = 0;
                    ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1301:9: style: The scope of the variable 'isTLS13' can be reduced. [variableScope]
    int isTLS13 = 0;
        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:254:25: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err = TSIP_SUCCESS;
                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:377:27: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err   = TSIP_SUCCESS;
                          ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:498:22: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t err = TSIP_SUCCESS;
                     ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:568:25: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err = TSIP_SUCCESS;
                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:652:25: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err = TSIP_SUCCESS;
                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:736:25: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err = TSIP_SUCCESS;
                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:828:25: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err = TSIP_SUCCESS;
                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:900:25: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err = TSIP_SUCCESS;
                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1071:25: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err = TSIP_SUCCESS;
                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1151:25: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err = TSIP_SUCCESS;
                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1464:23: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t  err = TSIP_SUCCESS;
                      ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1782:25: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    e_tsip_err_t    err = TSIP_SUCCESS;
                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1795:28: style: Variable 'ecdsa_sig' is not assigned a value. [unassignedVariable]
    tsip_ecdsa_byte_data_t ecdsa_sig,ecdsa_hash;
                           ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1795:38: style: Variable 'ecdsa_hash' is not assigned a value. [unassignedVariable]
    tsip_ecdsa_byte_data_t ecdsa_sig,ecdsa_hash;
                                     ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:3413:14: style: Variable 'pSig' is assigned a value that is never used. [unreadVariable]
        pSig = sigforSCE;
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:3417:14: style: Variable 'pSig' is assigned a value that is never used. [unreadVariable]
        pSig = (uint8_t*)signature;
             ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1841:19: style: Condition 'isRsa!=0' is always true [knownConditionTrueFalse]
        if (isRsa != 0 && isRsa != 1) {
                  ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1839:22: note: Assignment 'isRsa=-1', assigned value is -1
            isRsa = -1;
                     ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1841:19: note: Condition 'isRsa!=0' is always true
        if (isRsa != 0 && isRsa != 1) {
                  ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1841:33: style: Condition 'isRsa!=1' is always true [knownConditionTrueFalse]
        if (isRsa != 0 && isRsa != 1) {
                                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1839:22: note: Assignment 'isRsa=-1', assigned value is -1
            isRsa = -1;
                     ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1841:33: note: Condition 'isRsa!=1' is always true
        if (isRsa != 0 && isRsa != 1) {
                                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1851:13: style: Condition 'isRsa' is always true [knownConditionTrueFalse]
        if (isRsa) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1790:32: note: Assignment 'isRsa=-1', assigned value is -1
    int             isRsa   = -1;
                               ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1851:13: note: Condition 'isRsa' is always true
        if (isRsa) {
            ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1888:17: style: Condition 'isRsa' is always true [knownConditionTrueFalse]
            if (isRsa) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1790:32: note: Assignment 'isRsa=-1', assigned value is -1
    int             isRsa   = -1;
                               ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1888:17: note: Condition 'isRsa' is always true
            if (isRsa) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1847:41: warning: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        ret = tsipImportPrivateKey(tuc, tuc->wrappedKeyType);
                                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1823:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1847:41: note: Null pointer dereference
        ret = tsipImportPrivateKey(tuc, tuc->wrappedKeyType);
                                        ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1942:19: warning:inconclusive: Either the condition 'tuc==NULL' is redundant or there is possible null pointer dereference: tuc. [nullPointerRedundantCheck]
        sigData = tuc->sigDataCertVerify;
                  ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1823:17: note: Assuming that condition 'tuc==NULL' is not redundant
        if (tuc == NULL) {
                ^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1942:19: note: Null pointer dereference
        sigData = tuc->sigDataCertVerify;
                  ^
wolfcrypt/src/port/af_alg/afalg_aes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/af_alg/afalg_hash.c:185:9: style: Variable 'ret' is not assigned a value. [unassignedVariable]
    int ret;
        ^
wolfcrypt/src/port/arm/armv8-aes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 79 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/arm/armv8-chacha.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/arm/armv8-sha256.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/arm/armv8-sha256.c:1370:26: warning: Either the condition 'sha256==NULL' is redundant or there is possible null pointer dereference: sha256. [nullPointerRedundantCheck]
    byte* local = (byte*)sha256->buffer;
                         ^
wolfcrypt/src/port/arm/armv8-sha256.c:1372:16: note: Assuming that condition 'sha256==NULL' is not redundant
    if (sha256 == NULL) {
               ^
wolfcrypt/src/port/arm/armv8-sha256.c:1370:26: note: Null pointer dereference
    byte* local = (byte*)sha256->buffer;
                         ^
wolfcrypt/src/port/arm/armv8-sha512.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/arm/armv8-sha512.c:521:26: warning: Either the condition 'sha512==NULL' is redundant or there is possible null pointer dereference: sha512. [nullPointerRedundantCheck]
    byte* local = (byte*)sha512->buffer;
                         ^
wolfcrypt/src/port/arm/armv8-sha512.c:523:16: note: Assuming that condition 'sha512==NULL' is not redundant
    if (sha512 == NULL) {
               ^
wolfcrypt/src/port/arm/armv8-sha512.c:521:26: note: Null pointer dereference
    byte* local = (byte*)sha512->buffer;
                         ^
wolfcrypt/src/port/atmel/atmel.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/atmel/atmel.c:110:25: style: Variable 'copy_count' is assigned a value that is never used. [unreadVariable]
    uint32_t copy_count = 0;
                        ^
wolfcrypt/src/port/atmel/atmel.c:930:9: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
    ret = 0; /* success */
        ^
wolfcrypt/src/port/atmel/atmel.c:919:13: note: ret is assigned
        ret = wc_ecc_verify_hash(sig, sigSz, hash, hashSz, result, &tmpKey);
            ^
wolfcrypt/src/port/atmel/atmel.c:930:9: note: ret is overwritten
    ret = 0; /* success */
        ^
wolfcrypt/src/port/atmel/atmel.c:960:17: style: Unused variable: status [unusedVariable]
    ATCA_STATUS status;
                ^
wolfcrypt/src/port/atmel/atmel.c:930:9: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
    ret = 0; /* success */
        ^
wolfcrypt/src/port/atmel/atmel.c:921:13: note: ret is assigned
        ret = NOT_COMPILED_IN;
            ^
wolfcrypt/src/port/atmel/atmel.c:930:9: note: ret is overwritten
    ret = 0; /* success */
        ^
wolfcrypt/src/port/atmel/atmel.c:1029:8: portability: %d in format string (no. 1) requires 'int' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
       printf("Signer TFLXTLS CA cert buffer too small, need to increase"
       ^
wolfcrypt/src/port/atmel/atmel.c:979:9: portability: %d in format string (no. 1) requires 'int' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
        printf("Signer CA cert buffer too small, need to increase at least"
        ^
wolfcrypt/src/port/atmel/atmel.c:1001:9: portability: %d in format string (no. 1) requires 'int' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
        printf("Device cert buffer too small, need to increase at least"
        ^
wolfcrypt/src/port/caam/caam_driver.c:1636:18: warning: Identical condition 'pdECDSEL==0', second condition is always false [identicalConditionAfterEarlyExit]
    if (pdECDSEL == 0) {
                 ^
wolfcrypt/src/port/caam/caam_driver.c:1564:18: note: If condition 'pdECDSEL==0' is true, the function will return/exit
    if (pdECDSEL == 0) {
                 ^
wolfcrypt/src/port/caam/caam_driver.c:1636:18: note: Testing identical condition 'pdECDSEL==0'
    if (pdECDSEL == 0) {
                 ^
wolfcrypt/src/port/caam/caam_driver.c:1656:18: warning: Identical condition 'pdECDSEL==0', second condition is always false [identicalConditionAfterEarlyExit]
    if (pdECDSEL == 0) {
                 ^
wolfcrypt/src/port/caam/caam_driver.c:1564:18: note: If condition 'pdECDSEL==0' is true, the function will return/exit
    if (pdECDSEL == 0) {
                 ^
wolfcrypt/src/port/caam/caam_driver.c:1656:18: note: Testing identical condition 'pdECDSEL==0'
    if (pdECDSEL == 0) {
                 ^
wolfcrypt/src/port/caam/caam_driver.c:855:10: style: Variable 'vidx' is reassigned a value before the old one has been used. [redundantAssignment]
    vidx = 0;
         ^
wolfcrypt/src/port/caam/caam_driver.c:844:13: note: vidx is assigned
        vidx++;
            ^
wolfcrypt/src/port/caam/caam_driver.c:855:10: note: vidx is overwritten
    vidx = 0;
         ^
wolfcrypt/src/port/caam/caam_driver.c:990:15: style: Variable 'fifol' is reassigned a value before the old one has been used. [redundantAssignment]
        fifol = desc->idx;
              ^
wolfcrypt/src/port/caam/caam_driver.c:981:23: note: fifol is assigned
                fifol = desc->idx;
                      ^
wolfcrypt/src/port/caam/caam_driver.c:990:15: note: fifol is overwritten
        fifol = desc->idx;
              ^
wolfcrypt/src/port/caam/caam_driver.c:1635:17: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
    vidx = 0; i = 0;
                ^
wolfcrypt/src/port/caam/caam_driver.c:1614:6: note: i is assigned
    i++; vidx++;
     ^
wolfcrypt/src/port/caam/caam_driver.c:1635:17: note: i is overwritten
    vidx = 0; i = 0;
                ^
wolfcrypt/src/port/caam/caam_driver.c:1635:10: style: Variable 'vidx' is reassigned a value before the old one has been used. [redundantAssignment]
    vidx = 0; i = 0;
         ^
wolfcrypt/src/port/caam/caam_driver.c:1614:14: note: vidx is assigned
    i++; vidx++;
             ^
wolfcrypt/src/port/caam/caam_driver.c:1635:10: note: vidx is overwritten
    vidx = 0; i = 0;
         ^
wolfcrypt/src/port/caam/caam_driver.c:372:76: style: Same expression on both sides of '|'. [duplicateExpression]
    err = caamCreatePartition(&part, part, CAAM_SM_CSP | CAAM_SM_SMAP_LOCK |
                                                                           ^
wolfcrypt/src/port/caam/caam_driver.c:1271:80: style: Same expression on both sides of '|'. [duplicateExpression]
        err = caamCreatePartition(&part, part, CAAM_SM_CSP | CAAM_SM_SMAP_LOCK |
                                                                               ^
wolfcrypt/src/port/caam/caam_driver.c:404:5: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
    reg = CAAM_READ(baseAddr + CAAM_ORJAR);
    ^
wolfcrypt/src/port/caam/caam_driver.c:1249:18: style: The scope of the variable 'phys' can be reduced. [variableScope]
    unsigned int phys;
                 ^
wolfcrypt/src/port/caam/caam_driver.c:1852:36: portability: 'r->VirtualIn' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    r->VirtualDesc = r->VirtualIn  + (CAAM_JOBRING_SIZE * sizeof(unsigned int));
                                   ^
wolfcrypt/src/port/caam/caam_driver.c:1853:37: portability: 'r->VirtualDesc' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    r->VirtualOut  = r->VirtualDesc + (CAAM_DESC_MAX * CAAM_JOBRING_SIZE);
                                    ^
wolfcrypt/src/port/caam/caam_driver.c:396:14: style: Variable 'baseAddr' is assigned a value that is never used. [unreadVariable]
    baseAddr = caam.ring.BaseAddr;
             ^
wolfcrypt/src/port/caam/caam_driver.c:1176:8: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
    idx++;
       ^
wolfcrypt/src/port/caam/caam_driver.c:1222:8: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
    idx++;
       ^
wolfcrypt/src/port/caam/caam_driver.c:1428:7: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    i = i + 1;
      ^
wolfcrypt/src/port/caam/caam_driver.c:1537:80: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    CAAM_ADR_UNMAP(vaddr[vidx++], desc->buf[i].data, desc->buf[i].dataSz, 1); i++;
                                                                               ^
wolfcrypt/src/port/caam/caam_driver.c:1659:13: style: Variable 'vidx' is assigned a value that is never used. [unreadVariable]
        vidx++; i++;
            ^
wolfcrypt/src/port/caam/caam_driver.c:1659:18: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
        vidx++; i++;
                 ^
wolfcrypt/src/port/caam/caam_driver.c:168:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("\tNumber Partitions : %d\n", ((SMVID_MS >> 12) & 0xFU));
    ^
wolfcrypt/src/port/caam/caam_driver.c:169:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("\tNumber Pages : %d\n", (SMVID_MS & 0x3FFU));
    ^
wolfcrypt/src/port/caam/caam_driver.c:170:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("\tPage Size : 2^%d\n", ((SMVID_LS >> 16) & 0x7U));
    ^
wolfcrypt/src/port/caam/caam_driver.c:244:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("freeing partition %d\n", part);
    ^
wolfcrypt/src/port/caam/caam_driver.c:512:9: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        printf("Attempt with entropy delay set to %d\n", entropy_delay);
        ^
wolfcrypt/src/port/caam/caam_driver.c:513:9: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        printf("Min delay of %d and max of %d\n",
        ^
wolfcrypt/src/port/caam/caam_driver.c:513:9: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        printf("Min delay of %d and max of %d\n",
        ^
wolfcrypt/src/port/caam/caam_integrity.c:508:17: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int sz = 0, ret;
                ^
wolfcrypt/src/port/caam/caam_integrity.c:941:9: style: The scope of the variable 'opIdx' can be reduced. [variableScope]
    int opIdx;
        ^
wolfcrypt/src/port/caam/caam_integrity.c:1322:9: style: The scope of the variable 'sz' can be reduced. [variableScope]
    int sz = 0;
        ^
wolfcrypt/src/port/caam/caam_integrity.c:1322:12: style: Variable 'sz' is assigned a value that is never used. [unreadVariable]
    int sz = 0;
           ^
wolfcrypt/src/port/caam/caam_qnx.c:193:23: style: Redundant condition: If 'ret == -1', the comparison 'ret != 0' is always true. [redundantCondition]
    } while (ret != 0 && ret == -1 && count < 5);
                      ^
wolfcrypt/src/port/caam/caam_qnx.c:637:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == EOK) {
            ^
wolfcrypt/src/port/caam/caam_qnx.c:631:13: note: First condition
    if (ret == EOK) {
            ^
wolfcrypt/src/port/caam/caam_qnx.c:637:13: note: Second condition
    if (ret == EOK) {
            ^
wolfcrypt/src/port/caam/caam_qnx.c:436:17: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int length, ret;
                ^
wolfcrypt/src/port/caam/caam_qnx.c:437:20: style: The scope of the variable 'buf' can be reduced. [variableScope]
    unsigned char *buf;
                   ^
wolfcrypt/src/port/caam/caam_qnx.c:588:20: style: The scope of the variable 'i' can be reduced. [variableScope]
    int ret = EOK, i = 0;
                   ^
wolfcrypt/src/port/caam/caam_qnx.c:592:20: style: The scope of the variable 'outIdx' can be reduced. [variableScope]
    int inIdx = 0, outIdx = 0, algo;
                   ^
wolfcrypt/src/port/caam/caam_qnx.c:752:20: style: The scope of the variable 'i' can be reduced. [variableScope]
    int ret = EOK, i = 0;
                   ^
wolfcrypt/src/port/caam/caam_qnx.c:756:20: style: The scope of the variable 'outIdx' can be reduced. [variableScope]
    int inIdx = 0, outIdx = 0;
                   ^
wolfcrypt/src/port/caam/caam_qnx.c:703:10: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
        i++;
         ^
wolfcrypt/src/port/caam/caam_sha.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:841:26: style: Condition 'args[0]=0' is always false [knownConditionTrueFalse]
                (args[0] = 0)? CAAM_RED_BLOB : CAAM_BLACK_BLOB)
                         ^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:852:26: style: Condition 'args[0]=0' is always false [knownConditionTrueFalse]
                (args[0] = 0)? CAAM_RED_BLOB : CAAM_BLACK_BLOB)
                         ^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:440:17: style: Redundant initialization for 'kSz'. The initialized value is overwritten before it is read. [redundantInitialization]
    keySz = kSz = wc_ecc_size(key);
                ^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:402:16: note: kSz is initialized
    word32 kSz = MAX_ECC_BYTES + WC_CAAM_MAC_SZ;
               ^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:440:17: note: kSz is overwritten
    keySz = kSz = wc_ecc_size(key);
                ^
wolfcrypt/src/port/caam/wolfcaam_hash.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/caam/wolfcaam_init.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/caam/wolfcaam_init.c:424:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
wolfcrypt/src/port/caam/wolfcaam_init.c:369:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/port/caam/wolfcaam_init.c:424:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
wolfcrypt/src/port/caam/wolfcaam_seco.c:1005:26: style: Variable 'cipherAndTagSz' is assigned a value that is never used. [unreadVariable]
    int   cipherAndTagSz = 0;
                         ^
wolfcrypt/src/port/caam/wolfcaam_seco.c:1345:18: style: Variable 'pubkey' is not assigned a value. [unassignedVariable]
    CAAM_ADDRESS pubkey, privkey;
                 ^
wolfcrypt/src/port/caam/wolfcaam_seco.c:1345:26: style: Variable 'privkey' is not assigned a value. [unassignedVariable]
    CAAM_ADDRESS pubkey, privkey;
                         ^
wolfcrypt/src/port/caam/wolfcaam_seco.c:338:0: information: Skipping configuration 'HSM_KEY_TYPE_HMAC_224;WOLFSSL_SECO_CAAM' since the value of 'HSM_KEY_TYPE_HMAC_224' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            ret = HSM_KEY_TYPE_HMAC_224;
^
wolfcrypt/src/port/caam/wolfcaam_seco.c:344:0: information: Skipping configuration 'HSM_KEY_TYPE_HMAC_256;WOLFSSL_SECO_CAAM' since the value of 'HSM_KEY_TYPE_HMAC_256' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            ret = HSM_KEY_TYPE_HMAC_256;
^
wolfcrypt/src/port/caam/wolfcaam_seco.c:350:0: information: Skipping configuration 'HSM_KEY_TYPE_HMAC_384;WOLFSSL_SECO_CAAM' since the value of 'HSM_KEY_TYPE_HMAC_384' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            ret = HSM_KEY_TYPE_HMAC_384;
^
wolfcrypt/src/port/caam/wolfcaam_seco.c:356:0: information: Skipping configuration 'HSM_KEY_TYPE_HMAC_512;WOLFSSL_SECO_CAAM' since the value of 'HSM_KEY_TYPE_HMAC_512' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            ret = HSM_KEY_TYPE_HMAC_512;
^
wolfcrypt/src/port/caam/wolfcaam_seco.c:397:0: information: Skipping configuration 'HSM_OP_KEY_GENERATION_FLAGS_CREATE;WOLFSSL_SECO_CAAM' since the value of 'HSM_OP_KEY_GENERATION_FLAGS_CREATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        ret = HSM_OP_KEY_GENERATION_FLAGS_CREATE;
^
wolfcrypt/src/port/caam/wolfcaam_seco.c:592:0: information: Skipping configuration 'HSM_OP_KEY_GENERATION_FLAGS_CREATE;WOLFSSL_SECO_CAAM' since the value of 'HSM_OP_KEY_GENERATION_FLAGS_CREATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (wc_SECO_GenerateKey(HSM_OP_KEY_GENERATION_FLAGS_CREATE,
^
wolfcrypt/src/port/caam/wolfcaam_seco.c:391:0: information: Skipping configuration 'HSM_OP_KEY_GENERATION_FLAGS_UPDATE;WOLFSSL_SECO_CAAM' since the value of 'HSM_OP_KEY_GENERATION_FLAGS_UPDATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        ret = HSM_OP_KEY_GENERATION_FLAGS_UPDATE;
^
wolfcrypt/src/port/caam/wolfcaam_seco.c:142:0: information: Skipping configuration 'HSM_SVC_KEY_STORE_FLAGS_UPDATE;WOLFSSL_SECO_CAAM' since the value of 'HSM_SVC_KEY_STORE_FLAGS_UPDATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            key_store_args.flags = HSM_SVC_KEY_STORE_FLAGS_UPDATE;
^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:88:17: style: Condition 'inl>=8' is always true [knownConditionTrueFalse]
        if (inl >= 8) {
                ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:82:13: note: Assuming that condition 'inl>=16' is not redundant
    if (inl >= 16) {
            ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:84:9: note: Compound assignment '-=', assigned value is 7
        inl -= 8;
        ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:88:17: note: Condition 'inl>=8' is always true
        if (inl >= 8) {
                ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:165:17: style: Condition 'inl>=8' is always true [knownConditionTrueFalse]
        if (inl >= 8) {
                ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:159:13: note: Assuming that condition 'inl>=16' is not redundant
    if (inl >= 16) {
            ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:161:9: note: Compound assignment '-=', assigned value is 7
        inl -= 8;
        ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:165:17: note: Condition 'inl>=8' is always true
        if (inl >= 8) {
                ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:63:27: style: The scope of the variable 'r0' can be reduced. [variableScope]
    register uint64_t i0, r0;
                          ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:139:27: style: The scope of the variable 'r0' can be reduced. [variableScope]
    register uint64_t i0, r0;
                          ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:255:17: style: Condition 'inl>=16' is always true [knownConditionTrueFalse]
        if (inl >= 16) {
                ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:248:13: note: Assuming that condition 'inl>=32' is not redundant
    if (inl >= 32) {
            ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:251:9: note: Compound assignment '-=', assigned value is 15
        inl -= 16;
        ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:255:17: note: Condition 'inl>=16' is always true
        if (inl >= 16) {
                ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:361:17: style: Condition 'inl>=16' is always true [knownConditionTrueFalse]
        if (inl >= 16) {
                ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:354:13: note: Assuming that condition 'inl>=32' is not redundant
    if (inl >= 32) {
            ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:359:9: note: Compound assignment '-=', assigned value is 15
        inl -= 16;
        ^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:361:17: note: Condition 'inl>=16' is always true
        if (inl >= 16) {
                ^
wolfcrypt/src/port/devcrypto/devcrypto_aes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/devcrypto/devcrypto_rsa.c:237:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
wolfcrypt/src/port/devcrypto/devcrypto_rsa.c:229:13: note: First condition
    if (ret == 0) {
            ^
wolfcrypt/src/port/devcrypto/devcrypto_rsa.c:237:13: note: Second condition
    if (ret == 0) {
            ^
wolfcrypt/src/port/devcrypto/wc_devcrypto.c:49:0: information: Skipping configuration 'CIOCASYMFEAT;WOLFSSL_DEVCRYPTO_RSA;WOLFSSL_DEVCRYPTO' since the value of 'CIOCASYMFEAT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        if (ioctl(fd, CIOCASYMFEAT, &asymAva) == -1) {
^
wolfcrypt/src/port/devcrypto/wc_devcrypto.c:173:0: information: Skipping configuration 'CIOCGSESSINFO;DEBUG_DEVCRYPTO;WOLFSSL_DEVCRYPTO' since the value of 'CIOCGSESSINFO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (ioctl(ctx->cfd, CIOCGSESSINFO, &sesInfo)) {
^
wolfcrypt/src/port/intel/quickassist_sync.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/intel/quickassist_sync.c:710:9: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
    ret = dev->ret;
        ^
wolfcrypt/src/port/intel/quickassist_sync.c:704:13: note: ret is assigned
        ret = IntelQaPoll(dev);
            ^
wolfcrypt/src/port/intel/quickassist_sync.c:710:9: note: ret is overwritten
    ret = dev->ret;
        ^
wolfcrypt/src/port/intel/quickassist_sync.c:776:12: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
    status = cpaCySymSessionCtxGetSize(dev->handle, setup, &sessionCtxSize);
           ^
wolfcrypt/src/port/intel/quickassist_sync.c:826:22: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
    CpaStatus status = CPA_STATUS_SUCCESS;
                     ^
wolfcrypt/src/port/intel/quickassist_sync.c:1101:12: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
    status = cpaCySymPerformOp(dev->handle, dev, opData,
           ^
wolfcrypt/src/port/intel/quickassist_sync.c:1349:16: style: The scope of the variable 'rc' can be reduced. [variableScope]
    int devId, rc;
               ^
wolfcrypt/src/port/iotsafe/iotsafe.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: warning: The address of local variable 't' might be accessed at non-zero index. [objectIndex]
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:202:40: note: Address of variable taken here.
        if (hex_to_bytes(&haystack[i], &t, 1) < 0)
                                       ^
wolfcrypt/src/port/iotsafe/iotsafe.c:202:40: note: Calling function 'hex_to_bytes', 2nd argument '&t' value is lifetime=t
        if (hex_to_bytes(&haystack[i], &t, 1) < 0)
                                       ^
wolfcrypt/src/port/iotsafe/iotsafe.c:108:23: note: Assuming condition is Assuming condition is false
        if ((ch1 < 0) || (ch2 < 0)) {
                      ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: note: The address of local variable 't' might be accessed at non-zero index.
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: warning: The address of local variable 'l' might be accessed at non-zero index. [objectIndex]
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:204:44: note: Address of variable taken here.
        if (hex_to_bytes(&haystack[i + 2], &l, 1) < 0)
                                           ^
wolfcrypt/src/port/iotsafe/iotsafe.c:204:44: note: Calling function 'hex_to_bytes', 2nd argument '&l' value is lifetime=l
        if (hex_to_bytes(&haystack[i + 2], &l, 1) < 0)
                                           ^
wolfcrypt/src/port/iotsafe/iotsafe.c:108:23: note: Assuming condition is Assuming condition is false
        if ((ch1 < 0) || (ch2 < 0)) {
                      ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: note: The address of local variable 'l' might be accessed at non-zero index.
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: warning: The address of local variable 'cur_lc' might be accessed at non-zero index. [objectIndex]
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:276:62: note: Address of variable taken here.
    if (hex_to_bytes(cmd + AT_CSIM_CMD_SIZE + AT_CMD_LC_POS, &cur_lc, 1) < 0) {
                                                             ^
wolfcrypt/src/port/iotsafe/iotsafe.c:276:62: note: Calling function 'hex_to_bytes', 2nd argument '&cur_lc' value is lifetime=cur_lc
    if (hex_to_bytes(cmd + AT_CSIM_CMD_SIZE + AT_CMD_LC_POS, &cur_lc, 1) < 0) {
                                                             ^
wolfcrypt/src/port/iotsafe/iotsafe.c:108:23: note: Assuming condition is Assuming condition is false
        if ((ch1 < 0) || (ch2 < 0)) {
                      ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: note: The address of local variable 'cur_lc' might be accessed at non-zero index.
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: warning: The address of local variable 'len' might be accessed at non-zero index. [objectIndex]
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:372:39: note: Address of variable taken here.
        if (hex_to_bytes(payload + 2, &len, 1) == 1) {
                                      ^
wolfcrypt/src/port/iotsafe/iotsafe.c:372:39: note: Calling function 'hex_to_bytes', 2nd argument '&len' value is lifetime=len
        if (hex_to_bytes(payload + 2, &len, 1) == 1) {
                                      ^
wolfcrypt/src/port/iotsafe/iotsafe.c:108:23: note: Assuming condition is Assuming condition is false
        if ((ch1 < 0) || (ch2 < 0)) {
                      ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: note: The address of local variable 'len' might be accessed at non-zero index.
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: warning: The address of local variable 'fs_msb' might be accessed at non-zero index. [objectIndex]
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:463:40: note: Address of variable taken here.
        if (hex_to_bytes(filesz_s + 4, &fs_msb, 1) < 0)
                                       ^
wolfcrypt/src/port/iotsafe/iotsafe.c:463:40: note: Calling function 'hex_to_bytes', 2nd argument '&fs_msb' value is lifetime=fs_msb
        if (hex_to_bytes(filesz_s + 4, &fs_msb, 1) < 0)
                                       ^
wolfcrypt/src/port/iotsafe/iotsafe.c:108:23: note: Assuming condition is Assuming condition is false
        if ((ch1 < 0) || (ch2 < 0)) {
                      ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: note: The address of local variable 'fs_msb' might be accessed at non-zero index.
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: warning: The address of local variable 'fs_lsb' might be accessed at non-zero index. [objectIndex]
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:465:40: note: Address of variable taken here.
        if (hex_to_bytes(filesz_s + 6, &fs_lsb, 1) < 0)
                                       ^
wolfcrypt/src/port/iotsafe/iotsafe.c:465:40: note: Calling function 'hex_to_bytes', 2nd argument '&fs_lsb' value is lifetime=fs_lsb
        if (hex_to_bytes(filesz_s + 6, &fs_lsb, 1) < 0)
                                       ^
wolfcrypt/src/port/iotsafe/iotsafe.c:108:23: note: Assuming condition is Assuming condition is false
        if ((ch1 < 0) || (ch2 < 0)) {
                      ^
wolfcrypt/src/port/iotsafe/iotsafe.c:112:15: note: The address of local variable 'fs_lsb' might be accessed at non-zero index.
        output[i] = (unsigned char)((ch1 << 4) + ch2);
              ^
wolfcrypt/src/port/iotsafe/iotsafe.c:358:11: style: The scope of the variable 'endstr' can be reduced. [variableScope]
    char *endstr;
          ^
wolfcrypt/src/port/iotsafe/iotsafe.c:944:9: style: The scope of the variable 'retries' can be reduced. [variableScope]
    int retries = 0;
        ^
wolfcrypt/src/port/iotsafe/iotsafe.c:1020:17: style: Variable 'retries' is assigned a value that is never used. [unreadVariable]
        retries = 0;
                ^
wolfcrypt/src/port/iotsafe/iotsafe.c:1052:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("IOTSAFE PK ECC KeyGen: keySz %d, Curve ID %d, Slot %d\n",
    ^
wolfcrypt/src/port/iotsafe/iotsafe.c:1129:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("IOTSAFE PK ECC Sign: InSz %d, KeySz %d\n", inSz, keySz);
    ^
wolfcrypt/src/port/iotsafe/iotsafe.c:1129:5: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("IOTSAFE PK ECC Sign: InSz %d, KeySz %d\n", inSz, keySz);
    ^
wolfcrypt/src/port/iotsafe/iotsafe.c:1195:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("IOTSAFE PK ECC Verify: SigSz %d, HashSz %d, KeySz %d, Slot %d\n",
    ^
wolfcrypt/src/port/iotsafe/iotsafe.c:1195:5: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("IOTSAFE PK ECC Verify: SigSz %d, HashSz %d, KeySz %d, Slot %d\n",
    ^
wolfcrypt/src/port/iotsafe/iotsafe.c:1195:5: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("IOTSAFE PK ECC Verify: SigSz %d, HashSz %d, KeySz %d, Slot %d\n",
    ^
wolfcrypt/src/port/kcapi/kcapi_aes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:179:33: warning: Either the condition 'key!=NULL' is redundant or there is possible null pointer dereference: key. [nullPointerRedundantCheck]
    ret = KcapiEcc_LoadKey(key, key->pubkey_raw, &pubkey_sz, 0);
                                ^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:169:13: note: Assuming that condition 'key!=NULL' is not redundant
    if (key != NULL && key->handle != NULL) {
            ^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:179:33: note: Null pointer dereference
    ret = KcapiEcc_LoadKey(key, key->pubkey_raw, &pubkey_sz, 0);
                                ^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:179:9: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
    ret = KcapiEcc_LoadKey(key, key->pubkey_raw, &pubkey_sz, 0);
        ^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:176:13: note: ret is assigned
        ret = BAD_FUNC_ARG;
            ^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:179:9: note: ret is overwritten
    ret = KcapiEcc_LoadKey(key, key->pubkey_raw, &pubkey_sz, 0);
        ^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:415:9: style: The scope of the variable 'pubLen' can be reduced. [variableScope]
    int pubLen;
        ^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:479:29: warning:inconclusive: Either the condition 'buf_aligned==NULL' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
        XMEMCPY(buf_aligned + sigLen, hash, hashLen);
                            ^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:467:25: note: Assuming that condition 'buf_aligned==NULL' is not redundant
        if (buf_aligned == NULL) {
                        ^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:479:29: note: Null pointer addition
        XMEMCPY(buf_aligned + sigLen, hash, hashLen);
                            ^
wolfcrypt/src/port/kcapi/kcapi_hash.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/kcapi/kcapi_hmac.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/maxim/maxq10xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/maxim/maxq10xx.c:2446:8: style: Variable 'rc' is reassigned a value before the old one has been used. [redundantAssignment]
    rc = wolfSSL_CryptHwMutexLock();
       ^
wolfcrypt/src/port/maxim/maxq10xx.c:2430:8: note: rc is assigned
    rc = wc_ecc_export_public_raw(otherKey, qx, &qxLen, qy, &qyLen);
       ^
wolfcrypt/src/port/maxim/maxq10xx.c:2446:8: note: rc is overwritten
    rc = wolfSSL_CryptHwMutexLock();
       ^
wolfcrypt/src/port/maxim/maxq10xx.c:871:38: style: Variable 'req_len' is assigned a value that is never used. [unreadVariable]
    mxq_length proc_len = 0, req_len = 0;
                                     ^
wolfcrypt/src/port/maxim/maxq10xx.c:178:21: style: The scope of the variable 'chunk' can be reduced. [variableScope]
    uint32_t i = 0, chunk;
                    ^
wolfcrypt/src/port/nrf51.c:163:0: information: Skipping configuration 'BSP_LED_0;WOLFSSL_NRF51;WOLFSSL_NRF5x' since the value of 'BSP_LED_0' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        nrf_gpio_pin_toggle(BSP_LED_0);
^
wolfcrypt/src/port/nrf51.c:67:27: style: The scope of the variable 'length' can be reduced. [variableScope]
    int remaining = size, length, pos = 0;
                          ^
wolfcrypt/src/port/nxp/dcp_port.c:365:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
        ret = WC_HW_E;
            ^
wolfcrypt/src/port/nxp/dcp_port.c:477:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
        ret = WC_HW_E;
            ^
wolfcrypt/src/port/nxp/ksdk_port.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/nxp/ksdk_port.c:1279:12: style: Variable 'status' is reassigned a value before the old one has been used. [redundantAssignment]
    status = LTC_PKHA_ModMul(LTC_BASE, A, sizeA, V, szV, curve25519_modbin,
           ^
wolfcrypt/src/port/nxp/ksdk_port.c:1266:20: note: status is assigned
            status = LTC_PKHA_ModSub1(LTC_BASE, I, szI, &one, sizeof(one),
                   ^
wolfcrypt/src/port/nxp/ksdk_port.c:1279:12: note: status is overwritten
    status = LTC_PKHA_ModMul(LTC_BASE, A, sizeA, V, szV, curve25519_modbin,
           ^
wolfcrypt/src/port/nxp/ksdk_port.c:1279:12: style: Variable 'status' is reassigned a value before the old one has been used. [redundantAssignment]
    status = LTC_PKHA_ModMul(LTC_BASE, A, sizeA, V, szV, curve25519_modbin,
           ^
wolfcrypt/src/port/nxp/ksdk_port.c:1272:20: note: status is assigned
            status = LTC_PKHA_ModSub1(LTC_BASE, curve25519_modbin,
                   ^
wolfcrypt/src/port/nxp/ksdk_port.c:1279:12: note: status is overwritten
    status = LTC_PKHA_ModMul(LTC_BASE, A, sizeA, V, szV, curve25519_modbin,
           ^
wolfcrypt/src/port/nxp/se050_port.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/nxp/se050_port.c:200:5: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("se050_get_random_number: %p (%d)\n", rand_out, count);
    ^
wolfcrypt/src/port/nxp/se050_port.c:613:21: style: Variable 'outBitSz' is assigned a value that is never used. [unreadVariable]
    size_t outBitSz = 0;
                    ^
wolfcrypt/src/port/nxp/se050_port.c:682:31: style: Variable 'derSzBits' is assigned a value that is never used. [unreadVariable]
    size_t          derSzBits = 0;
                              ^
wolfcrypt/src/port/nxp/se050_port.c:815:31: style: Variable 'derSzBits' is assigned a value that is never used. [unreadVariable]
    size_t          derSzBits = 0;
                              ^
wolfcrypt/src/port/nxp/se050_port.c:1150:15: style: Variable 'derSz' is assigned a value that is never used. [unreadVariable]
    int derSz = 0;
              ^
wolfcrypt/src/port/nxp/se050_port.c:1303:20: style: Variable 'decLen' is assigned a value that is never used. [unreadVariable]
    size_t decLen  = 0;
                   ^
wolfcrypt/src/port/nxp/se050_port.c:1310:31: style: Variable 'smStatus' is assigned a value that is never used. [unreadVariable]
    smStatus_t       smStatus = SM_NOT_OK;
                              ^
wolfcrypt/src/port/nxp/se050_port.c:1313:15: style: Variable 'derSz' is assigned a value that is never used. [unreadVariable]
    int derSz = 0;
              ^
wolfcrypt/src/port/nxp/se050_port.c:1498:15: style: Variable 'derSz' is assigned a value that is never used. [unreadVariable]
    int derSz = 0;
              ^
wolfcrypt/src/port/nxp/se050_port.c:1658:15: style: Variable 'derSz' is assigned a value that is never used. [unreadVariable]
    int derSz = 0;
              ^
wolfcrypt/src/port/nxp/se050_port.c:1917:12: style: Variable 'status' is reassigned a value before the old one has been used. [redundantAssignment]
    status = sss_key_store_context_init(&host_keystore, cfg_se050_i2c_pi);
           ^
wolfcrypt/src/port/nxp/se050_port.c:1914:20: note: status is assigned
            status = kStatus_SSS_Fail;
                   ^
wolfcrypt/src/port/nxp/se050_port.c:1917:12: note: status is overwritten
    status = sss_key_store_context_init(&host_keystore, cfg_se050_i2c_pi);
           ^
wolfcrypt/src/port/nxp/se050_port.c:1875:23: style: The scope of the variable 'keySize' can be reduced. [variableScope]
    int               keySize = 0;
                      ^
wolfcrypt/src/port/nxp/se050_port.c:1875:31: style: Variable 'keySize' is assigned a value that is never used. [unreadVariable]
    int               keySize = 0;
                              ^
wolfcrypt/src/port/nxp/se050_port.c:2162:19: style: Variable 'rBufSz' is assigned a value that is never used. [unreadVariable]
    word32 rBufSz = (word32)sizeof(rBuf);
                  ^
wolfcrypt/src/port/nxp/se050_port.c:2163:19: style: Variable 'sBufSz' is assigned a value that is never used. [unreadVariable]
    word32 sBufSz = (word32)sizeof(sBuf);
                  ^
wolfcrypt/src/port/nxp/se050_port.c:2373:31: style: Variable 'derSzBits' is assigned a value that is never used. [unreadVariable]
    size_t          derSzBits = 0;
                              ^
wolfcrypt/src/port/nxp/se050_port.c:1994:49: warning: Either the condition 'outLen==NULL' is redundant or there is possible null pointer dereference: outLen. [nullPointerRedundantCheck]
            "keyId %d\n", key, in, inLen, out, *outLen, key->keyId);
                                                ^
wolfcrypt/src/port/nxp/se050_port.c:1998:16: note: Assuming that condition 'outLen==NULL' is not redundant
        outLen == NULL || key == NULL) {
               ^
wolfcrypt/src/port/nxp/se050_port.c:1994:49: note: Null pointer dereference
            "keyId %d\n", key, in, inLen, out, *outLen, key->keyId);
                                                ^
wolfcrypt/src/port/nxp/se050_port.c:1994:57: warning: Either the condition 'key==NULL' is redundant or there is possible null pointer dereference: key. [nullPointerRedundantCheck]
            "keyId %d\n", key, in, inLen, out, *outLen, key->keyId);
                                                        ^
wolfcrypt/src/port/nxp/se050_port.c:1998:31: note: Assuming that condition 'key==NULL' is not redundant
        outLen == NULL || key == NULL) {
                              ^
wolfcrypt/src/port/nxp/se050_port.c:1994:57: note: Null pointer dereference
            "keyId %d\n", key, in, inLen, out, *outLen, key->keyId);
                                                        ^
wolfcrypt/src/port/psa/psa_aes.c:141:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
wolfcrypt/src/port/silabs/silabs_ecc.c:69:0: information: Skipping configuration 'HAVE_CURVE25519;SL_SE_KEY_TYPE_ECC_X25519;WOLFSSL_SILABS_SE_ACCEL' since the value of 'SL_SE_KEY_TYPE_ECC_X25519' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        res = SL_SE_KEY_TYPE_ECC_X25519;
^
wolfcrypt/src/port/silabs/silabs_ecc.c:75:0: information: Skipping configuration 'HAVE_CURVE448;SL_SE_KEY_TYPE_ECC_X448;WOLFSSL_SILABS_SE_ACCEL' since the value of 'SL_SE_KEY_TYPE_ECC_X448' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        res = SL_SE_KEY_TYPE_ECC_X448;
^
wolfcrypt/src/port/silabs/silabs_ecc.c:92:13: style: Redundant initialization for 'sl_stat'. The initialized value is overwritten before it is read. [redundantInitialization]
    sl_stat = sl_se_validate_key(&(key->key));
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:89:25: note: sl_stat is initialized
    sl_status_t sl_stat = sl_se_init_command_context(&(key->cmd_ctx));
                        ^
wolfcrypt/src/port/silabs/silabs_ecc.c:92:13: note: sl_stat is overwritten
    sl_stat = sl_se_validate_key(&(key->key));
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:98:13: style: Variable 'sl_stat' is reassigned a value before the old one has been used. [redundantAssignment]
    sl_stat = sl_se_ecc_sign(
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:92:13: note: sl_stat is assigned
    sl_stat = sl_se_validate_key(&(key->key));
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:98:13: note: sl_stat is overwritten
    sl_stat = sl_se_ecc_sign(
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:120:13: style: Redundant initialization for 'sl_stat'. The initialized value is overwritten before it is read. [redundantInitialization]
    sl_stat = sl_se_ecc_verify(
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:118:25: note: sl_stat is initialized
    sl_status_t sl_stat = sl_se_init_command_context(&(key->cmd_ctx));
                        ^
wolfcrypt/src/port/silabs/silabs_ecc.c:120:13: note: sl_stat is overwritten
    sl_stat = sl_se_ecc_verify(
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:159:13: style: Variable 'sl_stat' is reassigned a value before the old one has been used. [redundantAssignment]
    sl_stat = sl_se_generate_key(&(key->cmd_ctx),
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:156:13: note: sl_stat is assigned
    sl_stat = sl_se_get_storage_size(&key->key, &key->key.storage.location.buffer.size);
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:159:13: note: sl_stat is overwritten
    sl_stat = sl_se_generate_key(&(key->cmd_ctx),
            ^
wolfcrypt/src/port/silabs/silabs_ecc.c:57:0: information: Skipping configuration 'SL_SE_KEY_TYPE_ECC_P384;WOLFSSL_SILABS_SE_ACCEL' since the value of 'SL_SE_KEY_TYPE_ECC_P384' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        res = SL_SE_KEY_TYPE_ECC_P384;
^
wolfcrypt/src/port/silabs/silabs_ecc.c:63:0: information: Skipping configuration 'SL_SE_KEY_TYPE_ECC_P521;WOLFSSL_SILABS_SE_ACCEL' since the value of 'SL_SE_KEY_TYPE_ECC_P521' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        res = SL_SE_KEY_TYPE_ECC_P521;
^
wolfcrypt/src/port/st/stm32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/port/st/stm32.c:424:0: information: Skipping configuration 'CRYP_HEADERWIDTHUNIT_BYTE;STM32_CRYPTO;STM32_HAL_V2;WOLFSSL_STM32_CUBEMX' since the value of 'CRYP_HEADERWIDTHUNIT_BYTE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    hcryp->Init.HeaderWidthUnit = CRYP_HEADERWIDTHUNIT_BYTE;
^
wolfcrypt/src/port/st/stm32.c:409:0: information: Skipping configuration 'CRYP_KEYSIZE_192B;STM32_CRYPTO;WOLFSSL_STM32_CUBEMX' since the value of 'CRYP_KEYSIZE_192B' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            hcryp->Init.KeySize = CRYP_KEYSIZE_192B;
^
wolfcrypt/src/port/st/stm32.c:131:0: information: Skipping configuration 'HASH_CR_LKEY;STM32_HASH' since the value of 'HASH_CR_LKEY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            | HASH_CR_LKEY
^
wolfcrypt/src/port/st/stm32.c:186:0: information: Skipping configuration 'HASH_DIGEST;STM32_HASH' since the value of 'HASH_DIGEST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            digest[i] = HASH_DIGEST->HR[i];
^
wolfcrypt/src/port/st/stm32.c:125:0: information: Skipping configuration 'HASH_IMR_DCIE;HASH_IMR_DINIE;STM32_HASH' since the value of 'HASH_IMR_DCIE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        HASH->IMR |= (HASH_IMR_DINIE | HASH_IMR_DCIE);
^
wolfcrypt/src/port/st/stm32.c:125:0: information: Skipping configuration 'HASH_IMR_DCIE;HASH_IMR_DINIE;STM32_HASH' since the value of 'HASH_IMR_DINIE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        HASH->IMR |= (HASH_IMR_DINIE | HASH_IMR_DCIE);
^
wolfcrypt/src/port/ti/ti-aes.c:125:18: style: The scope of the variable 'in_p' can be reduced. [variableScope]
    const byte * in_p ; byte * out_p ;
                 ^
wolfcrypt/src/port/ti/ti-aes.c:125:32: style: The scope of the variable 'out_p' can be reduced. [variableScope]
    const byte * in_p ; byte * out_p ;
                               ^
wolfcrypt/src/port/ti/ti-aes.c:391:37: style: Variable 'nonce_a' is assigned a value that is never used. [unreadVariable]
        nonce_save = NULL ; nonce_a = (byte *)nonce ;
                                    ^
wolfcrypt/src/port/ti/ti-aes.c:460:37: style: Variable 'nonce_a' is assigned a value that is never used. [unreadVariable]
        nonce_save = NULL ; nonce_a = (byte *)nonce ;
                                    ^
wolfcrypt/src/port/ti/ti-aes.c:173:17: style: The scope of the variable 'even' can be reduced. [variableScope]
            int even ;
                ^
wolfcrypt/src/port/ti/ti-des3.c:99:18: style: The scope of the variable 'in_p' can be reduced. [variableScope]
    const byte * in_p ; byte * out_p ;
                 ^
wolfcrypt/src/port/ti/ti-des3.c:99:32: style: The scope of the variable 'out_p' can be reduced. [variableScope]
    const byte * in_p ; byte * out_p ;
                               ^
wolfcrypt/src/pwdbased.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/random.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 162 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/random.c:2555:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE' since the value of 'CUSTOM_RAND_GENERATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                output[i++] = (byte)CUSTOM_RAND_GENERATE();
^
wolfcrypt/src/random.c:2559:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE' since the value of 'CUSTOM_RAND_GENERATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                *((CUSTOM_RAND_TYPE*)&output[i]) = CUSTOM_RAND_GENERATE();
^
wolfcrypt/src/random.c:2555:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE;ENTROPY_NUM_64BIT_WORDS' since the value of 'CUSTOM_RAND_GENERATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                output[i++] = (byte)CUSTOM_RAND_GENERATE();
^
wolfcrypt/src/random.c:2559:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE;ENTROPY_NUM_64BIT_WORDS' since the value of 'CUSTOM_RAND_GENERATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                *((CUSTOM_RAND_TYPE*)&output[i]) = CUSTOM_RAND_GENERATE();
^
wolfcrypt/src/random.c:2555:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE;WOLFSSL_DEOS' since the value of 'CUSTOM_RAND_GENERATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                output[i++] = (byte)CUSTOM_RAND_GENERATE();
^
wolfcrypt/src/random.c:2559:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE;WOLFSSL_DEOS' since the value of 'CUSTOM_RAND_GENERATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                *((CUSTOM_RAND_TYPE*)&output[i]) = CUSTOM_RAND_GENERATE();
^
wolfcrypt/src/random.c:1867:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE_BLOCK' since the value of 'CUSTOM_RAND_GENERATE_BLOCK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret = (int)CUSTOM_RAND_GENERATE_BLOCK(output, sz);
^
wolfcrypt/src/random.c:1867:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE_BLOCK;ENTROPY_NUM_64BIT_WORDS' since the value of 'CUSTOM_RAND_GENERATE_BLOCK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret = (int)CUSTOM_RAND_GENERATE_BLOCK(output, sz);
^
wolfcrypt/src/random.c:1867:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE_BLOCK;WOLFSSL_KCAPI' since the value of 'CUSTOM_RAND_GENERATE_BLOCK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret = (int)CUSTOM_RAND_GENERATE_BLOCK(output, sz);
^
wolfcrypt/src/random.c:2520:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE_SEED' since the value of 'CUSTOM_RAND_GENERATE_SEED' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        return CUSTOM_RAND_GENERATE_SEED(output, sz);
^
wolfcrypt/src/random.c:2520:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE_SEED;ENTROPY_NUM_64BIT_WORDS' since the value of 'CUSTOM_RAND_GENERATE_SEED' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        return CUSTOM_RAND_GENERATE_SEED(output, sz);
^
wolfcrypt/src/random.c:2533:0: information: Skipping configuration 'CUSTOM_RAND_GENERATE_SEED_OS' since the value of 'CUSTOM_RAND_GENERATE_SEED_OS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        return CUSTOM_RAND_GENERATE_SEED_OS(os, output, sz);
^
wolfcrypt/src/rc2.c:165:12: style: The scope of the variable 'j' can be reduced. [variableScope]
    int i, j = 0;
           ^
wolfcrypt/src/rc2.c:230:12: style: The scope of the variable 'j' can be reduced. [variableScope]
    int i, j = 63;
           ^
wolfcrypt/src/rc2.c:285:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
wolfcrypt/src/rc2.c:314:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
wolfcrypt/src/rc2.c:165:14: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
    int i, j = 0;
             ^
wolfcrypt/src/rc2.c:230:14: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
    int i, j = 63;
             ^
wolfcrypt/src/rsa.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 148 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/rsa.c:3223:42: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
    SAVE_VECTOR_REGISTERS(return _svr_ret;);
                                         ^
wolfcrypt/src/rsa.c:4711:45: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
        SAVE_VECTOR_REGISTERS(ret = _svr_ret;);
                                            ^
wolfcrypt/src/sakke.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sakke.c:2427:42: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
    SAVE_VECTOR_REGISTERS(return _svr_ret;);
                                         ^
wolfcrypt/src/sakke.c:1318:46: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
        SAVE_VECTOR_REGISTERS(return _svr_ret;);
                                             ^
wolfcrypt/src/sha.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sha256.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 105 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sha3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sha512.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 79 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/signature.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/siphash.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_arm32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 115 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_arm32.c:71112:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:71113:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:71789:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:71790:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:145209:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:145210:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:145774:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:145775:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:152465:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm32.c:152429:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm32.c:152465:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm32.c:84:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_arm32.c:16566:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm32.c:16607:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm32.c:17811:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_arm32.c:43515:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm32.c:43556:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm32.c:74371:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_arm32.c:45008:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_arm32.c:58839:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm32.c:58880:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm32.c:88504:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:88505:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:89205:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:89206:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:91825:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_arm32.c:115321:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:115322:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:116056:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:116057:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm32.c:119269:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_arm32.c:72524:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_arm32.c:72525:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_arm32.c:146379:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_arm32.c:146380:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_arm32.c:89972:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_arm32.c:89973:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_arm32.c:116863:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_arm32.c:116864:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_arm64.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_arm64.c:23890:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:23891:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:24600:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:24601:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:116496:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:116497:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:117181:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:117182:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:39362:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:39357:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:39362:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:123044:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:123008:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:123044:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:6069:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm64.c:6110:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm64.c:15576:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm64.c:15617:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm64.c:24309:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_arm64.c:27283:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_arm64.c:116928:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_arm64.c:20687:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm64.c:20728:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_arm64.c:44099:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:44100:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:44827:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:44828:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:65427:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:65422:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:65427:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:44523:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_arm64.c:47526:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_arm64.c:72397:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:72398:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:73143:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:73144:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_arm64.c:110475:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:110470:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:110475:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_arm64.c:72821:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_arm64.c:76502:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_arm64.c:25330:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_arm64.c:25331:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_arm64.c:45573:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_arm64.c:45574:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_arm64.c:73913:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_arm64.c:73914:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_armthumb.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 170 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_armthumb.c:100736:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:100737:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:101413:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:101414:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:210205:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:210206:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:210770:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:210771:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:217461:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_armthumb.c:217425:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_armthumb.c:217461:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_armthumb.c:84:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_armthumb.c:27942:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_armthumb.c:27983:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_armthumb.c:30270:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_armthumb.c:80233:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_armthumb.c:80274:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_armthumb.c:104053:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_armthumb.c:83359:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_armthumb.c:92781:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_armthumb.c:92822:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_armthumb.c:111388:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:111389:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:112089:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:112090:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:114797:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_armthumb.c:125203:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:125204:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:125938:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:125939:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_armthumb.c:129275:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_armthumb.c:102148:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_armthumb.c:102149:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_armthumb.c:211375:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_armthumb.c:211376:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_armthumb.c:112856:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_armthumb.c:112857:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_armthumb.c:126745:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_armthumb.c:126746:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_c32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 134 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_c32.c:21534:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:21535:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:22771:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:22772:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:45420:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:45421:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:46539:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:46540:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:53203:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_c32.c:53167:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_c32.c:53203:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_c32.c:3706:37: style: Condition '(e[0]>>i)!=0' is always true [knownConditionTrueFalse]
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c32.c:3685:18: note: Assuming that condition 'e[0]==0x3' is not redundant
        if (e[0] == 0x3) {
                 ^
wolfcrypt/src/sp_c32.c:3706:37: note: Condition '(e[0]>>i)!=0' is always true
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c32.c:11282:37: style: Condition '(e[0]>>i)!=0' is always true [knownConditionTrueFalse]
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c32.c:11261:18: note: Assuming that condition 'e[0]==0x3' is not redundant
        if (e[0] == 0x3) {
                 ^
wolfcrypt/src/sp_c32.c:11282:37: note: Condition '(e[0]>>i)!=0' is always true
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c32.c:231:9: style: The scope of the variable 'b' can be reduced. [variableScope]
    int b;
        ^
wolfcrypt/src/sp_c32.c:3695:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_c32.c:8297:9: style: The scope of the variable 'b' can be reduced. [variableScope]
    int b;
        ^
wolfcrypt/src/sp_c32.c:11271:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_c32.c:22456:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_c32.c:46292:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_c32.c:36623:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:36624:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:37850:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:37851:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:37463:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_c32.c:18807:37: style: Condition '(e[0]>>i)!=0' is always true [knownConditionTrueFalse]
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c32.c:18786:18: note: Assuming that condition 'e[0]==0x3' is not redundant
        if (e[0] == 0x3) {
                 ^
wolfcrypt/src/sp_c32.c:18807:37: note: Condition '(e[0]>>i)!=0' is always true
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c32.c:15813:9: style: The scope of the variable 'b' can be reduced. [variableScope]
    int b;
        ^
wolfcrypt/src/sp_c32.c:18796:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_c32.c:28955:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:28956:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:30284:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:30285:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c32.c:29933:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_c64.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 131 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_c64.c:22504:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:22505:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:23694:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:23695:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:5977:37: style: Condition '(e[0]>>i)!=0' is always true [knownConditionTrueFalse]
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c64.c:5956:18: note: Assuming that condition 'e[0]==0x3' is not redundant
        if (e[0] == 0x3) {
                 ^
wolfcrypt/src/sp_c64.c:5977:37: note: Condition '(e[0]>>i)!=0' is always true
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c64.c:13009:37: style: Condition '(e[0]>>i)!=0' is always true [knownConditionTrueFalse]
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c64.c:12988:18: note: Assuming that condition 'e[0]==0x3' is not redundant
        if (e[0] == 0x3) {
                 ^
wolfcrypt/src/sp_c64.c:13009:37: note: Condition '(e[0]>>i)!=0' is always true
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c64.c:3511:9: style: The scope of the variable 'b' can be reduced. [variableScope]
    int b;
        ^
wolfcrypt/src/sp_c64.c:5966:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_c64.c:10394:9: style: The scope of the variable 'b' can be reduced. [variableScope]
    int b;
        ^
wolfcrypt/src/sp_c64.c:12998:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_c64.c:23403:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_c64.c:20134:37: style: Condition '(e[0]>>i)!=0' is always true [knownConditionTrueFalse]
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c64.c:20113:18: note: Assuming that condition 'e[0]==0x3' is not redundant
        if (e[0] == 0x3) {
                 ^
wolfcrypt/src/sp_c64.c:20134:37: note: Condition '(e[0]>>i)!=0' is always true
                    if ((e[0] >> i) != 0) {
                                    ^
wolfcrypt/src/sp_c64.c:17321:9: style: The scope of the variable 'b' can be reduced. [variableScope]
    int b;
        ^
wolfcrypt/src/sp_c64.c:20123:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_c64.c:29412:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:29413:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:30650:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:30651:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:30347:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_c64.c:44822:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:44823:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:45893:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:45894:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:51787:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_c64.c:51751:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_c64.c:51787:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_c64.c:45646:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_c64.c:36939:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:36940:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:38070:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:38071:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_c64.c:37755:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_cortexm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_cortexm.c:19469:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:19470:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:20146:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:20147:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:44742:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:44743:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:45307:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:45308:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:51998:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_cortexm.c:51962:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_cortexm.c:51998:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_cortexm.c:93:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_cortexm.c:4784:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_cortexm.c:4825:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_cortexm.c:5896:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_cortexm.c:10398:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_cortexm.c:10439:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_cortexm.c:22740:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_cortexm.c:11706:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_cortexm.c:14189:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_cortexm.c:14230:17: style: The scope of the variable 'i' can be reduced. [variableScope]
            int i;
                ^
wolfcrypt/src/sp_cortexm.c:26727:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:26728:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:27428:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:27429:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:30066:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_cortexm.c:34573:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:34574:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:35308:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:35309:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_cortexm.c:38545:11: style: The scope of the variable 'd' can be reduced. [variableScope]
    byte* d;
          ^
wolfcrypt/src/sp_cortexm.c:20881:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_cortexm.c:20882:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_cortexm.c:45912:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_cortexm.c:45913:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_cortexm.c:28195:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_cortexm.c:28196:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_cortexm.c:36115:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_cortexm.c:36116:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_dsp32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_dsp32.c:1740:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
wolfcrypt/src/sp_dsp32.c:1836:15: style: The scope of the variable 'x' can be reduced. [variableScope]
    sp_digit* x;
              ^
wolfcrypt/src/sp_dsp32.c:1837:15: style: The scope of the variable 'y' can be reduced. [variableScope]
    sp_digit* y;
              ^
wolfcrypt/src/sp_dsp32.c:1838:15: style: The scope of the variable 'z' can be reduced. [variableScope]
    sp_digit* z;
              ^
wolfcrypt/src/sp_dsp32.c:1839:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
wolfcrypt/src/sp_dsp32.c:1931:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
wolfcrypt/src/sp_dsp32.c:1932:9: style: The scope of the variable 'c' can be reduced. [variableScope]
    int c, y;
        ^
wolfcrypt/src/sp_dsp32.c:1932:12: style: The scope of the variable 'y' can be reduced. [variableScope]
    int c, y;
           ^
wolfcrypt/src/sp_dsp32.c:4529:11: style: Condition 'd!=NULL' is always false [knownConditionTrueFalse]
    if (d != NULL)
          ^
wolfcrypt/src/sp_dsp32.c:4439:19: note: Assignment 'd=NULL', assigned value is 0
    sp_digit* d = NULL;
                  ^
wolfcrypt/src/sp_dsp32.c:4529:11: note: Condition 'd!=NULL' is always false
    if (d != NULL)
          ^
wolfcrypt/src/sp_dsp32.c:4109:23: style: Local variable 'dv' shadows outer argument [shadowArgument]
    sp_digit d, r, t, dv;
                      ^
wolfcrypt/src/sp_dsp32.c:4107:14: note: Shadowed declaration
    sp_digit dv)
             ^
wolfcrypt/src/sp_dsp32.c:4109:23: note: Shadow variable
    sp_digit d, r, t, dv;
                      ^
wolfcrypt/src/sp_dsp32.c:4124:7: style: Variable 'd' is assigned a value that is never used. [unreadVariable]
    d -= t * dv;
      ^
wolfcrypt/src/sp_int.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 197 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_int.c:12083:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_int.c:12075:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_int.c:12083:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_int.c:13719:25: style: The if condition is the same as the previous if condition [duplicateCondition]
                if (err == MP_OKAY) {
                        ^
wolfcrypt/src/sp_int.c:13692:25: note: First condition
                if (err == MP_OKAY) {
                        ^
wolfcrypt/src/sp_int.c:13719:25: note: Second condition
                if (err == MP_OKAY) {
                        ^
wolfcrypt/src/sp_int.c:17855:17: style: The if condition is the same as the previous if condition [duplicateCondition]
        if (err == MP_OKAY) {
                ^
wolfcrypt/src/sp_int.c:17852:17: note: First condition
        if (err == MP_OKAY) {
                ^
wolfcrypt/src/sp_int.c:17855:17: note: Second condition
        if (err == MP_OKAY) {
                ^
wolfcrypt/src/sp_int.c:13566:13: style: The scope of the variable 'y' can be reduced. [variableScope]
        int y = 0;
            ^
wolfcrypt/src/sp_int.c:13567:13: style: The scope of the variable 'c' can be reduced. [variableScope]
        int c = 0;
            ^
wolfcrypt/src/sp_int.c:4870:31: style: Checking if unsigned expression 'size' is less than zero. [unsignedLessThanZero]
    if ((a == NULL) || ((size <= 0) || (size > SP_INT_DIGITS))) {
                              ^
wolfcrypt/src/sp_int.c:13488:11: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    int i = 0;
          ^
wolfcrypt/src/sp_int.c:13567:15: style: Variable 'c' is assigned a value that is never used. [unreadVariable]
        int c = 0;
              ^
wolfcrypt/src/sp_int.c:13438:41: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
    SAVE_VECTOR_REGISTERS(err = _svr_ret;);
                                        ^
wolfcrypt/src/sp_x86_64.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 159 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/sp_x86_64.c:8983:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:8984:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:10701:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:10702:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:94239:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:94240:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:95959:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:95960:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:24135:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:24130:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:24135:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:102263:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:102227:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:102263:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:9402:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_x86_64.c:12076:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_x86_64.c:94671:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_x86_64.c:2004:47: error: Uninitialized variable: ah [uninitvar]
                    sp_2048_mont_mul_32(r, r, ah, m, mp);
                                              ^
wolfcrypt/src/sp_x86_64.c:2330:50: error: Uninitialized variable: p [uninitvar]
            c += sp_2048_cond_add_16(tmpa, tmpa, p, c);
                                                 ^
wolfcrypt/src/sp_x86_64.c:4902:47: error: Uninitialized variable: ah [uninitvar]
                    sp_3072_mont_mul_48(r, r, ah, m, mp);
                                              ^
wolfcrypt/src/sp_x86_64.c:5228:50: error: Uninitialized variable: p [uninitvar]
            c += sp_3072_cond_add_24(tmpa, tmpa, p, c);
                                                 ^
wolfcrypt/src/sp_x86_64.c:7026:47: error: Uninitialized variable: ah [uninitvar]
                    sp_4096_mont_mul_64(r, r, ah, m, mp);
                                              ^
wolfcrypt/src/sp_x86_64.c:7352:50: error: Uninitialized variable: p [uninitvar]
            c += sp_4096_cond_add_32(tmpa, tmpa, p, c);
                                                 ^
wolfcrypt/src/sp_x86_64.c:28118:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:28119:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:29887:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:29888:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:49136:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:49131:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:49136:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:28542:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_x86_64.c:31263:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_x86_64.c:52997:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:52998:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:54743:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:54744:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:90178:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:90173:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:90178:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:53421:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_x86_64.c:56245:13: style: The scope of the variable 'y' can be reduced. [variableScope]
    uint8_t y;
            ^
wolfcrypt/src/sp_x86_64.c:10104:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:10105:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:11188:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:11189:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:95352:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:95353:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:96416:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:96417:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:24269:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:24264:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:24269:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:102512:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:102476:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:102512:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:11003:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_x86_64.c:11004:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_x86_64.c:96230:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_x86_64.c:96231:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_x86_64.c:29284:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:29285:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:30375:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:30376:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:49270:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:49265:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:49270:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:30189:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_x86_64.c:30190:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/sp_x86_64.c:54140:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:54141:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:55231:34: style:inconclusive: Boolean expression '!p->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskp = 0 - (q->infinity & (!p->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:55232:34: style:inconclusive: Boolean expression '!q->infinity' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
        maskq = 0 - (p->infinity & (!q->infinity));
                                 ^
wolfcrypt/src/sp_x86_64.c:90312:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:90307:13: note: First condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:90312:13: note: Second condition
    if (err == MP_OKAY) {
            ^
wolfcrypt/src/sp_x86_64.c:55045:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
wolfcrypt/src/sp_x86_64.c:55046:14: style: The scope of the variable 'least' can be reduced. [variableScope]
    uint32_t least;
             ^
wolfcrypt/src/srp.c:291:0: information: Skipping configuration 'WOLFCRYPT_HAVE_SRP;WOLFSSL_HEAP_TEST' since the value of 'WOLFSSL_HEAP_TEST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    srp->heap = (void*)WOLFSSL_HEAP_TEST;
^
wolfcrypt/src/tfm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 106 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/tfm.c:3640:15: style: Condition 'cy' is always false [knownConditionTrueFalse]
       while (cy) { /* //NOLINT(bugprone-infinite-loop) */ /* PROPCARRY is an asm macro */
              ^
wolfcrypt/src/tfm.c:3622:22: note: Assignment 'cy=0', assigned value is 0
       fp_digit cy = 0;
                     ^
wolfcrypt/src/tfm.c:3640:15: note: Condition 'cy' is always false
       while (cy) { /* //NOLINT(bugprone-infinite-loop) */ /* PROPCARRY is an asm macro */
              ^
wolfcrypt/src/tfm.c:3648:8: style: Variable 'tmpm' is reassigned a value before the old one has been used. [redundantAssignment]
  tmpm = a->dp;
       ^
wolfcrypt/src/tfm.c:3626:13: note: tmpm is assigned
       tmpm = m->dp;
            ^
wolfcrypt/src/tfm.c:3648:8: note: tmpm is overwritten
  tmpm = a->dp;
       ^
wolfcrypt/src/tfm.c:362:11: style: The scope of the variable 'x' can be reduced. [variableScope]
  int     x, oldused;
          ^
wolfcrypt/src/tfm.c:454:8: style: The scope of the variable 'x' can be reduced. [variableScope]
   int x;
       ^
wolfcrypt/src/tfm.c:856:11: style: The scope of the variable 'x' can be reduced. [variableScope]
  int     x, oldused;
          ^
wolfcrypt/src/tfm.c:2765:18: error: Shifting by a negative value is undefined behaviour [shiftNegative]
    bitbuf |= (y << (WINSIZE - ++bitcpy));
                 ^
wolfcrypt/src/tfm.c:543:14: style: Variable 'c0' is not assigned a value. [unassignedVariable]
   fp_digit  c0, c1, c2, *tmpx, *tmpy;
             ^
wolfcrypt/src/tfm.c:543:18: style: Variable 'c1' is not assigned a value. [unassignedVariable]
   fp_digit  c0, c1, c2, *tmpx, *tmpy;
                 ^
wolfcrypt/src/tfm.c:543:22: style: Variable 'c2' is not assigned a value. [unassignedVariable]
   fp_digit  c0, c1, c2, *tmpx, *tmpy;
                     ^
wolfcrypt/src/tfm.c:3212:13: style: Variable 'c0' is not assigned a value. [unassignedVariable]
  fp_digit  c0, c1, c2;
            ^
wolfcrypt/src/tfm.c:3212:17: style: Variable 'c1' is not assigned a value. [unassignedVariable]
  fp_digit  c0, c1, c2;
                ^
wolfcrypt/src/tfm.c:3212:21: style: Variable 'c2' is not assigned a value. [unassignedVariable]
  fp_digit  c0, c1, c2;
                    ^
wolfcrypt/src/tfm.c:3575:28: style: Variable 'mu' is assigned a value that is never used. [unreadVariable]
   fp_digit *_c, *tmpm, mu = 0;
                           ^
wolfcrypt/src/wc_encrypt.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/wc_pkcs11.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/wc_pkcs11.c:2284:21: warning:inconclusive: Either the condition 'point==NULL' is redundant or there is possible null pointer dereference: point. [nullPointerRedundantCheck]
    if (ret == 0 && point[i] >= ASN_LONG_LENGTH) {
                    ^
wolfcrypt/src/wc_pkcs11.c:2260:19: note: Assuming that condition 'point==NULL' is not redundant
        if (point == NULL)
                  ^
wolfcrypt/src/wc_pkcs11.c:2284:21: note: Null pointer dereference
    if (ret == 0 && point[i] >= ASN_LONG_LENGTH) {
                    ^
wolfcrypt/src/wc_pkcs11.c:2290:21: warning:inconclusive: Either the condition 'point==NULL' is redundant or there is possible null pointer dereference: point. [nullPointerRedundantCheck]
    if (ret == 0 && point[i++] != key->dp->size * 2 + 1)
                    ^
wolfcrypt/src/wc_pkcs11.c:2260:19: note: Assuming that condition 'point==NULL' is not redundant
        if (point == NULL)
                  ^
wolfcrypt/src/wc_pkcs11.c:2290:21: note: Null pointer dereference
    if (ret == 0 && point[i++] != key->dp->size * 2 + 1)
                    ^
wolfcrypt/src/wc_pkcs11.c:2295:45: warning:inconclusive: Either the condition 'point==NULL' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
        ret = wc_ecc_import_point_der(point + i, pointSz - i, curveIdx,
                                            ^
wolfcrypt/src/wc_pkcs11.c:2260:19: note: Assuming that condition 'point==NULL' is not redundant
        if (point == NULL)
                  ^
wolfcrypt/src/wc_pkcs11.c:2295:45: note: Null pointer addition
        ret = wc_ecc_import_point_der(point + i, pointSz - i, curveIdx,
                                            ^
wolfcrypt/src/wc_pkcs11.c:2972:14: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if ((ret == 0) && (ret = wc_InitRsaKey(pub, NULL)) == 0) {
             ^
wolfcrypt/src/wc_pkcs11.c:2957:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/wc_pkcs11.c:2972:14: note: The comparison 'ret == 0' is always true.
    if ((ret == 0) && (ret = wc_InitRsaKey(pub, NULL)) == 0) {
             ^
wolfcrypt/src/wc_pkcs11.c:3120:14: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if ((ret == 0) && (ret = wc_ecc_init(pub)) == 0) {
             ^
wolfcrypt/src/wc_pkcs11.c:3105:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
wolfcrypt/src/wc_pkcs11.c:3120:14: note: The comparison 'ret == 0' is always true.
    if ((ret == 0) && (ret = wc_ecc_init(pub)) == 0) {
             ^
wolfcrypt/src/wc_pkcs11.c:537:19: style: The scope of the variable 'slotId' can be reduced. [variableScope]
    int           slotId = -1;
                  ^
wolfcrypt/src/wc_pkcs11.c:904:22: style: The scope of the variable 'keyTmplCnt' can be reduced. [variableScope]
    int              keyTmplCnt = 5;
                     ^
wolfcrypt/src/wc_pkcs11.c:2240:20: style: The scope of the variable 'curveIdx' can be reduced. [variableScope]
    int            curveIdx;
                   ^
wolfcrypt/src/wc_pkcs11.c:2332:23: style: The scope of the variable 'pubTmplCnt' can be reduced. [variableScope]
    int               pubTmplCnt = 1;
                      ^
wolfcrypt/src/wc_pkcs11.c:2348:23: style: The scope of the variable 'privTmplCnt' can be reduced. [variableScope]
    int               privTmplCnt = 1;
                      ^
wolfcrypt/src/wc_pkcs11.c:537:26: style: Variable 'slotId' is assigned a value that is never used. [unreadVariable]
    int           slotId = -1;
                         ^
wolfcrypt/src/wc_pkcs11.c:1405:31: style: Variable 'ret2' is assigned a value that is never used. [unreadVariable]
                int      ret2 = NOT_COMPILED_IN;
                              ^
wolfcrypt/src/wc_pkcs11.c:2079:23: style: The scope of the variable 'privTmplCnt' can be reduced. [variableScope]
    int               privTmplCnt = 2;
                      ^
wolfcrypt/src/wc_pkcs11.c:2080:23: style: The scope of the variable 'i' can be reduced. [variableScope]
    int               i;
                      ^
wolfcrypt/src/wc_port.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 114 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/src/wc_port.c:2933:0: information: Skipping configuration 'CURRENT_UNIX_TIMESTAMP;WOLFSSL_DEOS;WOLFSSL_DEOS_RTEMS;WOLFSSL_WICED_PSEUDO_UNIX_EPOCH_TIME' since the value of 'CURRENT_UNIX_TIMESTAMP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        return (time_t) (*systemTickPtr/systemTickTimeInHz) + CURRENT_UNIX_TIMESTAMP;
^
wolfcrypt/src/wolfmath.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/test/test.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 1095 configurations. Use --force to check all configurations. [toomanyconfigs]

^
wolfcrypt/test/test.c:972:9: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
        TEST_PASS("error    test passed!\n");
        ^
wolfcrypt/user-crypto/src/rsa.c:2658:15: style: The scope of the variable 'j' can be reduced. [variableScope]
    int    i, j, outLen, ret = 0, lbit;
              ^
zephyr/samples/wolfssl_tls_sock/src/tls_sock.c:119:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_sock/src/tls_sock.c:114:13: note: First condition
    if (ret == 0)
            ^
zephyr/samples/wolfssl_tls_sock/src/tls_sock.c:119:13: note: Second condition
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_sock/src/tls_sock.c:196:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_sock/src/tls_sock.c:192:13: note: First condition
    if (ret == 0)
            ^
zephyr/samples/wolfssl_tls_sock/src/tls_sock.c:196:13: note: Second condition
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:249:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:234:13: note: First condition
    if (ret == 0)
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:249:13: note: Second condition
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:413:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:399:13: note: First condition
    if (ret == 0)
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:413:13: note: Second condition
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:348:13: style: The comparison 'ret == 0' is always true. [knownConditionTrueFalse]
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:331:15: note: 'ret' is assigned value '0' here.
    int ret = 0;
              ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:348:13: note: The comparison 'ret == 0' is always true.
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:240:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:234:13: note: First condition
    if (ret == 0)
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:240:13: note: Second condition
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:348:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:342:13: note: First condition
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:348:13: note: Second condition
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:404:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (ret == 0) {
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:399:13: note: First condition
    if (ret == 0)
            ^
zephyr/samples/wolfssl_tls_thread/src/tls_threaded.c:404:13: note: Second condition
    if (ret == 0) {
            ^
wolfcrypt/src/fe_448.c:612:5: error: Array index out of bounds; buffer 'b' is accessed at offset 0. [ctuArrayIndex]
    b[ 0] = (in0  >>  0);
    ^
wolfcrypt/src/fe_448.c:1138:19: note: Calling function fe448_to_bytes, 1st argument is uninitialized
    fe448_to_bytes(b, a);
                  ^
wolfcrypt/src/fe_448.c:612:5: note: Using argument b
    b[ 0] = (in0  >>  0);
    ^
wolfcrypt/src/fe_448.c:1437:5: error: Array index out of bounds; buffer 'b' is accessed at offset 0. [ctuArrayIndex]
    b[ 0] = (in0  >>  0);
    ^
wolfcrypt/src/fe_448.c:2229:19: note: Calling function fe448_to_bytes, 1st argument is uninitialized
    fe448_to_bytes(b, a);
                  ^
wolfcrypt/src/fe_448.c:1437:5: note: Using argument b
    b[ 0] = (in0  >>  0);
    ^
wolfcrypt/src/ge_448.c:10262:15: warning: Null pointer dereference: r [ctunullpointer]
    fe448_sqr(r->X, p->X);        /* r->X = C = X1^2     */
              ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant

               ^
wolfcrypt/src/ge_448.c:10717:18: note: Calling function ge448_dbl, 1st argument is null
        ge448_dbl(p2, p);
                 ^
wolfcrypt/src/ge_448.c:10262:15: note: Dereferencing argument r that is null
    fe448_sqr(r->X, p->X);        /* r->X = C = X1^2     */
              ^
wolfcrypt/src/ge_448.c:10376:19: warning: Null pointer dereference: p [ctunullpointer]
    fe448_mul(t1, p->X, q->X);      /* t1 = C = X1*X2             */
                  ^
wolfcrypt/src/ge_448.c:10704:16: note: Assuming that condition 'p2==NULL' is not redundant

               ^
wolfcrypt/src/ge_448.c:10718:18: note: Calling function ge448_add, 2nd argument is null
        ge448_add(&pi[1], p2, &pi[0]);
                 ^
wolfcrypt/src/ge_448.c:10376:19: note: Dereferencing argument p that is null
    fe448_mul(t1, p->X, q->X);      /* t1 = C = X1*X2             */
                  ^
wolfcrypt/src/ge_448.c:10376:25: warning: Null pointer dereference: q [ctunullpointer]
    fe448_mul(t1, p->X, q->X);      /* t1 = C = X1*X2             */
                        ^
wolfcrypt/src/ge_448.c:10698:16: note: Assuming that condition 'pi==NULL' is not redundant

               ^
wolfcrypt/src/ge_448.c:10718:18: note: Calling function ge448_add, 3rd argument is null
        ge448_add(&pi[1], p2, &pi[0]);
                 ^
wolfcrypt/src/ge_448.c:10376:25: note: Dereferencing argument q that is null
    fe448_mul(t1, p->X, q->X);      /* t1 = C = X1*X2             */
                        ^
wolfcrypt/src/coding.c:501:0: style: The function 'Base16_Decode' is never used. [unusedFunction]

^
wolfcrypt/src/coding.c:557:0: style: The function 'Base16_Encode' is never used. [unusedFunction]

^
wolfcrypt/src/coding.c:475:0: style: The function 'Base64_EncodeEsc' is never used. [unusedFunction]

^
wolfcrypt/src/coding.c:480:0: style: The function 'Base64_Encode_NoNl' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha3-asm_c.c:64:0: style: The function 'BlockSha3' is never used. [unusedFunction]

^
src/tls13.c:2285:0: style: The function 'BuildTls13Nonce' is never used. [unusedFunction]

^
mcapi/crypto.c:438:0: style: The function 'CRYPT_AES_IvSet' is never used. [unusedFunction]

^
mcapi/crypto.c:678:0: style: The function 'CRYPT_ECC_PrivateImport' is never used. [unusedFunction]

^
mcapi/crypto.c:791:0: style: The function 'CRYPT_ERROR_StringGet' is never used. [unusedFunction]

^
mcapi/crypto.c:62:0: style: The function 'CRYPT_MD5_DataSizeSet' is never used. [unusedFunction]

^
mcapi/crypto.c:540:0: style: The function 'CRYPT_RSA_PublicKeyDecode' is never used. [unusedFunction]

^
mcapi/crypto.c:160:0: style: The function 'CRYPT_SHA256_DataSizeSet' is never used. [unusedFunction]

^
mcapi/crypto.c:111:0: style: The function 'CRYPT_SHA_DataSizeSet' is never used. [unusedFunction]

^
mcapi/crypto.c:389:0: style: The function 'CRYPT_TDES_IvSet' is never used. [unusedFunction]

^
src/ssl.c:17271:0: style: The function 'CertSetupCbWrapper' is never used. [unusedFunction]

^
src/crl.c:428:0: style: The function 'CheckCertCRL' is never used. [unusedFunction]

^
src/ocsp.c:175:0: style: The function 'CheckCertOCSP' is never used. [unusedFunction]

^
src/internal.c:11595:0: style: The function 'CheckIPAddr' is never used. [unusedFunction]

^
src/tls13.c:5851:0: style: The function 'CheckPreSharedKeys' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:19035:0: style: The function 'CheckRunTimeFastMath' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:19026:0: style: The function 'CheckRunTimeSettings' is never used. [unusedFunction]

^
IDE/MDK-ARM/LPC43xx/time-LCP43xx.c:91:0: style: The function 'Cyassl_MDK_gmtime' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:263:0: style: The function 'DCPAesCbcDecrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:248:0: style: The function 'DCPAesCbcEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:291:0: style: The function 'DCPAesEcbDecrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:278:0: style: The function 'DCPAesEcbEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:208:0: style: The function 'DCPAesFree' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:216:0: style: The function 'DCPAesSetKey' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:333:0: style: The function 'DCPSha256Free' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:444:0: style: The function 'DCPShaFree' is never used. [unusedFunction]

^
src/tls13.c:2788:0: style: The function 'DecryptTls13' is never used. [unusedFunction]

^
src/tls13.c:11357:0: style: The function 'DoTls13HandShakeMsg' is never used. [unusedFunction]

^
src/dtls13.c:1728:0: style: The function 'Dtls13AddHeaders' is never used. [unusedFunction]

^
src/dtls13.c:2713:0: style: The function 'Dtls13CheckAEADFailLimit' is never used. [unusedFunction]

^
src/dtls13.c:1820:0: style: The function 'Dtls13DeriveSnKeys' is never used. [unusedFunction]

^
src/dtls13.c:1181:0: style: The function 'Dtls13EncryptRecordNumber' is never used. [unusedFunction]

^
src/dtls13.c:1704:0: style: The function 'Dtls13FragmentsContinue' is never used. [unusedFunction]

^
src/dtls13.c:1236:0: style: The function 'Dtls13GetHeadersLength' is never used. [unusedFunction]

^
src/dtls13.c:1755:0: style: The function 'Dtls13HandshakeSend' is never used. [unusedFunction]

^
src/dtls13.c:448:0: style: The function 'Dtls13HashClientHello' is never used. [unusedFunction]

^
src/dtls13.c:1112:0: style: The function 'Dtls13RlAddCiphertextHeader' is never used. [unusedFunction]

^
src/dtls13.c:2666:0: style: The function 'Dtls13RtxProcessingCertificate' is never used. [unusedFunction]

^
src/dtls13.c:2476:0: style: The function 'Dtls13RtxTimeout' is never used. [unusedFunction]

^
src/dtls13.c:2180:0: style: The function 'Dtls13SetRecordNumberKeys' is never used. [unusedFunction]

^
src/dtls.c:87:0: style: The function 'DtlsIgnoreError' is never used. [unusedFunction]

^
src/dtls.c:53:0: style: The function 'DtlsResetState' is never used. [unusedFunction]

^
src/dtls.c:104:0: style: The function 'DtlsSetSeqNumForReply' is never used. [unusedFunction]

^
src/ssl.c:23921:0: style: The function 'ERR_load_SSL_strings' is never used. [unusedFunction]

^
src/wolfio.c:1927:0: style: The function 'EmbedCrlLookup' is never used. [unusedFunction]

^
src/wolfio.c:692:0: style: The function 'EmbedGenerateCookie' is never used. [unusedFunction]

^
src/wolfio.c:415:0: style: The function 'EmbedReceiveFrom' is never used. [unusedFunction]

^
src/wolfio.c:619:0: style: The function 'EmbedSendTo' is never used. [unusedFunction]

^
src/ocsp.c:106:0: style: The function 'FreeOCSP' is never used. [unusedFunction]

^
src/internal.c:4246:0: style: The function 'FreeX509' is never used. [unusedFunction]

^
src/internal.c:10282:0: style: The function 'GetDtls13RecordHeader' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:3072:0: style: The function 'GetShortInt' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:2756:0: style: The function 'GetSigName' is never used. [unusedFunction]

^
IDE/MDK5-ARM/Projects/CryptBenchmark/main.c:73:0: style: The function 'HAL_GetTick' is never used. [unusedFunction]

^
IDE/GCC-ARM/Source/armtarget.c:94:0: style: The function 'HardFault_HandlerC' is never used. [unusedFunction]

^
src/internal.c:6579:0: style: The function 'InitHandshakeHashesAndCopy' is never used. [unusedFunction]

^
src/ocsp.c:46:0: style: The function 'InitOCSP' is never used. [unusedFunction]

^
src/internal.c:4222:0: style: The function 'InitX509' is never used. [unusedFunction]

^
wolfcrypt/src/port/intel/quickassist_sync.c:715:0: style: The function 'IntelQaGetCyInstanceCount' is never used. [unusedFunction]

^
wolfcrypt/src/port/intel/quickassist_sync.c:720:0: style: The function 'IntelQaHandleCpaStatus' is never used. [unusedFunction]

^
wolfcrypt/src/port/intel/quickassist_sync.c:582:0: style: The function 'IntelQaNumInstances' is never used. [unusedFunction]

^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:61:0: style: The function 'KcapiEcc_Free' is never used. [unusedFunction]

^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:163:0: style: The function 'KcapiEcc_MakeKey' is never used. [unusedFunction]

^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:209:0: style: The function 'KcapiEcc_SharedSecret' is never used. [unusedFunction]

^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:330:0: style: The function 'KcapiEcc_Sign' is never used. [unusedFunction]

^
wolfcrypt/src/port/kcapi/kcapi_ecc.c:437:0: style: The function 'KcapiEcc_Verify' is never used. [unusedFunction]

^
wolfcrypt/src/port/maxim/maxq10xx.c:299:0: style: The function 'LoadDefaultImportKey' is never used. [unusedFunction]

^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:326:0: style: The function 'Octeon_AesCbc_Decrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:220:0: style: The function 'Octeon_AesCbc_Encrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:741:0: style: The function 'Octeon_AesGcm_Decrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:714:0: style: The function 'Octeon_AesGcm_Encrypt' is never used. [unusedFunction]

^
tests/quic.c:1623:0: style: The function 'QuicTest' is never used. [unusedFunction]

^
src/quic.c:230:0: style: The function 'QuicTransportParam_dup' is never used. [unusedFunction]

^
src/quic.c:246:0: style: The function 'QuicTransportParam_free' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RA6M3/client-wolfssl/src/wolfssl_thread_entry.c:39:0: style: The function 'R_BSP_WarmStart' is never used. [unusedFunction]

^
mplabx/benchmark_main.c:49:0: style: The function 'ReadCoreTimer' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:54:0: style: The function 'Renesas_cmn_Cleanup' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:104:0: style: The function 'Renesas_cmn_EccSignCb' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:634:0: style: The function 'Renesas_cmn_EccVerify' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:981:0: style: The function 'Renesas_cmn_RsaEnc' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:66:0: style: The function 'Renesas_cmn_RsaSignCb' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:85:0: style: The function 'Renesas_cmn_RsaSignCheckCb' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:582:0: style: The function 'Renesas_cmn_RsaVerify' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:1230:0: style: The function 'Renesas_cmn_SigPkCbEccVerify' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:1151:0: style: The function 'Renesas_cmn_SigPkCbRsaVerify' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:1085:0: style: The function 'Renesas_cmn_TLS_hmac' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:1047:0: style: The function 'Renesas_cmn_VerifyHmac' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:557:0: style: The function 'Renesas_cmn_checkCA' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:852:0: style: The function 'Renesas_cmn_generatePremasterSecret' is never used. [unusedFunction]

^
IDE/INTIME-RTOS/libwolfssl.c:6:0: style: The function 'RslMain' is never used. [unusedFunction]

^
src/ssl.c:23886:0: style: The function 'SSL_CTX_set_tmp_dh_callback' is never used. [unusedFunction]

^
wolfcrypt/src/port/st/stsafe.c:31:0: style: The function 'SSL_STSAFE_LoadDeviceCertificate' is never used. [unusedFunction]

^
wolfcrypt/src/port/st/stsafe.c:351:0: style: The function 'SSL_STSAFE_SetupPkCallbackCtx' is never used. [unusedFunction]

^
wolfcrypt/src/port/st/stsafe.c:341:0: style: The function 'SSL_STSAFE_SetupPkCallbacks' is never used. [unusedFunction]

^
wolfcrypt/user-crypto/src/rsa.c:289:0: style: The function 'SetRsaExternal' is never used. [unusedFunction]

^
wolfcrypt/user-crypto/src/rsa.c:351:0: style: The function 'SetRsaInternal' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:3130:0: style: The function 'SetShortInt' is never used. [unusedFunction]

^
wolfcrypt/src/port/kcapi/kcapi_hash.c:425:0: style: The function 'Sha384Final' is never used. [unusedFunction]

^
wolfcrypt/src/port/kcapi/kcapi_hash.c:416:0: style: The function 'Sha384Update' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512.c:820:0: style: The function 'Sha512_Family_GetHash' is never used. [unusedFunction]

^
wolfcrypt/src/port/Espressif/esp32_util.c:111:0: style: The function 'ShowExtendedSystemInfo_platform_espressif' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:806:0: style: The function 'SynchronousSendRequest' is never used. [unusedFunction]

^
IDE/IAR-MSP430/main.c:350:0: style: The function 'TIMER0_A0_ISR' is never used. [unusedFunction]

^
src/tls.c:1324:0: style: The function 'TLSX_Append' is never used. [unusedFunction]

^
src/tls.c:1391:0: style: The function 'TLSX_CheckUnsupportedExtension' is never used. [unusedFunction]

^
src/tls.c:1403:0: style: The function 'TLSX_HandleUnsupportedExtension' is never used. [unusedFunction]

^
src/tls.c:10416:0: style: The function 'TLSX_Remove' is never used. [unusedFunction]

^
src/tls.c:4893:0: style: The function 'TLSX_SupportedCurve_Copy' is never used. [unusedFunction]

^
src/tls.c:4547:0: style: The function 'TLSX_ValidateSupportedCurves' is never used. [unusedFunction]

^
tests/api.c:51026:0: style: The function 'TXT_DB_cmp' is never used. [unusedFunction]

^
tests/api.c:51021:0: style: The function 'TXT_DB_hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512-asm_c.c:1139:0: style: The function 'Transform_Sha512_Len_crypto' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512-asm_c.c:125:0: style: The function 'Transform_Sha512_Len_neon' is never used. [unusedFunction]

^
IDE/INTIME-RTOS/wolfExamples.c:510:0: style: The function 'UsecsToKticks' is never used. [unusedFunction]

^
IDE/M68K/benchmark/main.cpp:46:0: style: The function 'UserMain' is never used. [unusedFunction]

^
wolfcrypt/src/logging.c:426:0: style: The function 'WOLFSSL_IS_DEBUG_ON' is never used. [unusedFunction]

^
mplabx/benchmark_main.c:55:0: style: The function 'WriteCoreTimer' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:96:0: style: The function '__aeabi_read_tp' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:27:0: style: The function '__assert' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:128:0: style: The function '__debug_io_lock' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:132:0: style: The function '__debug_io_unlock' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:104:0: style: The function '__heap_lock' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:108:0: style: The function '__heap_unlock' is never used. [unusedFunction]

^
IDE/IAR-MSP430/main.c:167:0: style: The function '__low_level_init' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:112:0: style: The function '__printf_lock' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:116:0: style: The function '__printf_unlock' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:81:0: style: The function '__putchar' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:120:0: style: The function '__scanf_lock' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:124:0: style: The function '__scanf_unlock' is never used. [unusedFunction]

^
IDE/IAR-MSP430/main.c:122:0: style: The function '__write' is never used. [unusedFunction]

^
IDE/iotsafe/devices.c:255:0: style: The function '_close' is never used. [unusedFunction]

^
IDE/iotsafe/devices.c:260:0: style: The function '_fstat' is never used. [unusedFunction]

^
IDE/iotsafe/devices.c:275:0: style: The function '_isatty' is never used. [unusedFunction]

^
IDE/iotsafe/devices.c:265:0: style: The function '_lseek' is never used. [unusedFunction]

^
IDE/iotsafe/devices.c:270:0: style: The function '_read' is never used. [unusedFunction]

^
IDE/iotsafe/devices.c:232:0: style: The function '_sbrk' is never used. [unusedFunction]

^
IDE/iotsafe/devices.c:243:0: style: The function '_sbrk_r' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:121:0: style: The function '_sys_close' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:246:0: style: The function '_sys_command_string' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:210:0: style: The function '_sys_ensure' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:253:0: style: The function '_sys_exit' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:224:0: style: The function '_sys_flen' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:186:0: style: The function '_sys_istty' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:100:0: style: The function '_sys_open' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:158:0: style: The function '_sys_read' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:196:0: style: The function '_sys_seek' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:239:0: style: The function '_sys_tmpnam' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:135:0: style: The function '_sys_write' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/Retarget.c:70:0: style: The function '_ttywrch' is never used. [unusedFunction]

^
IDE/iotsafe/devices.c:218:0: style: The function '_write' is never used. [unusedFunction]

^
IDE/Renesas/cs+/Projects/common/wolfssl_dummy.c:57:0: style: The function 'abort' is never used. [unusedFunction]

^
linuxkm/linuxkm_memory.c:86:0: style: The function 'allocate_wolfcrypt_linuxkm_fpu_states' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/DK-S7G2/benchmark-template/src/app_entry.c:268:0: style: The function 'app_entry' is never used. [unusedFunction]

^
wolfcrypt/src/port/atmel/atmel.c:1091:0: style: The function 'atcatls_set_callback_ctx' is never used. [unusedFunction]

^
wolfcrypt/src/port/atmel/atmel.c:578:0: style: The function 'atmel_finish' is never used. [unusedFunction]

^
wolfcrypt/src/port/atmel/atmel.c:344:0: style: The function 'atmel_get_enc_key_default' is never used. [unusedFunction]

^
wolfcrypt/src/port/atmel/atmel.c:137:0: style: The function 'atmel_get_random_block' is never used. [unusedFunction]

^
wolfcrypt/src/port/atmel/atmel.c:488:0: style: The function 'atmel_init' is never used. [unusedFunction]

^
IDE/MSVS-2019-AZSPHERE/client/client.c:49:0: style: The function 'azsphere_client_app' is never used. [unusedFunction]

^
wolfcrypt/benchmark/benchmark.c:1684:0: style: The function 'bench_stats_print' is never used. [unusedFunction]

^
wolfcrypt/benchmark/benchmark.c:9233:0: style: The function 'benchmark_configure' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_init.c:818:0: style: The function 'caamReadPartition' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_init.c:795:0: style: The function 'caamWriteToPartition' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/cryptoCell.c:103:0: style: The function 'cc310_Free' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/cryptoCell.c:75:0: style: The function 'cc310_Init' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/cryptoCell.c:187:0: style: The function 'cc310_hashModeECC' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/cryptoCell.c:149:0: style: The function 'cc310_hashModeRSA' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/cryptoCell.c:126:0: style: The function 'cc310_mapCurve' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/cryptoCell.c:117:0: style: The function 'cc310_random_generate' is never used. [unusedFunction]

^
IDE/STARCORE/starcore_test.c:140:0: style: The function 'check_ret' is never used. [unusedFunction]

^
wolfcrypt/src/cpuid.c:132:0: style: The function 'cpuid_clear_flag' is never used. [unusedFunction]

^
wolfcrypt/src/cpuid.c:122:0: style: The function 'cpuid_select_flags' is never used. [unusedFunction]

^
wolfcrypt/src/cpuid.c:127:0: style: The function 'cpuid_set_flag' is never used. [unusedFunction]

^
wolfcrypt/src/fe_low_mem.c:144:0: style: The function 'curve25519' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:57:0: style: The function 'custom_rand_generate_block' is never used. [unusedFunction]

^
IDE/IAR-MSP430/main.c:174:0: style: The function 'disable_watchdog' is never used. [unusedFunction]

^
wolfcrypt/src/wc_port.c:2063:0: style: The function 'ebsnet_fseek' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/ksdk_port.c:1109:0: style: The function 'ecc_map_ex' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:307:0: style: The function 'eccsi_kpak_to_mont' is never used. [unusedFunction]

^
wolfcrypt/src/port/Espressif/esp32_util.c:42:0: style: The function 'esp_CryptHwMutexInit' is never used. [unusedFunction]

^
wolfcrypt/src/port/Espressif/esp32_util.c:54:0: style: The function 'esp_CryptHwMutexLock' is never used. [unusedFunction]

^
wolfcrypt/src/port/Espressif/esp32_util.c:71:0: style: The function 'esp_CryptHwMutexUnLock' is never used. [unusedFunction]

^
wolfcrypt/src/port/Espressif/esp32_util.c:329:0: style: The function 'esp_ShowExtendedSystemInfo' is never used. [unusedFunction]

^
IDE/MDK5-ARM/Projects/wolfSSL-Full/shell.c:533:0: style: The function 'exit_command' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:52:0: style: The function 'ext_kyber_enabled' is never used. [unusedFunction]

^
wolfcrypt/src/fe_low_mem.c:264:0: style: The function 'fprime_sub' is never used. [unusedFunction]

^
linuxkm/linuxkm_memory.c:119:0: style: The function 'free_wolfcrypt_linuxkm_fpu_states' is never used. [unusedFunction]

^
wolfcrypt/src/wc_port.c:2942:0: style: The function 'fsl_time' is never used. [unusedFunction]

^
wolfcrypt/src/wolfmath.c:94:0: style: The function 'get_digit_count' is never used. [unusedFunction]

^
wolfcrypt/src/wolfmath.c:165:0: style: The function 'get_rand_digit' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:61:0: style: The function 'inet_ntoa' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/common/wolfssl_dummy.c:44:0: style: The function 'isascii' is never used. [unusedFunction]

^
IDE/ROWLEY-CROSSWORKS-ARM/retarget.c:32:0: style: The function 'ksdk_time' is never used. [unusedFunction]

^
linuxkm/linuxkm_memory.c:26:0: style: The function 'lkm_realloc' is never used. [unusedFunction]

^
wolfcrypt/src/fe_low_mem.c:548:0: style: The function 'lm_invert' is never used. [unusedFunction]

^
wolfcrypt/src/fe_low_mem.c:465:0: style: The function 'lm_mul' is never used. [unusedFunction]

^
wolfcrypt/src/port/maxim/maxq10xx.c:3364:0: style: The function 'maxq10xx_SetupPkCallbacks' is never used. [unusedFunction]

^
wolfcrypt/src/port/maxim/maxq10xx.c:1970:0: style: The function 'maxq10xx_port_init' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4468:0: style: The function 'mp_2expt' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5926:0: style: The function 'mp_abs' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4358:0: style: The function 'mp_addmod_ct' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4425:0: style: The function 'mp_cmp_d' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5701:0: style: The function 'mp_cnt_lsb' is never used. [unusedFunction]

^
wolfcrypt/src/wolfmath.c:119:0: style: The function 'mp_cond_copy' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5258:0: style: The function 'mp_cond_swap_ct' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4534:0: style: The function 'mp_copy' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4474:0: style: The function 'mp_div' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5687:0: style: The function 'mp_div_2' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5694:0: style: The function 'mp_div_2_mod_ct' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4479:0: style: The function 'mp_div_2d' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5297:0: style: The function 'mp_exch' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4403:0: style: The function 'mp_exptmod_ex' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/ksdk_port.c:634:0: style: The function 'mp_exptmod_nct' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5269:0: style: The function 'mp_gcd' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/ksdk_port.c:316:0: style: The function 'mp_invmod' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4384:0: style: The function 'mp_invmod_mont_ct' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4575:0: style: The function 'mp_is_bit_set' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5275:0: style: The function 'mp_lcm' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5933:0: style: The function 'mp_lshd' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4851:0: style: The function 'mp_mod_d' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5675:0: style: The function 'mp_montgomery_reduce_ex' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4463:0: style: The function 'mp_mul_2d' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4315:0: style: The function 'mp_mul_d' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/ksdk_port.c:715:0: style: The function 'mp_prime_is_prime' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5280:0: style: The function 'mp_rand_prime' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4560:0: style: The function 'mp_rshb' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4565:0: style: The function 'mp_rshd' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4580:0: style: The function 'mp_set_bit' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:5664:0: style: The function 'mp_sqr' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4626:0: style: The function 'mp_sqrmod' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4458:0: style: The function 'mp_sub_d' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4352:0: style: The function 'mp_submod_ct' is never used. [unusedFunction]

^
wolfcrypt/src/wc_port.c:2995:0: style: The function 'mqx_time' is never used. [unusedFunction]

^
IDE/IAR-MSP430/main.c:95:0: style: The function 'msp430_rnd' is never used. [unusedFunction]

^
IDE/IAR-MSP430/main.c:79:0: style: The function 'msp430_time' is never used. [unusedFunction]

^
IDE/GCC-ARM/Source/wolf_main.c:111:0: style: The function 'myMalloc' is never used. [unusedFunction]

^
IDE/GCC-ARM/Source/wolf_main.c:131:0: style: The function 'myRealloc' is never used. [unusedFunction]

^
IDE/GCC-ARM/Source/wolf_main.c:86:0: style: The function 'my_rng_gen_block' is never used. [unusedFunction]

^
IDE/NETOS/wolfssl_netos_custom.c:69:0: style: The function 'my_rng_generate_seed' is never used. [unusedFunction]

^
IDE/AURIX/wolf_main.c:59:0: style: The function 'my_time' is never used. [unusedFunction]

^
wolfcrypt/src/port/mynewt/mynewt_port.c:139:0: style: The function 'mynewt_fclose' is never used. [unusedFunction]

^
wolfcrypt/src/port/mynewt/mynewt_port.c:27:0: style: The function 'mynewt_fopen' is never used. [unusedFunction]

^
wolfcrypt/src/port/mynewt/mynewt_port.c:116:0: style: The function 'mynewt_fread' is never used. [unusedFunction]

^
wolfcrypt/src/port/mynewt/mynewt_port.c:72:0: style: The function 'mynewt_fseek' is never used. [unusedFunction]

^
wolfcrypt/src/port/mynewt/mynewt_port.c:103:0: style: The function 'mynewt_ftell' is never used. [unusedFunction]

^
wolfcrypt/src/port/mynewt/mynewt_port.c:128:0: style: The function 'mynewt_fwrite' is never used. [unusedFunction]

^
wolfcrypt/src/port/mynewt/mynewt_port.c:111:0: style: The function 'mynewt_rewind' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RA6M4/test/src/SEGGER_RTT/myprint.c:27:0: style: The function 'myprintf' is never used. [unusedFunction]

^
wolfcrypt/src/wc_port.c:3196:0: style: The function 'mystrnstr' is never used. [unusedFunction]

^
src/ssl.c:33909:0: style: The function 'nid2oid' is never used. [unusedFunction]

^
wolfcrypt/src/port/nrf51.c:65:0: style: The function 'nrf51_random_generate' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RA6M3/common/src/freertos_tcp_port.c:41:0: style: The function 'pcApplicationHostnameHook' is never used. [unusedFunction]

^
IDE/IAR-MSP430/main.c:84:0: style: The function 'print_secret' is never used. [unusedFunction]

^
wolfcrypt/src/port/cypress/psoc6_crypto.c:49:0: style: The function 'psoc6_crypto_port_init' is never used. [unusedFunction]

^
wolfcrypt/src/port/cypress/psoc6_crypto.c:195:0: style: The function 'psoc6_ecc_verify_hash_ex' is never used. [unusedFunction]

^
IDE/LPCXPRESSO/lib_wolfssl/lpc_18xx_port.c:88:0: style: The function 'rand_gen' is never used. [unusedFunction]

^
IDE/ECLIPSE/DEOS/deos_malloc.c:30:0: style: The function 'realloc_deos' is never used. [unusedFunction]

^
IDE/STARCORE/starcore_test.c:106:0: style: The function 'reset_path' is never used. [unusedFunction]

^
linuxkm/linuxkm_memory.c:255:0: style: The function 'restore_vector_registers_x86' is never used. [unusedFunction]

^
IDE/AURIX/wolf_main.c:108:0: style: The function 'run_wolf_tests' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_rx64_hw_util.c:93:0: style: The function 'rx64_hw_Close' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_rx64_hw_util.c:77:0: style: The function 'rx64_hw_Open' is never used. [unusedFunction]

^
wolfcrypt/src/sakke.c:284:0: style: The function 'sakke_load_base_point' is never used. [unusedFunction]

^
wolfcrypt/src/sakke.c:247:0: style: The function 'sakke_load_params' is never used. [unusedFunction]

^
wolfcrypt/src/sakke.c:370:0: style: The function 'sakke_mulmod_base' is never used. [unusedFunction]

^
wolfcrypt/src/sakke.c:393:0: style: The function 'sakke_mulmod_base_add' is never used. [unusedFunction]

^
wolfcrypt/src/sakke.c:464:0: style: The function 'sakke_mulmod_point' is never used. [unusedFunction]

^
linuxkm/linuxkm_memory.c:210:0: style: The function 'save_vector_registers_x86' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RA6M4/test/src/test_main.c:161:0: style: The function 'sce_test' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:3017:0: style: The function 'se050_curve25519_create_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:3250:0: style: The function 'se050_curve25519_free_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:3103:0: style: The function 'se050_curve25519_shared_secret' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2463:0: style: The function 'se050_ecc_create_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2316:0: style: The function 'se050_ecc_free_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2444:0: style: The function 'se050_ecc_get_key_id' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2555:0: style: The function 'se050_ecc_shared_secret' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:1972:0: style: The function 'se050_ecc_sign_hash_ex' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2365:0: style: The function 'se050_ecc_use_key_id' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2144:0: style: The function 'se050_ecc_verify_hash_ex' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2712:0: style: The function 'se050_ed25519_create_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2775:0: style: The function 'se050_ed25519_free_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2815:0: style: The function 'se050_ed25519_sign_msg' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:2912:0: style: The function 'se050_ed25519_verify_msg' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:193:0: style: The function 'se050_get_random_number' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:805:0: style: The function 'se050_rsa_create_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:777:0: style: The function 'se050_rsa_get_key_id' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:1641:0: style: The function 'se050_rsa_private_decrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:1482:0: style: The function 'se050_rsa_public_encrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:1135:0: style: The function 'se050_rsa_sign' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:674:0: style: The function 'se050_rsa_use_key_id' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:1294:0: style: The function 'se050_rsa_verify' is never used. [unusedFunction]

^
IDE/NETOS/wolfssl_netos_custom.c:94:0: style: The function 'setAppFipsCb' is never used. [unusedFunction]

^
wolfcrypt/src/asm.c:105:0: style: The function 'set_cpuid_flags' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_random.c:37:0: style: The function 'silabs_GenerateRand' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_ecc.c:178:0: style: The function 'silabs_ecc_import' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_ecc.c:218:0: style: The function 'silabs_ecc_import_private' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_ecc.c:280:0: style: The function 'silabs_ecc_import_private_raw' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_ecc.c:142:0: style: The function 'silabs_ecc_make_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_ecc.c:305:0: style: The function 'silabs_ecc_shared_secret' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_ecc.c:247:0: style: The function 'silabs_ecc_sig_to_rs' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_ecc.c:87:0: style: The function 'silabs_ecc_sign_hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_ecc.c:114:0: style: The function 'silabs_ecc_verify_hash' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/client/simple_tcp_client.c:83:0: style: The function 'simple_tcp_client' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/Simple/test/src/server/simple_tcp_server.c:62:0: style: The function 'simple_tcp_server' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm64.c:116444:0: style: The function 'sp_1024_iszero_16' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c64.c:44769:0: style: The function 'sp_1024_iszero_18' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:145155:0: style: The function 'sp_1024_iszero_32' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c32.c:45364:0: style: The function 'sp_1024_iszero_42' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:145055:0: style: The function 'sp_1024_sub_32' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm64.c:22060:0: style: The function 'sp_256_add_4' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm64.c:41111:0: style: The function 'sp_256_calc_vfy_point_4' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c64.c:27090:0: style: The function 'sp_256_calc_vfy_point_5' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:76799:0: style: The function 'sp_256_calc_vfy_point_8' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c32.c:26196:0: style: The function 'sp_256_calc_vfy_point_9' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm64.c:23065:0: style: The function 'sp_256_mont_reduce_order_4' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c64.c:21830:0: style: The function 'sp_256_mont_reduce_order_5' is never used. [unusedFunction]

^
wolfcrypt/src/sp_armthumb.c:98382:0: style: The function 'sp_256_mont_reduce_order_8' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c32.c:20839:0: style: The function 'sp_256_mont_reduce_order_9' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm64.c:21982:0: style: The function 'sp_256_sqr_4' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5687:0: style: The function 'sp_2expt' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:94655:0: style: The function 'sp_384_calc_vfy_point_12' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c32.c:34264:0: style: The function 'sp_384_calc_vfy_point_15' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm64.c:67118:0: style: The function 'sp_384_calc_vfy_point_6' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c64.c:34545:0: style: The function 'sp_384_calc_vfy_point_7' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c32.c:28202:0: style: The function 'sp_384_mont_reduce_order_15' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm64.c:43141:0: style: The function 'sp_384_mont_reduce_order_6' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c64.c:28714:0: style: The function 'sp_384_mont_reduce_order_7' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:123217:0: style: The function 'sp_521_calc_vfy_point_17' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c32.c:42416:0: style: The function 'sp_521_calc_vfy_point_21' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm64.c:111947:0: style: The function 'sp_521_calc_vfy_point_9' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:113460:0: style: The function 'sp_521_mont_reduce_order_17' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c32.c:35967:0: style: The function 'sp_521_mont_reduce_order_21' is never used. [unusedFunction]

^
wolfcrypt/src/sp_c64.c:36308:0: style: The function 'sp_521_mont_reduce_order_9' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:17689:0: style: The function 'sp_DhExp_2048' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:44886:0: style: The function 'sp_DhExp_3072' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:60458:0: style: The function 'sp_DhExp_4096' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:17752:0: style: The function 'sp_ModExp_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:44949:0: style: The function 'sp_ModExp_1536' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:17109:0: style: The function 'sp_ModExp_2048' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:44114:0: style: The function 'sp_ModExp_3072' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:59494:0: style: The function 'sp_ModExp_4096' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:152399:0: style: The function 'sp_ModExp_Fp_star_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:153120:0: style: The function 'sp_Pairing_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:153508:0: style: The function 'sp_Pairing_gen_precomp_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:153670:0: style: The function 'sp_Pairing_precomp_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:16855:0: style: The function 'sp_RsaPrivate_2048' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:43860:0: style: The function 'sp_RsaPrivate_3072' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:59240:0: style: The function 'sp_RsaPrivate_4096' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:16510:0: style: The function 'sp_RsaPublic_2048' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:43459:0: style: The function 'sp_RsaPublic_3072' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:58783:0: style: The function 'sp_RsaPublic_4096' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5248:0: style: The function 'sp_abs' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5987:0: style: The function 'sp_add_d' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:7627:0: style: The function 'sp_addmod_ct' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5011:0: style: The function 'sp_clear' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5403:0: style: The function 'sp_cmp' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5820:0: style: The function 'sp_cmp_d' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5319:0: style: The function 'sp_cmp_mag' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5565:0: style: The function 'sp_cnt_lsb' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:6931:0: style: The function 'sp_div_2' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:6966:0: style: The function 'sp_div_2_mod_ct' is never used. [unusedFunction]

^
wolfcrypt/src/wc_dsp.c:258:0: style: The function 'sp_dsp_ecc_verify_256' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:150283:0: style: The function 'sp_ecc_gen_table_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:74434:0: style: The function 'sp_ecc_make_key_256' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:91888:0: style: The function 'sp_ecc_make_key_384' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:119333:0: style: The function 'sp_ecc_make_key_521' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:146512:0: style: The function 'sp_ecc_mulmod_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:72657:0: style: The function 'sp_ecc_mulmod_256' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:90105:0: style: The function 'sp_ecc_mulmod_384' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:116996:0: style: The function 'sp_ecc_mulmod_521' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:72714:0: style: The function 'sp_ecc_mulmod_add_256' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:90162:0: style: The function 'sp_ecc_mulmod_add_384' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:117053:0: style: The function 'sp_ecc_mulmod_add_521' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:150152:0: style: The function 'sp_ecc_mulmod_base_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:74209:0: style: The function 'sp_ecc_mulmod_base_256' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:91657:0: style: The function 'sp_ecc_mulmod_base_384' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:119092:0: style: The function 'sp_ecc_mulmod_base_521' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:150206:0: style: The function 'sp_ecc_mulmod_base_add_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:74263:0: style: The function 'sp_ecc_mulmod_base_add_256' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:91711:0: style: The function 'sp_ecc_mulmod_base_add_384' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:119146:0: style: The function 'sp_ecc_mulmod_base_add_521' is never used. [unusedFunction]

^
wolfcrypt/src/sp_arm32.c:150386:0: style: The function 'sp_ecc_mulmod_table_1024' is never used. [unusedFunction]

^
wolfcrypt/src/sp_dsp32.c:4845:0: style: The function 'sp_ecc_uncompress_256' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5143:0: style: The function 'sp_exch' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:13894:0: style: The function 'sp_exptmod_nct' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5035:0: style: The function 'sp_forcezero' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:4967:0: style: The function 'sp_grow' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5116:0: style: The function 'sp_init_copy' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:4916:0: style: The function 'sp_init_multi' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:12167:0: style: The function 'sp_invmod' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:12444:0: style: The function 'sp_invmod_mont_ct' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5607:0: style: The function 'sp_leading_bit' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:7923:0: style: The function 'sp_lshd' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:6835:0: style: The function 'sp_mod_d' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:17130:0: style: The function 'sp_mont_red' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:17194:0: style: The function 'sp_mont_setup' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:11757:0: style: The function 'sp_mulmod' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:18060:0: style: The function 'sp_rand_prime' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:17650:0: style: The function 'sp_read_radix' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:17305:0: style: The function 'sp_read_unsigned_bin' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:8023:0: style: The function 'sp_rshd' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5738:0: style: The function 'sp_set' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:5765:0: style: The function 'sp_set_int' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:16635:0: style: The function 'sp_sqrmod' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:6050:0: style: The function 'sp_sub_d' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:7573:0: style: The function 'sp_submod' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:7792:0: style: The function 'sp_submod_ct' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:17406:0: style: The function 'sp_to_unsigned_bin' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:17828:0: style: The function 'sp_todecimal' is never used. [unusedFunction]

^
wolfcrypt/src/sp_int.c:4998:0: style: The function 'sp_zero' is never used. [unusedFunction]

^
IDE/iotsafe/devices.c:424:0: style: The function 'stmod_modem_disable' is never used. [unusedFunction]

^
tests/api.c:64505:0: style: The function 'test_wolfSSL_CTX_StaticMemory_TLS' is never used. [unusedFunction]

^
tests/api.c:6636:0: style: The function 'test_wolfSSL_client_server_nofail' is never used. [unusedFunction]

^
IDE/STARCORE/starcore_test.c:147:0: style: The function 'testharness_main' is never used. [unusedFunction]

^
IDE/MDK-ARM/LPC43xx/time-LCP43xx.c:127:0: style: The function 'time_main' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/DK-S7G2/benchmark-template/src/app_entry.c:45:0: style: The function 'timer_callback' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2688:0: style: The function 'tsip_Close' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:2593:0: style: The function 'tsip_Open' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1454:0: style: The function 'tsip_Tls13CertificateVerify' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:458:0: style: The function 'tsip_Tls13DeriveEarlySecret' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:495:0: style: The function 'tsip_Tls13DeriveHandshakeSecret' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:985:0: style: The function 'tsip_Tls13DeriveKeys' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1068:0: style: The function 'tsip_Tls13DeriveMasterSecret' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:251:0: style: The function 'tsip_Tls13GenEccKeyPair' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:373:0: style: The function 'tsip_Tls13GenSharedSecret' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1244:0: style: The function 'tsip_Tls13HandleFinished' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1779:0: style: The function 'tsip_Tls13SendCertVerify' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:1388:0: style: The function 'tsip_Tls13SendFinished' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:784:0: style: The function 'tsip_crypt_AesCbc_multitest' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:865:0: style: The function 'tsip_crypt_AesGcm_multitest' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:944:0: style: The function 'tsip_crypt_Sha_AesCbcGcm_multitest' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:726:0: style: The function 'tsip_crypt_sha_multitest' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RX72N/EnvisionKit/wolfssl_demo/wolfssl_tsip_unit_test.c:626:0: style: The function 'tsip_crypt_test' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_tsip_util.c:182:0: style: The function 'tsip_set_clientPrivateKeyEnc' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RA6M3/common/src/freertos_tcp_port.c:54:0: style: The function 'ulApplicationGetNextSequenceNumber' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RA6M3/common/src/freertos_tcp_port.c:50:0: style: The function 'vApplicationIPNetworkEventHook' is never used. [unusedFunction]

^
tests/w64wrapper.c:37:0: style: The function 'w64wrapper_test' is never used. [unusedFunction]

^
wolfcrypt/src/logging.c:1365:0: style: The function 'wc_AddErrorNode' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_aes.c:188:0: style: The function 'wc_AesCcmDecrypt_silabs' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_aes.c:166:0: style: The function 'wc_AesCcmEncrypt_silabs' is never used. [unusedFunction]

^
wolfcrypt/src/port/psa/psa_aes.c:293:0: style: The function 'wc_AesEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_aes.c:141:0: style: The function 'wc_AesGcmDecrypt_silabs' is never used. [unusedFunction]

^
wolfcrypt/src/port/silabs/silabs_aes.c:119:0: style: The function 'wc_AesGcmEncrypt_silabs' is never used. [unusedFunction]

^
wolfcrypt/src/port/ti/ti-aes.c:233:0: style: The function 'wc_AesSetKeyDirect' is never used. [unusedFunction]

^
wolfcrypt/src/port/af_alg/wc_afalg.c:115:0: style: The function 'wc_Afalg_SetAad' is never used. [unusedFunction]

^
wolfcrypt/src/port/af_alg/wc_afalg.c:94:0: style: The function 'wc_Afalg_SetIv' is never used. [unusedFunction]

^
wolfcrypt/src/port/af_alg/wc_afalg.c:135:0: style: The function 'wc_Afalg_SetOp' is never used. [unusedFunction]

^
wolfcrypt/src/blake2b.c:499:0: style: The function 'wc_Blake2bFinal' is never used. [unusedFunction]

^
wolfcrypt/src/blake2b.c:492:0: style: The function 'wc_Blake2bUpdate' is never used. [unusedFunction]

^
wolfcrypt/src/blake2s.c:495:0: style: The function 'wc_Blake2sFinal' is never used. [unusedFunction]

^
wolfcrypt/src/blake2s.c:488:0: style: The function 'wc_Blake2sUpdate' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:87:0: style: The function 'wc_CAAMFreeInterface' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:58:0: style: The function 'wc_CAAMInitInterface' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_cmac.c:36:0: style: The function 'wc_CAAM_Cmac' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:219:0: style: The function 'wc_CAAM_Sha224Hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:229:0: style: The function 'wc_CAAM_Sha256Hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:239:0: style: The function 'wc_CAAM_Sha384Hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:250:0: style: The function 'wc_CAAM_Sha512Hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_fsl_nxp.c:209:0: style: The function 'wc_CAAM_ShaHash' is never used. [unusedFunction]

^
wolfcrypt/src/camellia.c:1621:0: style: The function 'wc_CamelliaCbcDecrypt' is never used. [unusedFunction]

^
wolfcrypt/src/camellia.c:1599:0: style: The function 'wc_CamelliaCbcEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/camellia.c:1588:0: style: The function 'wc_CamelliaDecryptDirect' is never used. [unusedFunction]

^
wolfcrypt/src/camellia.c:1577:0: style: The function 'wc_CamelliaEncryptDirect' is never used. [unusedFunction]

^
wolfcrypt/src/camellia.c:1532:0: style: The function 'wc_CamelliaSetKey' is never used. [unusedFunction]

^
wolfcrypt/src/chacha20_poly1305.c:84:0: style: The function 'wc_ChaCha20Poly1305_Decrypt' is never used. [unusedFunction]

^
wolfcrypt/src/chacha20_poly1305.c:51:0: style: The function 'wc_ChaCha20Poly1305_Encrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:878:0: style: The function 'wc_CryptoCb_AesCbcDecrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:846:0: style: The function 'wc_CryptoCb_AesCbcEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:803:0: style: The function 'wc_CryptoCb_AesCcmDecrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:762:0: style: The function 'wc_CryptoCb_AesCcmEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:911:0: style: The function 'wc_CryptoCb_AesCtrEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:976:0: style: The function 'wc_CryptoCb_AesEcbDecrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:944:0: style: The function 'wc_CryptoCb_AesEcbEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:719:0: style: The function 'wc_CryptoCb_AesGcmDecrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:678:0: style: The function 'wc_CryptoCb_AesGcmEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/intel/quickassist_sync.c:1379:0: style: The function 'wc_CryptoCb_CleanupIntelQa' is never used. [unusedFunction]

^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:871:0: style: The function 'wc_CryptoCb_CleanupOcteon' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:538:0: style: The function 'wc_CryptoCb_CleanupRenesasCmn' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:554:0: style: The function 'wc_CryptoCb_Curve25519' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:528:0: style: The function 'wc_CryptoCb_Curve25519Gen' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:1333:0: style: The function 'wc_CryptoCb_DefaultDevID' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:1043:0: style: The function 'wc_CryptoCb_Des3Decrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:1011:0: style: The function 'wc_CryptoCb_Des3Encrypt' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:500:0: style: The function 'wc_CryptoCb_EccCheckPrivKey' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:442:0: style: The function 'wc_CryptoCb_EccSign' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:471:0: style: The function 'wc_CryptoCb_EccVerify' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:415:0: style: The function 'wc_CryptoCb_Ecdh' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:584:0: style: The function 'wc_CryptoCb_Ed25519Gen' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:610:0: style: The function 'wc_CryptoCb_Ed25519Sign' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:642:0: style: The function 'wc_CryptoCb_Ed25519Verify' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:230:0: style: The function 'wc_CryptoCb_GetDevIdAtIndex' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:1215:0: style: The function 'wc_CryptoCb_Hmac' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:136:0: style: The function 'wc_CryptoCb_InfoString' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:222:0: style: The function 'wc_CryptoCb_Init' is never used. [unusedFunction]

^
wolfcrypt/src/port/intel/quickassist_sync.c:1347:0: style: The function 'wc_CryptoCb_InitIntelQa' is never used. [unusedFunction]

^
wolfcrypt/src/port/cavium/cavium_octeon_sync.c:862:0: style: The function 'wc_CryptoCb_InitOcteon' is never used. [unusedFunction]

^
wolfcrypt/src/port/intel/quickassist_sync.c:1726:0: style: The function 'wc_CryptoCb_IntelQaFree' is never used. [unusedFunction]

^
wolfcrypt/src/port/intel/quickassist_sync.c:1697:0: style: The function 'wc_CryptoCb_IntelQaMalloc' is never used. [unusedFunction]

^
wolfcrypt/src/port/intel/quickassist_sync.c:1751:0: style: The function 'wc_CryptoCb_IntelQaRealloc' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:389:0: style: The function 'wc_CryptoCb_MakeEccKey' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:1244:0: style: The function 'wc_CryptoCb_RandomBlock' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:1272:0: style: The function 'wc_CryptoCb_RandomSeed' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:279:0: style: The function 'wc_CryptoCb_Rsa' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:337:0: style: The function 'wc_CryptoCb_RsaCheckPrivKey' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:363:0: style: The function 'wc_CryptoCb_RsaGetSize' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:1110:0: style: The function 'wc_CryptoCb_Sha256Hash' is never used. [unusedFunction]

^
wolfcrypt/src/cryptocb.c:1077:0: style: The function 'wc_CryptoCb_ShaHash' is never used. [unusedFunction]

^
wolfcrypt/src/compress.c:211:0: style: The function 'wc_DeCompressDynamic' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:1104:0: style: The function 'wc_DecodeEccsiSsk' is never used. [unusedFunction]

^
wolfcrypt/src/des3.c:97:0: style: The function 'wc_Des3_EcbEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/ti/ti-des3.c:161:0: style: The function 'wc_Des_CbcDecryptWithKey' is never used. [unusedFunction]

^
wolfcrypt/src/wc_encrypt.c:121:0: style: The function 'wc_Des_CbcEncryptWithKey' is never used. [unusedFunction]

^
wolfcrypt/src/des3.c:93:0: style: The function 'wc_Des_EcbEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/wc_devcrypto.c:67:0: style: The function 'wc_DevCryptoCleanup' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/wc_devcrypto.c:37:0: style: The function 'wc_DevCryptoInit' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/devcrypto_hmac.c:96:0: style: The function 'wc_DevCrypto_HmacFinal' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/devcrypto_hmac.c:124:0: style: The function 'wc_DevCrypto_HmacFree' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/devcrypto_hmac.c:115:0: style: The function 'wc_DevCrypto_HmacInit' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/devcrypto_hmac.c:56:0: style: The function 'wc_DevCrypto_HmacSetKey' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/devcrypto_hmac.c:71:0: style: The function 'wc_DevCrypto_HmacUpdate' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/devcrypto_rsa.c:434:0: style: The function 'wc_DevCrypto_MakeRsaKey' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/devcrypto_rsa.c:322:0: style: The function 'wc_DevCrypto_RsaDecrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/devcrypto_rsa.c:341:0: style: The function 'wc_DevCrypto_RsaEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/devcrypto_rsa.c:574:0: style: The function 'wc_DevCrypto_RsaFree' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:881:0: style: The function 'wc_Dilithium_KeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:760:0: style: The function 'wc_Dilithium_PrivateKeyDecode' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:906:0: style: The function 'wc_Dilithium_PrivateKeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:800:0: style: The function 'wc_Dilithium_PublicKeyDecode' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:846:0: style: The function 'wc_Dilithium_PublicKeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:11040:0: style: The function 'wc_DsaKeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:11054:0: style: The function 'wc_DsaKeyToParamsDer' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:11065:0: style: The function 'wc_DsaKeyToParamsDer_ex' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:10412:0: style: The function 'wc_DsaParamsDecode' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:1000:0: style: The function 'wc_EncodeEccsiPair' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:1145:0: style: The function 'wc_EncodeEccsiPvt' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:1057:0: style: The function 'wc_EncodeEccsiSsk' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:635:0: style: The function 'wc_ExportEccsiKey' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:757:0: style: The function 'wc_ExportEccsiPrivateKey' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:843:0: style: The function 'wc_ExportEccsiPublicKey' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:807:0: style: The function 'wc_Falcon_KeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:695:0: style: The function 'wc_Falcon_PrivateKeyDecode' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:827:0: style: The function 'wc_Falcon_PrivateKeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:732:0: style: The function 'wc_Falcon_PublicKeyDecode' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:775:0: style: The function 'wc_Falcon_PublicKeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/wc_port.c:496:0: style: The function 'wc_FileLoad' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:147:0: style: The function 'wc_FreeEccsiKey' is never used. [unusedFunction]

^
wolfcrypt/src/wc_port.c:2754:0: style: The function 'wc_FreeRwLock' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:14969:0: style: The function 'wc_GetCTC_HashOID' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:14210:0: style: The function 'wc_GetDateAsCalendarTime' is never used. [unusedFunction]

^
wolfcrypt/src/logging.c:1415:0: style: The function 'wc_GetErrorNodeErr' is never used. [unusedFunction]

^
wolfcrypt/src/wolfmath.c:427:0: style: The function 'wc_GetMathInfo' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:13981:0: style: The function 'wc_GetTime' is never used. [unusedFunction]

^
wolfcrypt/src/port/ti/ti-aes.c:516:0: style: The function 'wc_GmacSetKey' is never used. [unusedFunction]

^
wolfcrypt/src/port/ti/ti-aes.c:521:0: style: The function 'wc_GmacUpdate' is never used. [unusedFunction]

^
wolfcrypt/src/hmac.c:126:0: style: The function 'wc_HKDF' is never used. [unusedFunction]

^
wolfcrypt/src/hmac.c:92:0: style: The function 'wc_HmacFinal_Software' is never used. [unusedFunction]

^
wolfcrypt/src/hmac.c:74:0: style: The function 'wc_HmacSetKey_Software' is never used. [unusedFunction]

^
wolfcrypt/src/hmac.c:84:0: style: The function 'wc_HmacUpdate_Software' is never used. [unusedFunction]

^
wolfcrypt/src/hpke.c:283:0: style: The function 'wc_HpkeGenerateKeyPair' is never used. [unusedFunction]

^
wolfcrypt/src/hpke.c:131:0: style: The function 'wc_HpkeInit' is never used. [unusedFunction]

^
wolfcrypt/src/hpke.c:1159:0: style: The function 'wc_HpkeOpenBase' is never used. [unusedFunction]

^
wolfcrypt/src/hpke.c:923:0: style: The function 'wc_HpkeSealBase' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:714:0: style: The function 'wc_ImportEccsiKey' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:804:0: style: The function 'wc_ImportEccsiPrivateKey' is never used. [unusedFunction]

^
wolfcrypt/src/wc_port.c:991:0: style: The function 'wc_InitAndAllocMutex' is never used. [unusedFunction]

^
wolfcrypt/src/blake2b.c:464:0: style: The function 'wc_InitBlake2b' is never used. [unusedFunction]

^
wolfcrypt/src/blake2b.c:475:0: style: The function 'wc_InitBlake2b_WithKey' is never used. [unusedFunction]

^
wolfcrypt/src/blake2s.c:458:0: style: The function 'wc_InitBlake2s' is never used. [unusedFunction]

^
wolfcrypt/src/blake2s.c:470:0: style: The function 'wc_InitBlake2s_WithKey' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:135:0: style: The function 'wc_InitEccsiKey' is never used. [unusedFunction]

^
wolfcrypt/src/sakke.c:186:0: style: The function 'wc_InitSakkeKey' is never used. [unusedFunction]

^
wolfcrypt/src/siphash.c:152:0: style: The function 'wc_InitSipHash' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:482:0: style: The function 'wc_KyberKey_Decapsulate' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:555:0: style: The function 'wc_KyberKey_DecodePrivateKey' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:594:0: style: The function 'wc_KyberKey_DecodePublicKey' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:458:0: style: The function 'wc_KyberKey_EncapsulateWithRandom' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:633:0: style: The function 'wc_KyberKey_EncodePrivateKey' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:670:0: style: The function 'wc_KyberKey_EncodePublicKey' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:115:0: style: The function 'wc_KyberKey_Free' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:73:0: style: The function 'wc_KyberKey_Init' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:375:0: style: The function 'wc_KyberKey_MakeKeyWithRandom' is never used. [unusedFunction]

^
wolfcrypt/src/ext_kyber.c:278:0: style: The function 'wc_KyberKey_SharedSecretSize' is never used. [unusedFunction]

^
wolfcrypt/src/port/maxim/maxq10xx.c:640:0: style: The function 'wc_MAXQ10XX_AesFree' is never used. [unusedFunction]

^
wolfcrypt/src/port/maxim/maxq10xx.c:487:0: style: The function 'wc_MAXQ10XX_AesSetKey' is never used. [unusedFunction]

^
wolfcrypt/src/port/maxim/maxq10xx.c:764:0: style: The function 'wc_MAXQ10XX_EccFree' is never used. [unusedFunction]

^
wolfcrypt/src/port/maxim/maxq10xx.c:787:0: style: The function 'wc_MAXQ10XX_Sha256Copy' is never used. [unusedFunction]

^
wolfcrypt/src/port/maxim/maxq10xx.c:796:0: style: The function 'wc_MAXQ10XX_Sha256Free' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:468:0: style: The function 'wc_MakeEccsiKey' is never used. [unusedFunction]

^
wolfcrypt/src/eccsi.c:961:0: style: The function 'wc_MakeEccsiPair' is never used. [unusedFunction]

^
wolfcrypt/src/md2.c:135:0: style: The function 'wc_Md2Hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/pic32/pic32mz-crypt.c:675:0: style: The function 'wc_Md5Pic32Free' is never used. [unusedFunction]

^
wolfcrypt/src/pwdbased.c:165:0: style: The function 'wc_PBKDF1' is never used. [unusedFunction]

^
wolfcrypt/src/pwdbased.c:344:0: style: The function 'wc_PKCS12_PBKDF' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:1185:0: style: The function 'wc_PKCS7_AddCertificate' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:8038:0: style: The function 'wc_PKCS7_AddRecipient_KEKRI' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:7423:0: style: The function 'wc_PKCS7_AddRecipient_ORI' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:7737:0: style: The function 'wc_PKCS7_AddRecipient_PWRI' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:4225:0: style: The function 'wc_PKCS7_AllowDegenerate' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:11629:0: style: The function 'wc_PKCS7_DecodeAuthEnvelopedData' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:12546:0: style: The function 'wc_PKCS7_DecodeEncryptedData' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:10676:0: style: The function 'wc_PKCS7_DecodeEnvelopedData' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:11068:0: style: The function 'wc_PKCS7_EncodeAuthEnvelopedData' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:1442:0: style: The function 'wc_PKCS7_EncodeData' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:8287:0: style: The function 'wc_PKCS7_EncodeEnvelopedData' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:2783:0: style: The function 'wc_PKCS7_EncodeSignedData_ex' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:3040:0: style: The function 'wc_PKCS7_EncodeSignedEncryptedFPD' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:2971:0: style: The function 'wc_PKCS7_EncodeSignedFPD' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:1413:0: style: The function 'wc_PKCS7_GetAttributeValue' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:5436:0: style: The function 'wc_PKCS7_GetSignerSID' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:765:0: style: The function 'wc_PKCS7_New' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:2851:0: style: The function 'wc_PKCS7_NoDefaultSignedAttribs' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:12914:0: style: The function 'wc_PKCS7_SetDecodeEncryptedCb' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:12927:0: style: The function 'wc_PKCS7_SetDecodeEncryptedCtx' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:2830:0: style: The function 'wc_PKCS7_SetDetached' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:10628:0: style: The function 'wc_PKCS7_SetKey' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:9374:0: style: The function 'wc_PKCS7_SetOriDecryptCb' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:9362:0: style: The function 'wc_PKCS7_SetOriDecryptCtx' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:9351:0: style: The function 'wc_PKCS7_SetOriEncryptCtx' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:8008:0: style: The function 'wc_PKCS7_SetPassword' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:7338:0: style: The function 'wc_PKCS7_SetSignerIdentifierType' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:9386:0: style: The function 'wc_PKCS7_SetWrapCEKCb' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:5497:0: style: The function 'wc_PKCS7_VerifySignedData' is never used. [unusedFunction]

^
wolfcrypt/src/pkcs7.c:5489:0: style: The function 'wc_PKCS7_VerifySignedData_ex' is never used. [unusedFunction]

^
wolfcrypt/src/logging.c:1345:0: style: The function 'wc_PeekErrorNode' is never used. [unusedFunction]

^
wolfcrypt/src/port/pic32/pic32mz-crypt.c:789:0: style: The function 'wc_Pic32AesCrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/pic32/pic32mz-crypt.c:799:0: style: The function 'wc_Pic32DesCrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/pic32/pic32mz-crypt.c:469:0: style: The function 'wc_Pic32HashCopy' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:1306:0: style: The function 'wc_Pkcs11StoreKey' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:844:0: style: The function 'wc_Pkcs11Token_Close' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:734:0: style: The function 'wc_Pkcs11Token_Final' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:638:0: style: The function 'wc_Pkcs11Token_Init' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:694:0: style: The function 'wc_Pkcs11Token_InitName' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:722:0: style: The function 'wc_Pkcs11Token_InitName_NoLogin' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:670:0: style: The function 'wc_Pkcs11Token_Init_NoLogin' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:822:0: style: The function 'wc_Pkcs11Token_Open' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:3753:0: style: The function 'wc_Pkcs11_CryptoDevCb' is never used. [unusedFunction]

^
wolfcrypt/src/wc_pkcs11.c:425:0: style: The function 'wc_Pkcs11_Initialize' is never used. [unusedFunction]

^
wolfcrypt/src/poly1305.c:891:0: style: The function 'wc_Poly1305_MAC' is never used. [unusedFunction]

^
wolfcrypt/src/logging.c:1356:0: style: The function 'wc_PullErrorNode' is never used. [unusedFunction]

^
wolfcrypt/src/rc2.c:312:0: style: The function 'wc_Rc2CbcDecrypt' is never used. [unusedFunction]

^
wolfcrypt/src/rc2.c:283:0: style: The function 'wc_Rc2CbcEncrypt' is never used. [unusedFunction]

^
wolfcrypt/src/rc2.c:109:0: style: The function 'wc_Rc2SetKey' is never used. [unusedFunction]

^
wolfcrypt/src/logging.c:1375:0: style: The function 'wc_RemoveErrorNode' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_common.c:684:0: style: The function 'wc_Renesas_cmn_RootCertVerify' is never used. [unusedFunction]

^
wolfcrypt/src/ripemd.c:315:0: style: The function 'wc_RipeMdFinal' is never used. [unusedFunction]

^
wolfcrypt/src/ripemd.c:282:0: style: The function 'wc_RipeMdUpdate' is never used. [unusedFunction]

^
wolfcrypt/user-crypto/src/rsa.c:2774:0: style: The function 'wc_RsaKeyToPublicDer_ex' is never used. [unusedFunction]

^
wolfcrypt/user-crypto/src/rsa.c:166:0: style: The function 'wc_Rsa_to_unsigned_bin' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_seco.c:101:0: style: The function 'wc_SECOFreeInterface' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_seco.c:58:0: style: The function 'wc_SECOInitInterface' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_seco.c:548:0: style: The function 'wc_SECO_AesGetKeyID' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_seco.c:536:0: style: The function 'wc_SECO_CMACGetKeyID' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_seco.c:530:0: style: The function 'wc_SECO_CMACSetKeyID' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_seco.c:166:0: style: The function 'wc_SECO_CloseHSM' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_seco.c:489:0: style: The function 'wc_SECO_DeleteKey' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_seco.c:126:0: style: The function 'wc_SECO_OpenHSM' is never used. [unusedFunction]

^
wolfcrypt/src/logging.c:1386:0: style: The function 'wc_SetLoggingHeap' is never used. [unusedFunction]

^
wolfcrypt/src/asn.c:14007:0: style: The function 'wc_SetTimeCb' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/wc_devcrypto.c:233:0: style: The function 'wc_SetupCryptAead' is never used. [unusedFunction]

^
wolfcrypt/src/port/devcrypto/wc_devcrypto.c:218:0: style: The function 'wc_SetupCryptSym' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha256.c:1634:0: style: The function 'wc_Sha224GetHash' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:397:0: style: The function 'wc_Sha256GetFlags' is never used. [unusedFunction]

^
wolfcrypt/src/port/pic32/pic32mz-crypt.c:777:0: style: The function 'wc_Sha256Pic32Free' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:390:0: style: The function 'wc_Sha256SetFlags' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512.c:736:0: style: The function 'wc_Sha384FinalRaw' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512.c:1058:0: style: The function 'wc_Sha384GetFlags' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512.c:1017:0: style: The function 'wc_Sha384GetHash' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512.c:1051:0: style: The function 'wc_Sha384SetFlags' is never used. [unusedFunction]

^
wolfcrypt/src/port/af_alg/afalg_hash.c:345:0: style: The function 'wc_Sha3_384_Copy' is never used. [unusedFunction]

^
wolfcrypt/src/port/af_alg/afalg_hash.c:329:0: style: The function 'wc_Sha3_384_GetHash' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512.c:576:0: style: The function 'wc_Sha512FinalRaw' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512.c:901:0: style: The function 'wc_Sha512GetFlags' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512.c:894:0: style: The function 'wc_Sha512SetFlags' is never used. [unusedFunction]

^
wolfcrypt/src/port/arm/armv8-sha512.c:684:0: style: The function 'wc_Sha512Transform' is never used. [unusedFunction]

^
wolfcrypt/src/hash.c:1456:0: style: The function 'wc_Sha512_256Hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:509:0: style: The function 'wc_ShaGetFlags' is never used. [unusedFunction]

^
wolfcrypt/src/port/pic32/pic32mz-crypt.c:726:0: style: The function 'wc_ShaPic32Free' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:502:0: style: The function 'wc_ShaSetFlags' is never used. [unusedFunction]

^
wolfcrypt/src/signature.c:454:0: style: The function 'wc_SignatureGenerate' is never used. [unusedFunction]

^
wolfcrypt/src/signature.c:265:0: style: The function 'wc_SignatureVerify' is never used. [unusedFunction]

^
wolfcrypt/src/siphash.c:860:0: style: The function 'wc_SipHash' is never used. [unusedFunction]

^
wolfcrypt/src/siphash.c:323:0: style: The function 'wc_SipHashFinal' is never used. [unusedFunction]

^
wolfcrypt/src/siphash.c:246:0: style: The function 'wc_SipHashUpdate' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:980:0: style: The function 'wc_Sphincs_KeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:832:0: style: The function 'wc_Sphincs_PrivateKeyDecode' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:1020:0: style: The function 'wc_Sphincs_PrivateKeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:881:0: style: The function 'wc_Sphincs_PublicKeyDecode' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:936:0: style: The function 'wc_Sphincs_PublicKeyToDer' is never used. [unusedFunction]

^
wolfcrypt/src/port/st/stm32.c:433:0: style: The function 'wc_Stm32_Aes_Init' is never used. [unusedFunction]

^
wolfcrypt/src/port/st/stm32.c:346:0: style: The function 'wc_Stm32_Hash_Final' is never used. [unusedFunction]

^
wolfcrypt/src/port/st/stm32.c:262:0: style: The function 'wc_Stm32_Hash_Init' is never used. [unusedFunction]

^
wolfcrypt/src/port/st/stm32.c:269:0: style: The function 'wc_Stm32_Hash_Update' is never used. [unusedFunction]

^
wolfcrypt/src/port/xilinx/xil-versal-trng.c:204:0: style: The function 'wc_VersalTrngGenerate' is never used. [unusedFunction]

^
wolfcrypt/src/port/xilinx/xil-versal-trng.c:108:0: style: The function 'wc_VersalTrngInit' is never used. [unusedFunction]

^
wolfcrypt/src/port/xilinx/xil-versal-trng.c:176:0: style: The function 'wc_VersalTrngReset' is never used. [unusedFunction]

^
wolfcrypt/src/port/xilinx/xil-versal-trng.c:191:0: style: The function 'wc_VersalTrngSelftest' is never used. [unusedFunction]

^
wolfcrypt/src/chacha20_poly1305.c:466:0: style: The function 'wc_XChaCha20Poly1305_Decrypt' is never used. [unusedFunction]

^
wolfcrypt/src/chacha20_poly1305.c:456:0: style: The function 'wc_XChaCha20Poly1305_Encrypt' is never used. [unusedFunction]

^
wolfcrypt/src/port/xilinx/xil-versal-glue.c:85:0: style: The function 'wc_XsecureErrorToString' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_init.c:433:0: style: The function 'wc_caamFree' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_init.c:367:0: style: The function 'wc_caamInit' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_init.c:441:0: style: The function 'wc_caamReadRegister' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_init.c:70:0: style: The function 'wc_caamSetResource' is never used. [unusedFunction]

^
wolfcrypt/src/port/caam/wolfcaam_init.c:459:0: style: The function 'wc_caamWriteRegister' is never used. [unusedFunction]

^
wolfcrypt/src/curve25519.c:441:0: style: The function 'wc_curve25519_check_public' is never used. [unusedFunction]

^
wolfcrypt/src/curve25519.c:150:0: style: The function 'wc_curve25519_generic' is never used. [unusedFunction]

^
wolfcrypt/src/curve25519.c:608:0: style: The function 'wc_curve25519_import_private' is never used. [unusedFunction]

^
wolfcrypt/src/curve25519.c:580:0: style: The function 'wc_curve25519_import_private_raw' is never used. [unusedFunction]

^
wolfcrypt/src/curve25519.c:388:0: style: The function 'wc_curve25519_import_public' is never used. [unusedFunction]

^
wolfcrypt/src/curve25519.c:675:0: style: The function 'wc_curve25519_init' is never used. [unusedFunction]

^
wolfcrypt/src/curve25519.c:249:0: style: The function 'wc_curve25519_shared_secret' is never used. [unusedFunction]

^
wolfcrypt/src/curve25519.c:701:0: style: The function 'wc_curve25519_size' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:345:0: style: The function 'wc_curve448_check_public' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:513:0: style: The function 'wc_curve448_export_key_raw' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:448:0: style: The function 'wc_curve448_export_private_raw' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:219:0: style: The function 'wc_curve448_export_public' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:702:0: style: The function 'wc_curve448_free' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:614:0: style: The function 'wc_curve448_import_private' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:567:0: style: The function 'wc_curve448_import_private_raw' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:288:0: style: The function 'wc_curve448_import_public' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:676:0: style: The function 'wc_curve448_init' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:77:0: style: The function 'wc_curve448_make_key' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:131:0: style: The function 'wc_curve448_shared_secret' is never used. [unusedFunction]

^
wolfcrypt/src/curve448.c:722:0: style: The function 'wc_curve448_size' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/dcp_port.c:157:0: style: The function 'wc_dcp_init' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:650:0: style: The function 'wc_dilithium_check_key' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:627:0: style: The function 'wc_dilithium_export_key' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:516:0: style: The function 'wc_dilithium_export_private_only' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:252:0: style: The function 'wc_dilithium_free' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:234:0: style: The function 'wc_dilithium_get_level' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:196:0: style: The function 'wc_dilithium_init' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:691:0: style: The function 'wc_dilithium_priv_size' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:716:0: style: The function 'wc_dilithium_pub_size' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:212:0: style: The function 'wc_dilithium_set_level' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:741:0: style: The function 'wc_dilithium_sig_size' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:60:0: style: The function 'wc_dilithium_sign_msg' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:666:0: style: The function 'wc_dilithium_size' is never used. [unusedFunction]

^
wolfcrypt/src/dilithium.c:141:0: style: The function 'wc_dilithium_verify_msg' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/ksdk_port.c:1100:0: style: The function 'wc_ecc_mulmod_ex2' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/ksdk_port.c:1119:0: style: The function 'wc_ecc_point_add' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:1216:0: style: The function 'wc_ed25519_export_key' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:1173:0: style: The function 'wc_ed25519_export_private_only' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:920:0: style: The function 'wc_ed25519_free' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:1157:0: style: The function 'wc_ed25519_import_private_key' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:1060:0: style: The function 'wc_ed25519_import_private_only' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:1052:0: style: The function 'wc_ed25519_import_public' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:914:0: style: The function 'wc_ed25519_init' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:230:0: style: The function 'wc_ed25519_make_key' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:1261:0: style: The function 'wc_ed25519_priv_size' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:1270:0: style: The function 'wc_ed25519_pub_size' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:1279:0: style: The function 'wc_ed25519_sig_size' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:454:0: style: The function 'wc_ed25519_sign_msg' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:1252:0: style: The function 'wc_ed25519_size' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:810:0: style: The function 'wc_ed25519_verify_msg' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:472:0: style: The function 'wc_ed25519ctx_sign_msg' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:828:0: style: The function 'wc_ed25519ctx_verify_msg' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:491:0: style: The function 'wc_ed25519ph_sign_hash' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:510:0: style: The function 'wc_ed25519ph_sign_msg' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:847:0: style: The function 'wc_ed25519ph_verify_hash' is never used. [unusedFunction]

^
wolfcrypt/src/ed25519.c:866:0: style: The function 'wc_ed25519ph_verify_msg' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:1184:0: style: The function 'wc_ed448_export_key' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:1117:0: style: The function 'wc_ed448_export_private_only' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:850:0: style: The function 'wc_ed448_free' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:1096:0: style: The function 'wc_ed448_import_private_key' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:992:0: style: The function 'wc_ed448_import_private_only' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:978:0: style: The function 'wc_ed448_import_public' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:842:0: style: The function 'wc_ed448_init' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:220:0: style: The function 'wc_ed448_make_key' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:1254:0: style: The function 'wc_ed448_priv_size' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:1271:0: style: The function 'wc_ed448_pub_size' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:1288:0: style: The function 'wc_ed448_sig_size' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:414:0: style: The function 'wc_ed448_sign_msg' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:1237:0: style: The function 'wc_ed448_size' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:738:0: style: The function 'wc_ed448_verify_msg' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:662:0: style: The function 'wc_ed448_verify_msg_final' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:648:0: style: The function 'wc_ed448_verify_msg_init' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:655:0: style: The function 'wc_ed448_verify_msg_update' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:463:0: style: The function 'wc_ed448ph_sign_msg' is never used. [unusedFunction]

^
wolfcrypt/src/ed448.c:786:0: style: The function 'wc_ed448ph_verify_msg' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:597:0: style: The function 'wc_falcon_check_key' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:574:0: style: The function 'wc_falcon_export_key' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:481:0: style: The function 'wc_falcon_export_private_only' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:244:0: style: The function 'wc_falcon_free' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:226:0: style: The function 'wc_falcon_get_level' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:188:0: style: The function 'wc_falcon_init' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:635:0: style: The function 'wc_falcon_priv_size' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:657:0: style: The function 'wc_falcon_pub_size' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:204:0: style: The function 'wc_falcon_set_level' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:679:0: style: The function 'wc_falcon_sig_size' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:60:0: style: The function 'wc_falcon_sign_msg' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:613:0: style: The function 'wc_falcon_size' is never used. [unusedFunction]

^
wolfcrypt/src/falcon.c:135:0: style: The function 'wc_falcon_verify_msg' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1502:0: style: The function 'wc_iotsafe_ecc_export_public' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1459:0: style: The function 'wc_iotsafe_ecc_export_public_ex' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1521:0: style: The function 'wc_iotsafe_ecc_gen_k' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1492:0: style: The function 'wc_iotsafe_ecc_gen_k_ex' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1497:0: style: The function 'wc_iotsafe_ecc_import_public' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1454:0: style: The function 'wc_iotsafe_ecc_import_public_ex' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1507:0: style: The function 'wc_iotsafe_ecc_sign_hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1464:0: style: The function 'wc_iotsafe_ecc_sign_hash_ex' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1515:0: style: The function 'wc_iotsafe_ecc_verify_hash' is never used. [unusedFunction]

^
wolfcrypt/src/port/psa/psa_aes.c:93:0: style: The function 'wc_psa_aes_get_key_size' is never used. [unusedFunction]

^
wolfcrypt/src/port/psa/psa_aes.c:77:0: style: The function 'wc_psa_aes_init' is never used. [unusedFunction]

^
wolfcrypt/src/port/psa/psa_aes.c:137:0: style: The function 'wc_psa_aes_set_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/psa/psa.c:81:0: style: The function 'wc_psa_get_random' is never used. [unusedFunction]

^
wolfcrypt/src/port/psa/psa.c:56:0: style: The function 'wc_psa_init' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_sce_util.c:152:0: style: The function 'wc_sce_Close' is never used. [unusedFunction]

^
wolfcrypt/src/port/Renesas/renesas_sce_util.c:115:0: style: The function 'wc_sce_Open' is never used. [unusedFunction]

^
wolfcrypt/src/pwdbased.c:833:0: style: The function 'wc_scrypt_ex' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:1966:0: style: The function 'wc_se050_ecc_insert_private_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:1951:0: style: The function 'wc_se050_ecc_insert_public_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:129:0: style: The function 'wc_se050_erase_object' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:607:0: style: The function 'wc_se050_get_binary_object' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:558:0: style: The function 'wc_se050_insert_binary_object' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:1002:0: style: The function 'wc_se050_rsa_insert_private_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:1017:0: style: The function 'wc_se050_rsa_insert_public_key' is never used. [unusedFunction]

^
wolfcrypt/src/port/nxp/se050_port.c:77:0: style: The function 'wc_se050_set_config' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:713:0: style: The function 'wc_sphincs_check_key' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:690:0: style: The function 'wc_sphincs_export_key' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:574:0: style: The function 'wc_sphincs_export_private_only' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:302:0: style: The function 'wc_sphincs_free' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:279:0: style: The function 'wc_sphincs_get_level_and_optim' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:234:0: style: The function 'wc_sphincs_init' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:754:0: style: The function 'wc_sphincs_priv_size' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:779:0: style: The function 'wc_sphincs_pub_size' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:251:0: style: The function 'wc_sphincs_set_level_and_optim' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:804:0: style: The function 'wc_sphincs_sig_size' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:60:0: style: The function 'wc_sphincs_sign_msg' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:729:0: style: The function 'wc_sphincs_size' is never used. [unusedFunction]

^
wolfcrypt/src/sphincs.c:169:0: style: The function 'wc_sphincs_verify_msg' is never used. [unusedFunction]

^
IDE/STM32Cube/wolfssl_example.c:1839:0: style: The function 'wolfCryptDemo' is never used. [unusedFunction]

^
wolfcrypt/src/port/atmel/atmel.c:189:0: style: The function 'wolfCrypt_ATECC_SetConfig' is never used. [unusedFunction]

^
wolfcrypt/src/wolfevent.c:250:0: style: The function 'wolfEventQueue_Count' is never used. [unusedFunction]

^
wolfcrypt/src/wolfevent.c:274:0: style: The function 'wolfEventQueue_Free' is never used. [unusedFunction]

^
wolfcrypt/src/wolfevent.c:72:0: style: The function 'wolfEventQueue_Init' is never used. [unusedFunction]

^
wolfcrypt/src/wolfevent.c:191:0: style: The function 'wolfEventQueue_Poll' is never used. [unusedFunction]

^
wolfcrypt/src/wolfevent.c:111:0: style: The function 'wolfEventQueue_Pop' is never used. [unusedFunction]

^
wolfcrypt/src/wolfevent.c:88:0: style: The function 'wolfEventQueue_Push' is never used. [unusedFunction]

^
wolfcrypt/src/wolfevent.c:38:0: style: The function 'wolfEvent_Init' is never used. [unusedFunction]

^
src/wolfio.c:1668:0: style: The function 'wolfIO_HttpBuildRequest' is never used. [unusedFunction]

^
src/wolfio.c:970:0: style: The function 'wolfIO_Select' is never used. [unusedFunction]

^
src/wolfio.c:944:0: style: The function 'wolfIO_SetBlockingMode' is never used. [unusedFunction]

^
src/wolfio.c:939:0: style: The function 'wolfIO_SetTimeout' is never used. [unusedFunction]

^
src/wolfio.c:1320:0: style: The function 'wolfIO_TcpAccept' is never used. [unusedFunction]

^
src/wolfio.c:1260:0: style: The function 'wolfIO_TcpBind' is never used. [unusedFunction]

^
wolfcrypt/src/port/iotsafe/iotsafe.c:1530:0: style: The function 'wolfIoTSafe_GetRandom' is never used. [unusedFunction]

^
src/ssl.c:36599:0: style: The function 'wolfSSL_3des_iv' is never used. [unusedFunction]

^
src/ssl.c:24831:0: style: The function 'wolfSSL_AES_cfb128_encrypt' is never used. [unusedFunction]

^
src/ssl.c:24712:0: style: The function 'wolfSSL_AES_set_decrypt_key' is never used. [unusedFunction]

^
src/ssl.c:24684:0: style: The function 'wolfSSL_AES_set_encrypt_key' is never used. [unusedFunction]

^
src/ssl.c:1413:0: style: The function 'wolfSSL_AllowEncryptThenMac' is never used. [unusedFunction]

^
src/ssl.c:35718:0: style: The function 'wolfSSL_BUF_MEM_free' is never used. [unusedFunction]

^
src/ssl.c:35681:0: style: The function 'wolfSSL_BUF_MEM_grow' is never used. [unusedFunction]

^
src/ssl.c:35621:0: style: The function 'wolfSSL_BUF_MEM_new' is never used. [unusedFunction]

^
src/ssl.c:35687:0: style: The function 'wolfSSL_BUF_MEM_resize' is never used. [unusedFunction]

^
src/ssl.c:22638:0: style: The function 'wolfSSL_CIPHER_description' is never used. [unusedFunction]

^
src/ssl.c:21874:0: style: The function 'wolfSSL_CIPHER_get_version' is never used. [unusedFunction]

^
src/ssl.c:22780:0: style: The function 'wolfSSL_COMP_add_compression_method' is never used. [unusedFunction]

^
src/ssl.c:22772:0: style: The function 'wolfSSL_COMP_rle' is never used. [unusedFunction]

^
src/ssl.c:22764:0: style: The function 'wolfSSL_COMP_zlib' is never used. [unusedFunction]

^
src/ssl.c:35489:0: style: The function 'wolfSSL_CRYPTO_free' is never used. [unusedFunction]

^
src/ssl.c:35502:0: style: The function 'wolfSSL_CRYPTO_malloc' is never used. [unusedFunction]

^
src/ssl.c:31362:0: style: The function 'wolfSSL_CRYPTO_memcmp' is never used. [unusedFunction]

^
src/ssl.c:1399:0: style: The function 'wolfSSL_CTX_AllowEncryptThenMac' is never used. [unusedFunction]

^
src/ssl.c:2690:0: style: The function 'wolfSSL_CTX_GetObjectSize' is never used. [unusedFunction]

^
src/ssl.c:11435:0: style: The function 'wolfSSL_CTX_SetCACb' is never used. [unusedFunction]

^
src/ssl.c:11426:0: style: The function 'wolfSSL_CTX_SetCertCbCtx' is never used. [unusedFunction]

^
src/ssl.c:4773:0: style: The function 'wolfSSL_CTX_SetDecryptVerifyCb' is never used. [unusedFunction]

^
src/wolfio.c:2084:0: style: The function 'wolfSSL_CTX_SetGenCookie' is never used. [unusedFunction]

^
src/ssl.c:4750:0: style: The function 'wolfSSL_CTX_SetMacEncryptCb' is never used. [unusedFunction]

^
src/ssl.c:4645:0: style: The function 'wolfSSL_CTX_UseClientSuites' is never used. [unusedFunction]

^
src/ssl.c:29494:0: style: The function 'wolfSSL_CTX_add0_chain_cert' is never used. [unusedFunction]

^
src/ssl.c:17329:0: style: The function 'wolfSSL_CTX_add_client_CA' is never used. [unusedFunction]

^
src/ssl.c:24179:0: style: The function 'wolfSSL_CTX_add_extra_chain_cert' is never used. [unusedFunction]

^
src/ssl.c:21685:0: style: The function 'wolfSSL_CTX_add_session' is never used. [unusedFunction]

^
src/ssl.c:20311:0: style: The function 'wolfSSL_CTX_clear_mode' is never used. [unusedFunction]

^
src/ssl.c:14539:0: style: The function 'wolfSSL_CTX_flush_sessions' is never used. [unusedFunction]

^
src/ssl.c:33313:0: style: The function 'wolfSSL_CTX_get0_chain_certs' is never used. [unusedFunction]

^
src/ssl.c:23014:0: style: The function 'wolfSSL_CTX_get0_param' is never used. [unusedFunction]

^
src/ssl.c:17911:0: style: The function 'wolfSSL_CTX_get_cert_store' is never used. [unusedFunction]

^
src/ssl.c:33209:0: style: The function 'wolfSSL_CTX_get_extra_chain_certs' is never used. [unusedFunction]

^
src/ssl.c:20352:0: style: The function 'wolfSSL_CTX_get_mode' is never used. [unusedFunction]

^
src/ssl.c:16608:0: style: The function 'wolfSSL_CTX_get_psk_callback_ctx' is never used. [unusedFunction]

^
src/ssl.c:24303:0: style: The function 'wolfSSL_CTX_get_read_ahead' is never used. [unusedFunction]

^
src/ssl.c:35397:0: style: The function 'wolfSSL_CTX_get_security_level' is never used. [unusedFunction]

^
src/ssl.c:12075:0: style: The function 'wolfSSL_CTX_get_session_cache_mode' is never used. [unusedFunction]

^
src/ssl.c:33272:0: style: The function 'wolfSSL_CTX_get_tlsext_status_cb' is never used. [unusedFunction]

^
src/ssl.c:9678:0: style: The function 'wolfSSL_CTX_get_verify_depth' is never used. [unusedFunction]

^
src/ssl.c:9204:0: style: The function 'wolfSSL_CTX_load_system_CA_certs' is never used. [unusedFunction]

^
src/ssl.c:16687:0: style: The function 'wolfSSL_CTX_load_verify_chain_buffer_format' is never used. [unusedFunction]

^
src/ssl.c:20424:0: style: The function 'wolfSSL_CTX_sess_get_cache_size' is never used. [unusedFunction]

^
src/ssl.c:24159:0: style: The function 'wolfSSL_CTX_sess_number' is never used. [unusedFunction]

^
src/ssl.c:17134:0: style: The function 'wolfSSL_CTX_sess_set_cache_size' is never used. [unusedFunction]

^
src/ssl.c:25424:0: style: The function 'wolfSSL_CTX_sess_set_get_cb' is never used. [unusedFunction]

^
src/ssl.c:25450:0: style: The function 'wolfSSL_CTX_sess_set_remove_cb' is never used. [unusedFunction]

^
src/ssl.c:22999:0: style: The function 'wolfSSL_CTX_set1_param' is never used. [unusedFunction]

^
src/ssl.c:17255:0: style: The function 'wolfSSL_CTX_set_cert_cb' is never used. [unusedFunction]

^
src/ssl.c:17922:0: style: The function 'wolfSSL_CTX_set_cert_store' is never used. [unusedFunction]

^
src/ssl.c:17222:0: style: The function 'wolfSSL_CTX_set_client_CA_list' is never used. [unusedFunction]

^
src/ssl.c:17246:0: style: The function 'wolfSSL_CTX_set_client_cert_cb' is never used. [unusedFunction]

^
src/ssl.c:20362:0: style: The function 'wolfSSL_CTX_set_default_read_ahead' is never used. [unusedFunction]

^
src/ssl.c:35374:0: style: The function 'wolfSSL_CTX_set_ecdh_auto' is never used. [unusedFunction]

^
src/ssl.c:23055:0: style: The function 'wolfSSL_CTX_set_info_callback' is never used. [unusedFunction]

^
src/ssl.c:20284:0: style: The function 'wolfSSL_CTX_set_mode' is never used. [unusedFunction]

^
src/ssl.c:33730:0: style: The function 'wolfSSL_CTX_set_msg_callback_arg' is never used. [unusedFunction]

^
src/ssl.c:16513:0: style: The function 'wolfSSL_CTX_set_psk_server_callback' is never used. [unusedFunction]

^
src/ssl.c:17151:0: style: The function 'wolfSSL_CTX_set_quiet_shutdown' is never used. [unusedFunction]

^
src/ssl.c:24313:0: style: The function 'wolfSSL_CTX_set_read_ahead' is never used. [unusedFunction]

^
src/ssl.c:35386:0: style: The function 'wolfSSL_CTX_set_security_level' is never used. [unusedFunction]

^
src/ssl.c:12046:0: style: The function 'wolfSSL_CTX_set_session_cache_mode' is never used. [unusedFunction]

^
src/ssl.c:20382:0: style: The function 'wolfSSL_CTX_set_session_id_context' is never used. [unusedFunction]

^
src/ssl.c:24325:0: style: The function 'wolfSSL_CTX_set_tlsext_opaque_prf_input_callback_arg' is never used. [unusedFunction]

^
src/ssl.c:24269:0: style: The function 'wolfSSL_CTX_set_tlsext_status_arg' is never used. [unusedFunction]

^
src/ssl.c:33292:0: style: The function 'wolfSSL_CTX_set_tlsext_status_cb' is never used. [unusedFunction]

^
src/ssl.c:30390:0: style: The function 'wolfSSL_CTX_set_tmp_dh' is never used. [unusedFunction]

^
src/ssl.c:17752:0: style: The function 'wolfSSL_CTX_set_tmp_rsa_callback' is never used. [unusedFunction]

^
src/ssl.c:1354:0: style: The function 'wolfSSL_CTX_up_ref' is never used. [unusedFunction]

^
src/ssl.c:30033:0: style: The function 'wolfSSL_CTX_use_PrivateKey' is never used. [unusedFunction]

^
src/ssl.c:11016:0: style: The function 'wolfSSL_CTX_use_PrivateKey_ASN1' is never used. [unusedFunction]

^
src/ssl.c:11205:0: style: The function 'wolfSSL_CTX_use_RSAPrivateKey_file' is never used. [unusedFunction]

^
src/ssl.c:16807:0: style: The function 'wolfSSL_CTX_use_certificate_chain_buffer' is never used. [unusedFunction]

^
src/ssl.c:16571:0: style: The function 'wolfSSL_CTX_use_psk_identity_hint' is never used. [unusedFunction]

^
src/ssl.c:8241:0: style: The function 'wolfSSL_CertManagerDisableCRL' is never used. [unusedFunction]

^
src/ssl.c:8413:0: style: The function 'wolfSSL_CertManagerDisableOCSP' is never used. [unusedFunction]

^
src/ssl.c:8506:0: style: The function 'wolfSSL_CertManagerDisableOCSPMustStaple' is never used. [unusedFunction]

^
src/ssl.c:8465:0: style: The function 'wolfSSL_CertManagerDisableOCSPStapling' is never used. [unusedFunction]

^
src/ssl.c:8367:0: style: The function 'wolfSSL_CertManagerEnableOCSP' is never used. [unusedFunction]

^
src/ssl.c:8484:0: style: The function 'wolfSSL_CertManagerEnableOCSPMustStaple' is never used. [unusedFunction]

^
src/ssl.c:8425:0: style: The function 'wolfSSL_CertManagerEnableOCSPStapling' is never used. [unusedFunction]

^
wolfcrypt/src/wc_dsp.c:108:0: style: The function 'wolfSSL_CleanupHandle' is never used. [unusedFunction]

^
src/ssl.c:19931:0: style: The function 'wolfSSL_DES_cbc_cksum' is never used. [unusedFunction]

^
src/ssl.c:20031:0: style: The function 'wolfSSL_DES_ede3_cbc_encrypt' is never used. [unusedFunction]

^
src/ssl.c:19913:0: style: The function 'wolfSSL_DES_key_sched' is never used. [unusedFunction]

^
src/ssl.c:20111:0: style: The function 'wolfSSL_DES_ncbc_encrypt' is never used. [unusedFunction]

^
src/ssl.c:24339:0: style: The function 'wolfSSL_DES_set_key' is never used. [unusedFunction]

^
src/ssl.c:24366:0: style: The function 'wolfSSL_DES_set_key_checked' is never used. [unusedFunction]

^
src/ssl.c:24491:0: style: The function 'wolfSSL_DES_set_odd_parity' is never used. [unusedFunction]

^
src/tls.c:362:0: style: The function 'wolfSSL_DeriveTlsKeys' is never used. [unusedFunction]

^
src/ssl.c:23075:0: style: The function 'wolfSSL_ERR_GET_LIB' is never used. [unusedFunction]

^
src/ssl.c:23108:0: style: The function 'wolfSSL_ERR_GET_REASON' is never used. [unusedFunction]

^
src/ssl.c:4575:0: style: The function 'wolfSSL_ERR_error_string_n' is never used. [unusedFunction]

^
src/ssl.c:20164:0: style: The function 'wolfSSL_ERR_free_strings' is never used. [unusedFunction]

^
src/ssl.c:18081:0: style: The function 'wolfSSL_ERR_get_error' is never used. [unusedFunction]

^
src/ssl.c:20441:0: style: The function 'wolfSSL_ERR_get_error_line' is never used. [unusedFunction]

^
src/ssl.c:20545:0: style: The function 'wolfSSL_ERR_get_error_line_data' is never used. [unusedFunction]

^
src/ssl.c:23068:0: style: The function 'wolfSSL_ERR_peek_error' is never used. [unusedFunction]

^
src/ssl.c:31369:0: style: The function 'wolfSSL_ERR_peek_last_error' is never used. [unusedFunction]

^
src/ssl.c:30000:0: style: The function 'wolfSSL_ERR_peek_last_error_line' is never used. [unusedFunction]

^
src/ssl.c:20510:0: style: The function 'wolfSSL_ERR_put_error' is never used. [unusedFunction]

^
src/ssl.c:34663:0: style: The function 'wolfSSL_ERR_remove_state' is never used. [unusedFunction]

^
wolfcrypt/src/memory.c:406:0: style: The function 'wolfSSL_Free' is never used. [unusedFunction]

^
src/ssl.c:4601:0: style: The function 'wolfSSL_FreeArrays' is never used. [unusedFunction]

^
src/ssl.c:4630:0: style: The function 'wolfSSL_FreeHandshakeResources' is never used. [unusedFunction]

^
src/ssl.c:4965:0: style: The function 'wolfSSL_GetAeadMacSize' is never used. [unusedFunction]

^
wolfcrypt/src/memory.c:121:0: style: The function 'wolfSSL_GetAllocators' is never used. [unusedFunction]

^
src/ssl.c:4929:0: style: The function 'wolfSSL_GetBulkCipher' is never used. [unusedFunction]

^
src/ssl.c:4956:0: style: The function 'wolfSSL_GetCipherBlockSize' is never used. [unusedFunction]

^
src/ssl.c:4938:0: style: The function 'wolfSSL_GetCipherType' is never used. [unusedFunction]

^
src/ssl.c:4885:0: style: The function 'wolfSSL_GetClientWriteIV' is never used. [unusedFunction]

^
src/ssl.c:4876:0: style: The function 'wolfSSL_GetClientWriteKey' is never used. [unusedFunction]

^
src/wolfio.c:2098:0: style: The function 'wolfSSL_GetCookieCtx' is never used. [unusedFunction]

^
src/ssl.c:4787:0: style: The function 'wolfSSL_GetDecryptVerifyCtx' is never used. [unusedFunction]

^
wolfcrypt/src/wc_dsp.c:78:0: style: The function 'wolfSSL_GetHandleCbSet' is never used. [unusedFunction]

^
wolfcrypt/src/hmac.c:1176:0: style: The function 'wolfSSL_GetHmacMaxSize' is never used. [unusedFunction]

^
src/ssl.c:4987:0: style: The function 'wolfSSL_GetHmacSize' is never used. [unusedFunction]

^
src/wolfio.c:2050:0: style: The function 'wolfSSL_GetIOReadCtx' is never used. [unusedFunction]

^
src/wolfio.c:2059:0: style: The function 'wolfSSL_GetIOWriteCtx' is never used. [unusedFunction]

^
src/ssl.c:4920:0: style: The function 'wolfSSL_GetIVSize' is never used. [unusedFunction]

^
src/ssl.c:4911:0: style: The function 'wolfSSL_GetKeySize' is never used. [unusedFunction]

^
src/ssl.c:4764:0: style: The function 'wolfSSL_GetMacEncryptCtx' is never used. [unusedFunction]

^
src/ssl.c:2839:0: style: The function 'wolfSSL_GetOutputSize' is never used. [unusedFunction]

^
src/ssl.c:4997:0: style: The function 'wolfSSL_GetPeerSequenceNumber' is never used. [unusedFunction]

^
src/ssl.c:5007:0: style: The function 'wolfSSL_GetSequenceNumber' is never used. [unusedFunction]

^
src/ssl.c:4903:0: style: The function 'wolfSSL_GetServerWriteIV' is never used. [unusedFunction]

^
src/ssl.c:4894:0: style: The function 'wolfSSL_GetServerWriteKey' is never used. [unusedFunction]

^
src/ssl.c:19799:0: style: The function 'wolfSSL_HMAC' is never used. [unusedFunction]

^
src/ssl.c:26475:0: style: The function 'wolfSSL_HMAC_CTX_Init' is never used. [unusedFunction]

^
src/ssl.c:26614:0: style: The function 'wolfSSL_HMAC_CTX_copy' is never used. [unusedFunction]

^
src/ssl.c:26992:0: style: The function 'wolfSSL_HMAC_CTX_free' is never used. [unusedFunction]

^
src/ssl.c:27009:0: style: The function 'wolfSSL_HMAC_CTX_get_md' is never used. [unusedFunction]

^
src/ssl.c:26465:0: style: The function 'wolfSSL_HMAC_CTX_new' is never used. [unusedFunction]

^
src/ssl.c:26882:0: style: The function 'wolfSSL_HMAC_Final' is never used. [unusedFunction]

^
src/ssl.c:26488:0: style: The function 'wolfSSL_HMAC_Init_ex' is never used. [unusedFunction]

^
src/ssl.c:26857:0: style: The function 'wolfSSL_HMAC_Update' is never used. [unusedFunction]

^
src/ssl.c:27000:0: style: The function 'wolfSSL_HMAC_size' is never used. [unusedFunction]

^
wolfcrypt/src/wc_dsp.c:86:0: style: The function 'wolfSSL_InitHandle' is never used. [unusedFunction]

^
src/ssl.c:4974:0: style: The function 'wolfSSL_IsTLSv1_1' is never used. [unusedFunction]

^
src/ssl.c:22735:0: style: The function 'wolfSSL_MD4_Final' is never used. [unusedFunction]

^
src/ssl.c:22716:0: style: The function 'wolfSSL_MD4_Init' is never used. [unusedFunction]

^
src/ssl.c:22727:0: style: The function 'wolfSSL_MD4_Update' is never used. [unusedFunction]

^
src/ssl.c:19070:0: style: The function 'wolfSSL_MD5' is never used. [unusedFunction]

^
src/ssl.c:19048:0: style: The function 'wolfSSL_MD5_Transform' is never used. [unusedFunction]

^
src/ssl.c:2695:0: style: The function 'wolfSSL_METHOD_GetObjectSize' is never used. [unusedFunction]

^
src/tls.c:459:0: style: The function 'wolfSSL_MakeTlsMasterSecret' is never used. [unusedFunction]

^
wolfcrypt/src/memory.c:319:0: style: The function 'wolfSSL_Malloc' is never used. [unusedFunction]

^
src/ssl.c:29968:0: style: The function 'wolfSSL_OBJ_cleanup' is never used. [unusedFunction]

^
src/ssl.c:29790:0: style: The function 'wolfSSL_OBJ_cmp' is never used. [unusedFunction]

^
src/ssl.c:29974:0: style: The function 'wolfSSL_OBJ_create' is never used. [unusedFunction]

^
src/ssl.c:29674:0: style: The function 'wolfSSL_OBJ_get0_data' is never used. [unusedFunction]

^
src/ssl.c:29647:0: style: The function 'wolfSSL_OBJ_length' is never used. [unusedFunction]

^
src/ssl.c:29761:0: style: The function 'wolfSSL_OBJ_ln2nid' is never used. [unusedFunction]

^
src/ssl.c:29136:0: style: The function 'wolfSSL_OBJ_nid2obj' is never used. [unusedFunction]

^
src/ssl.c:29310:0: style: The function 'wolfSSL_OBJ_obj2txt' is never used. [unusedFunction]

^
src/ssl.c:29840:0: style: The function 'wolfSSL_OBJ_txt2nid' is never used. [unusedFunction]

^
src/ocsp.c:697:0: style: The function 'wolfSSL_OCSP_BASICRESP_free' is never used. [unusedFunction]

^
src/ocsp.c:1007:0: style: The function 'wolfSSL_OCSP_CERTID_dup' is never used. [unusedFunction]

^
src/ocsp.c:593:0: style: The function 'wolfSSL_OCSP_CERTID_free' is never used. [unusedFunction]

^
src/ocsp.c:1226:0: style: The function 'wolfSSL_OCSP_REQUEST_add_ext' is never used. [unusedFunction]

^
src/ocsp.c:968:0: style: The function 'wolfSSL_OCSP_REQUEST_free' is never used. [unusedFunction]

^
src/ocsp.c:956:0: style: The function 'wolfSSL_OCSP_REQUEST_new' is never used. [unusedFunction]

^
src/ocsp.c:1125:0: style: The function 'wolfSSL_OCSP_SINGLERESP_get0_id' is never used. [unusedFunction]

^
src/ocsp.c:704:0: style: The function 'wolfSSL_OCSP_basic_verify' is never used. [unusedFunction]

^
src/ocsp.c:568:0: style: The function 'wolfSSL_OCSP_cert_status_str' is never used. [unusedFunction]

^
src/ocsp.c:599:0: style: The function 'wolfSSL_OCSP_cert_to_id' is never used. [unusedFunction]

^
src/ocsp.c:1374:0: style: The function 'wolfSSL_OCSP_check_nonce' is never used. [unusedFunction]

^
src/ocsp.c:582:0: style: The function 'wolfSSL_OCSP_check_validity' is never used. [unusedFunction]

^
src/ocsp.c:1249:0: style: The function 'wolfSSL_OCSP_crl_reason_str' is never used. [unusedFunction]

^
src/ocsp.c:1137:0: style: The function 'wolfSSL_OCSP_id_cmp' is never used. [unusedFunction]

^
src/ocsp.c:1261:0: style: The function 'wolfSSL_OCSP_id_get0_info' is never used. [unusedFunction]

^
src/ssl.c:22701:0: style: The function 'wolfSSL_OCSP_parse_url' is never used. [unusedFunction]

^
src/ocsp.c:985:0: style: The function 'wolfSSL_OCSP_request_add0_id' is never used. [unusedFunction]

^
src/ocsp.c:1326:0: style: The function 'wolfSSL_OCSP_request_add1_nonce' is never used. [unusedFunction]

^
src/ocsp.c:1186:0: style: The function 'wolfSSL_OCSP_resp_count' is never used. [unusedFunction]

^
src/ocsp.c:529:0: style: The function 'wolfSSL_OCSP_resp_find_status' is never used. [unusedFunction]

^
src/ocsp.c:1204:0: style: The function 'wolfSSL_OCSP_resp_get0' is never used. [unusedFunction]

^
src/ocsp.c:1238:0: style: The function 'wolfSSL_OCSP_response_create' is never used. [unusedFunction]

^
src/ocsp.c:927:0: style: The function 'wolfSSL_OCSP_response_get1_basic' is never used. [unusedFunction]

^
src/ocsp.c:902:0: style: The function 'wolfSSL_OCSP_response_status' is never used. [unusedFunction]

^
src/ocsp.c:907:0: style: The function 'wolfSSL_OCSP_response_status_str' is never used. [unusedFunction]

^
src/ocsp.c:1164:0: style: The function 'wolfSSL_OCSP_single_get0_status' is never used. [unusedFunction]

^
src/ssl.c:33769:0: style: The function 'wolfSSL_OPENSSL_cleanse' is never used. [unusedFunction]

^
src/ssl.c:27187:0: style: The function 'wolfSSL_OPENSSL_free' is never used. [unusedFunction]

^
src/ssl.c:27253:0: style: The function 'wolfSSL_OPENSSL_init_crypto' is never used. [unusedFunction]

^
src/ssl.c:27246:0: style: The function 'wolfSSL_OPENSSL_init_ssl' is never used. [unusedFunction]

^
src/ssl.c:27197:0: style: The function 'wolfSSL_OPENSSL_malloc' is never used. [unusedFunction]

^
src/ssl.c:33753:0: style: The function 'wolfSSL_OPENSSL_memdup' is never used. [unusedFunction]

^
src/ssl.c:18981:0: style: The function 'wolfSSL_OpenSSL_version_num' is never used. [unusedFunction]

^
src/ssl.c:23524:0: style: The function 'wolfSSL_PEM_def_callback' is never used. [unusedFunction]

^
src/ssl.c:29075:0: style: The function 'wolfSSL_PEM_do_header' is never used. [unusedFunction]

^
src/ssl.c:29061:0: style: The function 'wolfSSL_PEM_get_EVP_CIPHER_INFO' is never used. [unusedFunction]

^
src/ssl.c:29017:0: style: The function 'wolfSSL_PEM_read' is never used. [unusedFunction]

^
src/ssl.c:27862:0: style: The function 'wolfSSL_PEM_read_PUBKEY' is never used. [unusedFunction]

^
src/ssl.c:28714:0: style: The function 'wolfSSL_PEM_read_PrivateKey' is never used. [unusedFunction]

^
src/ssl.c:27822:0: style: The function 'wolfSSL_PEM_read_bio_PUBKEY' is never used. [unusedFunction]

^
src/ssl.c:27767:0: style: The function 'wolfSSL_PEM_read_bio_PrivateKey' is never used. [unusedFunction]

^
src/ssl.c:29111:0: style: The function 'wolfSSL_PEM_read_bio_X509_AUX' is never used. [unusedFunction]

^
src/ssl.c:29038:0: style: The function 'wolfSSL_PEM_write' is never used. [unusedFunction]

^
src/ssl.c:27468:0: style: The function 'wolfSSL_PEM_write_bio_PUBKEY' is never used. [unusedFunction]

^
src/ssl.c:27487:0: style: The function 'wolfSSL_PEM_write_bio_PrivateKey' is never used. [unusedFunction]

^
src/ssl.c:38215:0: style: The function 'wolfSSL_PKCS12_PBE_add' is never used. [unusedFunction]

^
src/ssl.c:36342:0: style: The function 'wolfSSL_RAND_add' is never used. [unusedFunction]

^
src/ssl.c:35965:0: style: The function 'wolfSSL_RAND_egd' is never used. [unusedFunction]

^
src/ssl.c:35821:0: style: The function 'wolfSSL_RAND_file_name' is never used. [unusedFunction]

^
src/ssl.c:22752:0: style: The function 'wolfSSL_RAND_load_file' is never used. [unusedFunction]

^
src/ssl.c:36283:0: style: The function 'wolfSSL_RAND_poll' is never used. [unusedFunction]

^
src/ssl.c:36141:0: style: The function 'wolfSSL_RAND_pseudo_bytes' is never used. [unusedFunction]

^
src/ssl.c:22744:0: style: The function 'wolfSSL_RAND_screen' is never used. [unusedFunction]

^
src/ssl.c:36309:0: style: The function 'wolfSSL_RAND_set_rand_method' is never used. [unusedFunction]

^
src/ssl.c:35884:0: style: The function 'wolfSSL_RAND_write_file' is never used. [unusedFunction]

^
src/ssl.c:24605:0: style: The function 'wolfSSL_RC4' is never used. [unusedFunction]

^
src/ssl.c:24581:0: style: The function 'wolfSSL_RC4_set_key' is never used. [unusedFunction]

^
wolfcrypt/src/memory.c:447:0: style: The function 'wolfSSL_Realloc' is never used. [unusedFunction]

^
src/ssl.c:21885:0: style: The function 'wolfSSL_SESSION_CIPHER_get_name' is never used. [unusedFunction]

^
src/ssl.c:21576:0: style: The function 'wolfSSL_SESSION_dup' is never used. [unusedFunction]

^
src/ssl.c:30989:0: style: The function 'wolfSSL_SESSION_get_ex_data' is never used. [unusedFunction]

^
src/ssl.c:31440:0: style: The function 'wolfSSL_SESSION_get_id' is never used. [unusedFunction]

^
src/ssl.c:11232:0: style: The function 'wolfSSL_SESSION_get_master_key' is never used. [unusedFunction]

^
src/ssl.c:11259:0: style: The function 'wolfSSL_SESSION_get_master_key_length' is never used. [unusedFunction]

^
src/ssl.c:25953:0: style: The function 'wolfSSL_SESSION_get_time' is never used. [unusedFunction]

^
src/ssl.c:25942:0: style: The function 'wolfSSL_SESSION_get_timeout' is never used. [unusedFunction]

^
src/ssl.c:35410:0: style: The function 'wolfSSL_SESSION_is_resumable' is never used. [unusedFunction]

^
src/ssl.c:21278:0: style: The function 'wolfSSL_SESSION_new' is never used. [unusedFunction]

^
src/ssl.c:21730:0: style: The function 'wolfSSL_SESSION_set_cipher' is never used. [unusedFunction]

^
src/ssl.c:30946:0: style: The function 'wolfSSL_SESSION_set_ex_data' is never used. [unusedFunction]

^
src/ssl.c:38902:0: style: The function 'wolfSSL_SHA1' is never used. [unusedFunction]

^
src/ssl.c:19179:0: style: The function 'wolfSSL_SHA1_Final' is never used. [unusedFunction]

^
src/ssl.c:19164:0: style: The function 'wolfSSL_SHA1_Init' is never used. [unusedFunction]

^
src/ssl.c:19188:0: style: The function 'wolfSSL_SHA1_Transform' is never used. [unusedFunction]

^
src/ssl.c:19171:0: style: The function 'wolfSSL_SHA1_Update' is never used. [unusedFunction]

^
src/ssl.c:38996:0: style: The function 'wolfSSL_SHA256' is never used. [unusedFunction]

^
src/ssl.c:19282:0: style: The function 'wolfSSL_SHA256_Final' is never used. [unusedFunction]

^
src/ssl.c:19252:0: style: The function 'wolfSSL_SHA256_Init' is never used. [unusedFunction]

^
src/ssl.c:19305:0: style: The function 'wolfSSL_SHA256_Transform' is never used. [unusedFunction]

^
src/ssl.c:19268:0: style: The function 'wolfSSL_SHA256_Update' is never used. [unusedFunction]

^
src/ssl.c:19121:0: style: The function 'wolfSSL_SHA_Final' is never used. [unusedFunction]

^
src/ssl.c:19089:0: style: The function 'wolfSSL_SHA_Init' is never used. [unusedFunction]

^
src/ssl.c:19106:0: style: The function 'wolfSSL_SHA_Update' is never used. [unusedFunction]

^
src/wolfio.c:2013:0: style: The function 'wolfSSL_SSLSetIORecv' is never used. [unusedFunction]

^
src/wolfio.c:2025:0: style: The function 'wolfSSL_SSLSetIOSend' is never used. [unusedFunction]

^
src/ssl.c:32684:0: style: The function 'wolfSSL_SSL_CTX_get_timeout' is never used. [unusedFunction]

^
src/ssl.c:32723:0: style: The function 'wolfSSL_SSL_CTX_remove_session' is never used. [unusedFunction]

^
src/ssl.c:32846:0: style: The function 'wolfSSL_SSL_do_handshake' is never used. [unusedFunction]

^
src/ssl.c:32892:0: style: The function 'wolfSSL_SSL_get0_session' is never used. [unusedFunction]

^
src/ssl.c:20342:0: style: The function 'wolfSSL_SSL_get_mode' is never used. [unusedFunction]

^
src/ssl.c:32798:0: style: The function 'wolfSSL_SSL_get_rbio' is never used. [unusedFunction]

^
src/ssl.c:32809:0: style: The function 'wolfSSL_SSL_get_wbio' is never used. [unusedFunction]

^
src/ssl.c:32874:0: style: The function 'wolfSSL_SSL_in_connect_init' is never used. [unusedFunction]

^
src/ssl.c:32860:0: style: The function 'wolfSSL_SSL_in_init' is never used. [unusedFunction]

^
wolfcrypt/src/port/st/stsafe.c:365:0: style: The function 'wolfSSL_STSAFE_CryptoDevCb' is never used. [unusedFunction]

^
wolfcrypt/src/memory.c:111:0: style: The function 'wolfSSL_SetAllocators' is never used. [unusedFunction]

^
src/ssl.c:11417:0: style: The function 'wolfSSL_SetCertCbCtx' is never used. [unusedFunction]

^
src/wolfio.c:2091:0: style: The function 'wolfSSL_SetCookieCtx' is never used. [unusedFunction]

^
src/ssl.c:4780:0: style: The function 'wolfSSL_SetDecryptVerifyCtx' is never used. [unusedFunction]

^
src/wolfio.c:2068:0: style: The function 'wolfSSL_SetIOReadFlags' is never used. [unusedFunction]

^
src/wolfio.c:2075:0: style: The function 'wolfSSL_SetIOWriteFlags' is never used. [unusedFunction]

^
src/ssl.c:36504:0: style: The function 'wolfSSL_SetInternalIV' is never used. [unusedFunction]

^
src/ssl.c:4757:0: style: The function 'wolfSSL_SetMacEncryptCtx' is never used. [unusedFunction]

^
src/ssl.c:2901:0: style: The function 'wolfSSL_SetMinRsaKey_Sz' is never used. [unusedFunction]

^
src/ssl.c:11614:0: style: The function 'wolfSSL_SetServerID' is never used. [unusedFunction]

^
src/ssl.c:5534:0: style: The function 'wolfSSL_SetVersion' is never used. [unusedFunction]

^
src/ssl.c:36374:0: style: The function 'wolfSSL_StoreExternalIV' is never used. [unusedFunction]

^
src/ssl.c:35352:0: style: The function 'wolfSSL_THREADID_current' is never used. [unusedFunction]

^
src/ssl.c:35364:0: style: The function 'wolfSSL_THREADID_hash' is never used. [unusedFunction]

^
src/ssl.c:4660:0: style: The function 'wolfSSL_UseClientSuites' is never used. [unusedFunction]

^
src/crl.c:861:0: style: The function 'wolfSSL_X509_STORE_add_crl' is never used. [unusedFunction]

^
src/tls13.c:12616:0: style: The function 'wolfSSL_accept_TLSv13' is never used. [unusedFunction]

^
src/ssl.c:36622:0: style: The function 'wolfSSL_aes_ctr_iv' is never used. [unusedFunction]

^
src/ssl.c:23155:0: style: The function 'wolfSSL_alert_desc_string_long' is never used. [unusedFunction]

^
src/ssl.c:23147:0: style: The function 'wolfSSL_alert_type_string_long' is never used. [unusedFunction]

^
src/ssl.c:30450:0: style: The function 'wolfSSL_certs_clear' is never used. [unusedFunction]

^
src/ssl.c:20169:0: style: The function 'wolfSSL_cleanup_all_ex_data' is never used. [unusedFunction]

^
src/tls13.c:11474:0: style: The function 'wolfSSL_connect_TLSv13' is never used. [unusedFunction]

^
src/ssl.c:5389:0: style: The function 'wolfSSL_connect_cert' is never used. [unusedFunction]

^
src/ssl.c:33495:0: style: The function 'wolfSSL_curve_is_disabled' is never used. [unusedFunction]

^
src/ocsp.c:1080:0: style: The function 'wolfSSL_d2i_OCSP_CERTID' is never used. [unusedFunction]

^
src/ocsp.c:764:0: style: The function 'wolfSSL_d2i_OCSP_RESPONSE_bio' is never used. [unusedFunction]

^
src/ssl.c:38221:0: style: The function 'wolfSSL_d2i_PKCS12_fp' is never used. [unusedFunction]

^
src/ssl.c:10491:0: style: The function 'wolfSSL_d2i_PKCS8_PKEY' is never used. [unusedFunction]

^
src/ssl.c:10569:0: style: The function 'wolfSSL_d2i_PKCS8_PKEY_bio' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RX65N/RSK/wolfssl_demo/wolfssl_demo.c:535:0: style: The function 'wolfSSL_demo_task' is never used. [unusedFunction]

^
src/dtls13.c:2703:0: style: The function 'wolfSSL_dtls13_has_pending_msg' is never used. [unusedFunction]

^
src/ssl.c:2075:0: style: The function 'wolfSSL_dtls_get_peer' is never used. [unusedFunction]

^
src/ssl.c:14532:0: style: The function 'wolfSSL_flush_sessions' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:194:0: style: The function 'wolfSSL_fopen' is never used. [unusedFunction]

^
src/ssl.c:23023:0: style: The function 'wolfSSL_get0_param' is never used. [unusedFunction]

^
src/ssl.c:31430:0: style: The function 'wolfSSL_get_SSL_CTX' is never used. [unusedFunction]

^
src/ssl.c:4515:0: style: The function 'wolfSSL_get_alert_history' is never used. [unusedFunction]

^
src/ssl.c:21986:0: style: The function 'wolfSSL_get_cipher_by_value' is never used. [unusedFunction]

^
src/ssl.c:1788:0: style: The function 'wolfSSL_get_cipher_list_ex' is never used. [unusedFunction]

^
src/tls13.c:12576:0: style: The function 'wolfSSL_get_cipher_name_by_hash' is never used. [unusedFunction]

^
src/ssl.c:1844:0: style: The function 'wolfSSL_get_ciphers_iana' is never used. [unusedFunction]

^
src/ssl.c:23038:0: style: The function 'wolfSSL_get_ex_data_X509_STORE_CTX_idx' is never used. [unusedFunction]

^
src/ssl.c:17652:0: style: The function 'wolfSSL_get_keyblock_size' is never used. [unusedFunction]

^
src/ssl.c:17666:0: style: The function 'wolfSSL_get_keys' is never used. [unusedFunction]

^
src/ssl.c:23876:0: style: The function 'wolfSSL_get_privatekey' is never used. [unusedFunction]

^
src/ssl.c:16604:0: style: The function 'wolfSSL_get_psk_callback_ctx' is never used. [unusedFunction]

^
src/ssl.c:16561:0: style: The function 'wolfSSL_get_psk_identity' is never used. [unusedFunction]

^
src/ssl.c:16550:0: style: The function 'wolfSSL_get_psk_identity_hint' is never used. [unusedFunction]

^
src/ssl.c:24281:0: style: The function 'wolfSSL_get_read_ahead' is never used. [unusedFunction]

^
src/ssl.c:18141:0: style: The function 'wolfSSL_get_server_random' is never used. [unusedFunction]

^
src/ssl.c:18179:0: style: The function 'wolfSSL_get_server_tmp_key' is never used. [unusedFunction]

^
src/ssl.c:1879:0: style: The function 'wolfSSL_get_shared_ciphers' is never used. [unusedFunction]

^
src/ssl.c:21181:0: style: The function 'wolfSSL_get_shutdown' is never used. [unusedFunction]

^
src/ssl.c:27660:0: style: The function 'wolfSSL_get_signature_nid' is never used. [unusedFunction]

^
src/ssl.c:30436:0: style: The function 'wolfSSL_get_state' is never used. [unusedFunction]

^
src/ssl.c:9153:0: style: The function 'wolfSSL_get_system_CA_dirs' is never used. [unusedFunction]

^
src/ssl.c:32696:0: style: The function 'wolfSSL_get_timeout' is never used. [unusedFunction]

^
src/ssl.c:23832:0: style: The function 'wolfSSL_get_tlsext_status_exts' is never used. [unusedFunction]

^
src/ssl.c:23854:0: style: The function 'wolfSSL_get_tlsext_status_ids' is never used. [unusedFunction]

^
src/ssl.c:9664:0: style: The function 'wolfSSL_get_verify_depth' is never used. [unusedFunction]

^
src/ssl.c:24031:0: style: The function 'wolfSSL_get_verify_result' is never used. [unusedFunction]

^
src/ssl.c:5364:0: style: The function 'wolfSSL_has_pending' is never used. [unusedFunction]

^
src/ocsp.c:1060:0: style: The function 'wolfSSL_i2d_OCSP_CERTID' is never used. [unusedFunction]

^
src/ocsp.c:1025:0: style: The function 'wolfSSL_i2d_OCSP_REQUEST_bio' is never used. [unusedFunction]

^
src/ocsp.c:892:0: style: The function 'wolfSSL_i2d_OCSP_RESPONSE' is never used. [unusedFunction]

^
src/ssl.c:10696:0: style: The function 'wolfSSL_i2d_PUBKEY' is never used. [unusedFunction]

^
src/ssl.c:22836:0: style: The function 'wolfSSL_i2d_PrivateKey' is never used. [unusedFunction]

^
IDE/Renesas/cs+/Projects/t4_demo/wolf_main.c:73:0: style: The function 'wolfSSL_init' is never used. [unusedFunction]

^
src/ssl.c:21805:0: style: The function 'wolfSSL_lib_version' is never used. [unusedFunction]

^
src/ssl.c:21827:0: style: The function 'wolfSSL_lib_version_hex' is never used. [unusedFunction]

^
src/ssl.c:12004:0: style: The function 'wolfSSL_load_error_strings' is never used. [unusedFunction]

^
src/tls.c:619:0: style: The function 'wolfSSL_make_eap_keys' is never used. [unusedFunction]

^
src/ssl.c:1941:0: style: The function 'wolfSSL_mutual_auth' is never used. [unusedFunction]

^
src/ssl.c:18047:0: style: The function 'wolfSSL_num_locks' is never used. [unusedFunction]

^
src/tls13.c:12310:0: style: The function 'wolfSSL_preferred_group' is never used. [unusedFunction]

^
src/quic.c:449:0: style: The function 'wolfSSL_quic_add_transport_extensions' is never used. [unusedFunction]

^
src/quic.c:863:0: style: The function 'wolfSSL_quic_forward_secrets' is never used. [unusedFunction]

^
src/quic.c:291:0: style: The function 'wolfSSL_quic_free' is never used. [unusedFunction]

^
src/quic.c:998:0: style: The function 'wolfSSL_quic_get_hp' is never used. [unusedFunction]

^
src/quic.c:1103:0: style: The function 'wolfSSL_quic_get_md' is never used. [unusedFunction]

^
src/quic.c:1218:0: style: The function 'wolfSSL_quic_hkdf' is never used. [unusedFunction]

^
src/quic.c:1179:0: style: The function 'wolfSSL_quic_hkdf_expand' is never used. [unusedFunction]

^
src/quic.c:1142:0: style: The function 'wolfSSL_quic_hkdf_extract' is never used. [unusedFunction]

^
src/quic.c:926:0: style: The function 'wolfSSL_quic_keys_active' is never used. [unusedFunction]

^
src/quic.c:754:0: style: The function 'wolfSSL_quic_receive' is never used. [unusedFunction]

^
src/quic.c:858:0: style: The function 'wolfSSL_quic_send' is never used. [unusedFunction]

^
src/ssl.c:4380:0: style: The function 'wolfSSL_recv' is never used. [unusedFunction]

^
src/ssl.c:4358:0: style: The function 'wolfSSL_send' is never used. [unusedFunction]

^
src/tls13.c:13131:0: style: The function 'wolfSSL_send_SessionTicket' is never used. [unusedFunction]

^
src/ssl.c:17950:0: style: The function 'wolfSSL_set0_verify_cert_store' is never used. [unusedFunction]

^
src/ssl.c:22982:0: style: The function 'wolfSSL_set1_host' is never used. [unusedFunction]

^
src/ssl.c:17975:0: style: The function 'wolfSSL_set1_verify_cert_store' is never used. [unusedFunction]

^
src/ssl.c:17684:0: style: The function 'wolfSSL_set_accept_state' is never used. [unusedFunction]

^
src/ssl.c:17170:0: style: The function 'wolfSSL_set_bio' is never used. [unusedFunction]

^
src/ssl.c:17232:0: style: The function 'wolfSSL_set_client_CA_list' is never used. [unusedFunction]

^
src/ssl.c:16202:0: style: The function 'wolfSSL_set_compression' is never used. [unusedFunction]

^
src/ssl.c:21152:0: style: The function 'wolfSSL_set_connect_state' is never used. [unusedFunction]

^
src/ssl.c:22794:0: style: The function 'wolfSSL_set_dynlock_create_callback' is never used. [unusedFunction]

^
src/ssl.c:22816:0: style: The function 'wolfSSL_set_dynlock_destroy_callback' is never used. [unusedFunction]

^
src/ssl.c:22805:0: style: The function 'wolfSSL_set_dynlock_lock_callback' is never used. [unusedFunction]

^
src/ssl.c:5407:0: style: The function 'wolfSSL_set_group_messages' is never used. [unusedFunction]

^
src/ssl.c:18076:0: style: The function 'wolfSSL_set_id_callback' is never used. [unusedFunction]

^
src/ssl.c:18052:0: style: The function 'wolfSSL_set_locking_callback' is never used. [unusedFunction]

^
src/ssl.c:16612:0: style: The function 'wolfSSL_set_psk_callback_ctx' is never used. [unusedFunction]

^
src/ssl.c:16467:0: style: The function 'wolfSSL_set_psk_client_callback' is never used. [unusedFunction]

^
src/tls13.c:12437:0: style: The function 'wolfSSL_set_psk_client_cs_callback' is never used. [unusedFunction]

^
src/tls13.c:12490:0: style: The function 'wolfSSL_set_psk_client_tls13_callback' is never used. [unusedFunction]

^
src/ssl.c:16523:0: style: The function 'wolfSSL_set_psk_server_callback' is never used. [unusedFunction]

^
src/tls13.c:12541:0: style: The function 'wolfSSL_set_psk_server_tls13_callback' is never used. [unusedFunction]

^
src/ssl.c:16501:0: style: The function 'wolfSSL_set_psk_use_session_callback' is never used. [unusedFunction]

^
src/ssl.c:24291:0: style: The function 'wolfSSL_set_read_ahead' is never used. [unusedFunction]

^
src/ssl.c:17823:0: style: The function 'wolfSSL_set_rfd' is never used. [unusedFunction]

^
src/ssl.c:20409:0: style: The function 'wolfSSL_set_session_id_context' is never used. [unusedFunction]

^
src/ssl.c:17761:0: style: The function 'wolfSSL_set_shutdown' is never used. [unusedFunction]

^
src/ssl.c:14580:0: style: The function 'wolfSSL_set_timeout' is never used. [unusedFunction]

^
src/ssl.c:23843:0: style: The function 'wolfSSL_set_tlsext_status_exts' is never used. [unusedFunction]

^
src/ssl.c:23865:0: style: The function 'wolfSSL_set_tlsext_status_ids' is never used. [unusedFunction]

^
src/ssl.c:2916:0: style: The function 'wolfSSL_set_tmp_dh' is never used. [unusedFunction]

^
src/ssl.c:29984:0: style: The function 'wolfSSL_set_verify_depth' is never used. [unusedFunction]

^
src/ssl.c:11363:0: style: The function 'wolfSSL_set_verify_result' is never used. [unusedFunction]

^
src/ssl.c:17841:0: style: The function 'wolfSSL_set_wfd' is never used. [unusedFunction]

^
src/ssl.c:22009:0: style: The function 'wolfSSL_sk_CIPHER_free' is never used. [unusedFunction]

^
src/ssl.c:25205:0: style: The function 'wolfSSL_sk_GENERIC_free' is never used. [unusedFunction]

^
src/ssl.c:25191:0: style: The function 'wolfSSL_sk_GENERIC_pop_free' is never used. [unusedFunction]

^
src/ssl.c:25199:0: style: The function 'wolfSSL_sk_GENERIC_push' is never used. [unusedFunction]

^
src/ssl.c:23905:0: style: The function 'wolfSSL_sk_SSL_CIPHER_num' is never used. [unusedFunction]

^
src/ssl.c:23914:0: style: The function 'wolfSSL_sk_SSL_CIPHER_value' is never used. [unusedFunction]

^
src/ssl.c:25408:0: style: The function 'wolfSSL_sk_SSL_COMP_num' is never used. [unusedFunction]

^
src/ssl.c:23790:0: style: The function 'wolfSSL_sk_SSL_COMP_zero' is never used. [unusedFunction]

^
src/ssl.c:33358:0: style: The function 'wolfSSL_sk_WOLFSSL_STRING_free' is never used. [unusedFunction]

^
src/ssl.c:33385:0: style: The function 'wolfSSL_sk_WOLFSSL_STRING_num' is never used. [unusedFunction]

^
src/ssl.c:33375:0: style: The function 'wolfSSL_sk_WOLFSSL_STRING_value' is never used. [unusedFunction]

^
src/ssl.c:25083:0: style: The function 'wolfSSL_sk_dup' is never used. [unusedFunction]

^
src/ssl.c:20800:0: style: The function 'wolfSSL_sk_free_node' is never used. [unusedFunction]

^
src/ssl.c:20976:0: style: The function 'wolfSSL_sk_get_node' is never used. [unusedFunction]

^
src/ssl.c:25401:0: style: The function 'wolfSSL_sk_new_null' is never used. [unusedFunction]

^
src/ssl.c:25009:0: style: The function 'wolfSSL_sk_num' is never used. [unusedFunction]

^
src/ssl.c:20811:0: style: The function 'wolfSSL_sk_push_node' is never used. [unusedFunction]

^
src/ssl.c:4481:0: style: The function 'wolfSSL_state' is never used. [unusedFunction]

^
src/ssl.c:23224:0: style: The function 'wolfSSL_state_string_long' is never used. [unusedFunction]

^
src/ssl.c:18065:0: style: The function 'wolfSSL_thread_id' is never used. [unusedFunction]

^
src/ssl.c:10986:0: style: The function 'wolfSSL_use_PrivateKey' is never used. [unusedFunction]

^
src/ssl.c:10998:0: style: The function 'wolfSSL_use_PrivateKey_ASN1' is never used. [unusedFunction]

^
src/ssl.c:11030:0: style: The function 'wolfSSL_use_RSAPrivateKey_ASN1' is never used. [unusedFunction]

^
src/ssl.c:11214:0: style: The function 'wolfSSL_use_RSAPrivateKey_file' is never used. [unusedFunction]

^
src/ssl.c:11041:0: style: The function 'wolfSSL_use_certificate' is never used. [unusedFunction]

^
src/ssl.c:11060:0: style: The function 'wolfSSL_use_certificate_ASN1' is never used. [unusedFunction]

^
src/ssl.c:17016:0: style: The function 'wolfSSL_use_certificate_chain_buffer' is never used. [unusedFunction]

^
src/ssl.c:11133:0: style: The function 'wolfSSL_use_certificate_chain_file_format' is never used. [unusedFunction]

^
src/ssl.c:16587:0: style: The function 'wolfSSL_use_psk_identity_hint' is never used. [unusedFunction]

^
src/ssl.c:31396:0: style: The function 'wolfSSL_version' is never used. [unusedFunction]

^
src/ssl.c:4525:0: style: The function 'wolfSSL_want' is never used. [unusedFunction]

^
src/ssl.c:16220:0: style: The function 'wolfSSL_writev' is never used. [unusedFunction]

^
src/ssl.c:18976:0: style: The function 'wolfSSLeay' is never used. [unusedFunction]

^
src/ssl.c:18986:0: style: The function 'wolfSSLeay_version' is never used. [unusedFunction]

^
src/tls.c:13712:0: style: The function 'wolfTLS_client_method' is never used. [unusedFunction]

^
src/tls.c:14066:0: style: The function 'wolfTLS_server_method' is never used. [unusedFunction]

^
IDE/VisualDSP/wolf_tasks.c:84:0: style: The function 'wolf_task_start' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4409:0: style: The function 'wolfcrypt_mp_exptmod_nct' is never used. [unusedFunction]

^
wolfcrypt/src/tfm.c:4865:0: style: The function 'wolfcrypt_mp_prime_is_prime' is never used. [unusedFunction]

^
IDE/ECLIPSE/DEOS/tls_wolfssl.c:568:0: style: The function 'wolfsslRunTests' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/time-dummy.c:29:0: style: The function 'wolfssl_MDK_gmtime' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:106:0: style: The function 'wolfssl_accept' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:79:0: style: The function 'wolfssl_connect' is never used. [unusedFunction]

^
linuxkm/pie_redirect_table.c:52:0: style: The function 'wolfssl_linuxkm_get_pie_redirect_table' is never used. [unusedFunction]

^
src/ssl.c:362:0: style: The function 'wolfssl_make_rng' is never used. [unusedFunction]

^
src/ssl.c:25217:0: style: The function 'wolfssl_sk_pop_type' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:179:0: style: The function 'wolfssl_sleep' is never used. [unusedFunction]

^
IDE/MDK-ARM/MDK-ARM/wolfSSL/wolfssl_MDK_ARM.c:186:0: style: The function 'wolfssl_tcp_select' is never used. [unusedFunction]

^
IDE/ECLIPSE/RTTHREAD/wolfssl_test.c:25:0: style: The function 'wolfssl_test' is never used. [unusedFunction]

^
IDE/Renesas/e2studio/RA6M3/benchmark-wolfcrypt/src/wolfssl_thread_entry.c:26:0: style: The function 'wolfssl_thread_entry' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

